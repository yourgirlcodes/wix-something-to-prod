"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.rule = void 0;
const flynt_engine_1 = require("@wix/flynt-engine");
const fqdn_utils_1 = require("../../fqdn-utils");
const wix_protos_1 = require("@wix/wix-protos");
exports.rule = {
    description: 'SPI Errors in a method must have unique names',
    severity: flynt_engine_1.Severity.Error,
    strict: true,
    run(ctx) {
        ctx.visit({
            visitService(service) {
                if (!(0, fqdn_utils_1.isSpiService)(service)) {
                    return false;
                }
            },
            visitMethod(method) {
                const errors = method.options
                    .getTypedOption(wix_protos_1.wix.spi.error)
                    .filter(opt => opt.value.name);
                if (errors.length > 0) {
                    const duplicateErrorName = (0, fqdn_utils_1.findDuplicate)(errors, 'name');
                    ctx.assert(!duplicateErrorName, {
                        errorAt: duplicateErrorName,
                        message: `the method '${method.name}' has an error with non unique name '${duplicateErrorName?.value.name}'`
                    });
                }
            }
        });
    }
};
//# sourceMappingURL=index.js.map