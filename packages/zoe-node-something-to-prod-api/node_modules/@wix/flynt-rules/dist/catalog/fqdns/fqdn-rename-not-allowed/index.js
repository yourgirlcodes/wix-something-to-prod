"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.rule = void 0;
const flynt_engine_1 = require("@wix/flynt-engine");
const wix_protos_1 = require("@wix/wix-protos");
const fqdn_utils_1 = require("../../fqdn-utils");
exports.rule = {
    description: 'fqdn rename is not allowed if a service has events and/or callbacks',
    moreInfoUrl: 'https://bo.wix.com/wix-docs/rnd/platformization-guidelines/spi---service-provider-interface#platformization-guidelines_spi---service-provider-interface_spi---service-provider-interface',
    stateful: true,
    severity: flynt_engine_1.Severity.Error,
    run(ctx) {
        const serviceEntities = new Map();
        ctx.visit({
            visitService(service) {
                const mainEntity = (0, fqdn_utils_1.resolveMainEntityMessage)(service);
                if (mainEntity) {
                    serviceEntities.set(mainEntity, service);
                }
            }
        });
        ctx.visitModified({
            visitMessage(message, prevMessage) {
                const prevFqdn = prevMessage.options.getTypedOption(wix_protos_1.wix.api.entity)?.value.fqdn;
                if (prevFqdn) {
                    const currentFqdn = message.options.getTypedOption(wix_protos_1.wix.api.entity)?.value.fqdn;
                    if (currentFqdn) {
                        if (currentFqdn !== prevFqdn) {
                            const hasBackwardCompatibilityFqdn = !message.options.getTypedOption(wix_protos_1.wix.api.entity)?.value.oldFqdnForBackwardsCompatibility;
                            if (hasBackwardCompatibilityFqdn) {
                                const svc = serviceEntities.get(message);
                                if (svc) {
                                    ctx.assert(svc.options.getTypedOption(wix_protos_1.wix.api.event).length === 0, {
                                        errorAt: message,
                                        message: `the fqdn '${prevFqdn}' cannot be renamed to '${currentFqdn}' because the service '${svc.name}' has an event`
                                    });
                                    ctx.visitFrom(svc, {
                                        visitMethod(method) {
                                            ctx.assert(method.options.getTypedOption(wix_protos_1.wix.api.callback).length === 0, {
                                                errorAt: message,
                                                message: `the fqdn '${prevFqdn}' cannot be renamed to '${currentFqdn}' because method '${method.name}' has a callback`
                                            });
                                        }
                                    });
                                }
                            }
                        }
                    }
                }
            }
        });
    }
};
//# sourceMappingURL=index.js.map