"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.rule = void 0;
const flynt_engine_1 = require("@wix/flynt-engine");
const wix_protos_1 = require("@wix/wix-protos");
exports.rule = {
    description: 'An event or callback payload must contain the *fully qualified name* of an existing message',
    moreInfoUrl: 'https://bo.wix.com/wix-docs/rnd/platformization-guidelines/events#platformization-guidelines_events_13-decide-between-event-and-callback',
    severity: flynt_engine_1.Severity.Error,
    graceUntil: new Date('2022-01-24'),
    run(ctx) {
        function validatePayload(events) {
            events
                .forEach(optPayload => {
                const payloadFqn = optPayload.value.payload;
                if (payloadFqn) {
                    ctx.assertTypeExists(payloadFqn, flynt_engine_1.TypeName.Message, {
                        errorAt: optPayload,
                        message: 'An event or callback payload must have an fqn which references an existing message (Make sure to use the fully qualified name of the message including package name)'
                    });
                }
            });
        }
        ctx.visit({
            visitService(service) {
                validatePayload(service.options.getTypedOption(wix_protos_1.wix.api.event));
            },
            visitMethod(method) {
                validatePayload(method.options.getTypedOption(wix_protos_1.wix.api.callback));
            }
        });
    }
};
//# sourceMappingURL=index.js.map