"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.rule = void 0;
const flynt_engine_1 = require("@wix/flynt-engine");
const wix_protos_1 = require("@wix/wix-protos");
const array_utils_1 = require("../../array-utils");
exports.rule = {
    description: 'Deprecation targets removal date is less than 30 days',
    severity: flynt_engine_1.Severity.Warning,
    moreInfoUrl: 'https://bo.wix.com/wix-docs/rnd/platformization-guidelines/protobuf#platformization-guidelines_protobuf_deprecation',
    run(ctx) {
        ctx.visit({
            visitService(service) {
                assertTargetRemovalDateLessThen30Days(ctx, service, service.options.getTypedOption(wix_protos_1.wix.api.service_deprecated));
                assertTargetRemovalDateLessThen30Days(ctx, service, service.options.getTypedOption(wix_protos_1.wix.api.event_deprecated));
            },
            visitField(field) {
                assertTargetRemovalDateLessThen30Days(ctx, field, field.options.getTypedOption(wix_protos_1.wix.api.field_deprecated));
            },
            visitMessage(message) {
                assertTargetRemovalDateLessThen30Days(ctx, message, message.options.getTypedOption(wix_protos_1.wix.api.message_deprecated));
            },
            visitMethod(method) {
                assertTargetRemovalDateLessThen30Days(ctx, method, method.options.getTypedOption(wix_protos_1.wix.api.deprecated));
            }
        });
    }
};
function assertTargetRemovalDateLessThen30Days(ctx, type, targetRemovalDateOptions) {
    if (targetRemovalDateOptions) {
        const options = (0, array_utils_1.isArray)(targetRemovalDateOptions) ? targetRemovalDateOptions : [targetRemovalDateOptions];
        options.forEach(opt => {
            const removalDate = opt.value.targetRemovalDate;
            if (removalDate) {
                const dateDiffInDays = getDateDiffInDays(new Date(), new Date(removalDate));
                if (dateDiffInDays < 30 && dateDiffInDays > 0) {
                    ctx.report({
                        errorAt: opt,
                        message: `deprecated target removal date for '${type.name}' will be in ${Math.floor(dateDiffInDays)} days`
                    });
                }
                else if (dateDiffInDays < 0) {
                    ctx.report({
                        errorAt: opt,
                        message: `deprecated target removal date for '${type.name}' is already past`
                    });
                }
            }
        });
    }
}
function getDateDiffInDays(from, to) {
    return (to.getTime() - from.getTime()) / (1000 * 60 * 60 * 24);
}
//# sourceMappingURL=index.js.map