"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.rule = void 0;
const flynt_engine_1 = require("@wix/flynt-engine");
const wix_protos_1 = require("@wix/wix-protos");
const annotations_utils_1 = require("../../annotations-utils");
function getRelativeFieldName(field) {
    const [_, ...paths] = field.split('.');
    return paths.join('.');
}
exports.rule = {
    description: 'A field in the writable method must be immutable',
    moreInfoUrl: 'https://github.com/wix-private/server-infra/blob/master/framework/docs/adr/adr-018-readonly-and-immutable.md',
    breakIfNew: true,
    run(ctx) {
        ctx.visit({
            visitMethod(method) {
                method.options.getTypedOption(wix_protos_1.wix.api.writable)
                    .map(field => (0, annotations_utils_1.findFieldByPath)(method.request, getRelativeFieldName(field.value)))
                    .forEach(field => {
                    if (field && field.typeName === flynt_engine_1.TypeName.Field) {
                        const immutableOption = field.options.getTypedOption(wix_protos_1.wix.api.immutable);
                        ctx.assert(immutableOption && immutableOption.value === true, {
                            errorAt: field,
                            message: `The field '${field.name}' must have '(wix.api.immutable)=true' annotation because it is 'wix.api.writable' in the method '${method.name}'`
                        });
                    }
                    else {
                        ctx.report({
                            errorAt: method,
                            message: `Invalid field in 'writable' annotation at the method '${method.name}'`
                        });
                    }
                });
            }
        });
    }
};
//# sourceMappingURL=index.js.map