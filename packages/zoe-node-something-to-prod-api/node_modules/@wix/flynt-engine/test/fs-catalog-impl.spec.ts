import {FsCatalog} from '../lib/fs-catalog';

describe('rules catalog', () => {
  describe('validations', () => {
    const catalog = new FsCatalog('./test/catalogs/valid-catalog');

    it('does not allow to add a rule with the same name as an existing rule', () => {
      catalog.addRuleDef('/y');
      expect(() => catalog.addRuleDef('/y')).toThrow(/already exists/);
    });
  });

  describe('docs', () => {
    const catalog = new FsCatalog('./test/catalogs/valid-catalog');

    it('returns doc url relative to docs url', async () => {
      const docPath = './test/catalogs/valid-catalog/category-name/js-rule/README.md';
      const docUrl = catalog.getDocUrl(docPath);
      expect(docUrl).toEqual('https://github.com/wix-private/flynt/tree/master/packages/engine/test/catalogs/valid-catalog/category-name/js-rule/README.md');
    });

    it('throws if docPath is empty', async () => {
      expect(() => catalog.getDocUrl('')).toThrow(/non empty/);
    });
  });
});
