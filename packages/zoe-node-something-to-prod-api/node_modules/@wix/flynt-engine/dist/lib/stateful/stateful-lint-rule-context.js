"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.StatefulLintRuleContextImpl = void 0;
const lint_rule_context_1 = require("../lint-rule-context");
const proto_syntax_tree_1 = require("@wix/proto-syntax-tree");
const stateful_visitor_adapter_1 = require("./stateful-visitor-adapter");
const state_provider_1 = require("./state-provider");
const assert_1 = __importDefault(require("assert"));
class StatefulLintRuleContextImpl extends lint_rule_context_1.LintRuleContextImpl {
    constructor(ruleName, rule, config, st, prevSyntaxTree) {
        super(ruleName, rule, config, st);
        this.prevSt = prevSyntaxTree;
    }
    async runRule() {
        await this.rule.run(this);
    }
    doVisit(st, visitor) {
        (0, proto_syntax_tree_1.visitSyntaxTree)(st, this.skipNonLintedElements(visitor));
    }
    doVisitFrom(from, visitTree, visitor) {
        (0, assert_1.default)(from.st === visitTree);
        (0, proto_syntax_tree_1.visitSyntaxTreeFrom)(from, this.skipNonLintedElements(visitor));
    }
    visit(visitor) {
        this.doVisit(this.st, (0, stateful_visitor_adapter_1.adaptStatefulVisitor)(visitor, new state_provider_1.PrevStateProviderImpl(this.prevSt)));
    }
    visitFrom(from, visitor) {
        this.doVisitFrom(from, this.st, (0, stateful_visitor_adapter_1.adaptStatefulVisitor)(visitor, new state_provider_1.PrevStateProviderImpl(this.prevSt)));
    }
    visitAdded(visitor) {
        this.doVisit(this.st, (0, stateful_visitor_adapter_1.adaptAddedVisitor)(visitor, new state_provider_1.PrevStateProviderImpl(this.prevSt)));
    }
    visitAddedFrom(from, visitor) {
        this.doVisitFrom(from, this.st, (0, stateful_visitor_adapter_1.adaptAddedVisitor)(visitor, new state_provider_1.PrevStateProviderImpl(this.prevSt)));
    }
    visitModified(visitor) {
        this.doVisit(this.st, (0, stateful_visitor_adapter_1.adaptModifiedVisitor)(visitor, new state_provider_1.PrevStateProviderImpl(this.prevSt)));
    }
    visitModifiedFrom(from, visitor) {
        this.doVisitFrom(from, this.st, (0, stateful_visitor_adapter_1.adaptModifiedVisitor)(visitor, new state_provider_1.PrevStateProviderImpl(this.prevSt)));
    }
    visitRemoved(visitor) {
        this.doVisit(this.prevSt, (0, stateful_visitor_adapter_1.adaptRemovedVisitor)(visitor, new state_provider_1.NewStateProviderImpl(this.st)));
    }
    visitRemovedFrom(from, visitor) {
        const prevFrom = new state_provider_1.PrevStateProviderImpl(this.prevSt).getState(from);
        if (prevFrom) {
            this.doVisitFrom(prevFrom, this.prevSt, (0, stateful_visitor_adapter_1.adaptRemovedVisitor)(visitor, new state_provider_1.NewStateProviderImpl(this.st)));
        }
    }
}
exports.StatefulLintRuleContextImpl = StatefulLintRuleContextImpl;
//# sourceMappingURL=stateful-lint-rule-context.js.map