"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isRuleDisabled = exports.isRuleDisabledInComment = void 0;
function getRulesInComment(comment) {
    return comment
        .split(/\n/)
        .map(line => line.trim())
        .map(line => line.match(/^flynt-disable\s+(.*)/))
        .map(item => item?.[1].trim().split(/\s*,\s*/))
        .flat()
        .filter(rule => !!rule);
}
function isRuleDisabledInComment(comment, ruleName) {
    if (comment) {
        const rules = getRulesInComment(comment);
        return rules.includes(ruleName);
    }
    return false;
}
exports.isRuleDisabledInComment = isRuleDisabledInComment;
function isRuleDisabled(scInfo, ruleName) {
    return isRuleDisabledInComment(scInfo.leadingComments, ruleName)
        || isRuleDisabledInComment(scInfo.trailingComments, ruleName)
        || !!scInfo.leadingDetachedComments.find(comment => isRuleDisabledInComment(comment, ruleName));
}
exports.isRuleDisabled = isRuleDisabled;
//# sourceMappingURL=comment-parser.js.map