"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.PreLoadedCatalog = void 0;
const catalog_1 = require("./catalog");
const path_1 = __importDefault(require("path"));
class PreLoadedCatalog extends catalog_1.BaseCatalogImpl {
    constructor(catalogDir, info) {
        super(catalogDir);
        this.loadRuleDefinitions(info.rules);
    }
    loadRuleDefinitions(rules) {
        for (const ruleInfo of rules) {
            const fullRulePath = path_1.default.join(this.catalogDir, ruleInfo.path);
            const ruleDef = new PreloadedRule(fullRulePath, ruleInfo);
            this.ruleDefinitions.push(ruleDef);
        }
    }
    getDocUrl(ruleDocPath) {
        return ruleDocPath;
    }
}
exports.PreLoadedCatalog = PreLoadedCatalog;
class PreloadedRule {
    constructor(fullRulePath, ruleInfo) {
        this.ruleInfo = ruleInfo;
        this.name = path_1.default.basename(fullRulePath);
        this.path = fullRulePath;
    }
    async getDocPath() {
        return this.ruleInfo.docUrl;
    }
    async getRule() {
        return (await this.ruleInfo.ruleModule).rule;
    }
}
//# sourceMappingURL=pre-loaded-catalog.js.map