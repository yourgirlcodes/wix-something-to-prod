import * as z from 'zod';
declare const artifactInfoSchema: z.ZodObject<{
    cdnUrl: z.ZodOptional<z.ZodObject<{
        versioned: z.ZodString;
        unversioned: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        versioned: string;
        unversioned: string;
    }, {
        versioned: string;
        unversioned: string;
    }>>;
    dockerImageName: z.ZodOptional<z.ZodString>;
    npmPackageName: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    cdnUrl?: {
        versioned: string;
        unversioned: string;
    } | undefined;
    dockerImageName?: string | undefined;
    npmPackageName?: string | undefined;
}, {
    cdnUrl?: {
        versioned: string;
        unversioned: string;
    } | undefined;
    dockerImageName?: string | undefined;
    npmPackageName?: string | undefined;
}>;
declare const packageInfoSchema: z.ZodObject<{
    id: z.ZodString;
    fingerprint: z.ZodString;
    artifact: z.ZodOptional<z.ZodObject<{
        cdnUrl: z.ZodOptional<z.ZodObject<{
            versioned: z.ZodString;
            unversioned: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            versioned: string;
            unversioned: string;
        }, {
            versioned: string;
            unversioned: string;
        }>>;
        dockerImageName: z.ZodOptional<z.ZodString>;
        npmPackageName: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        cdnUrl?: {
            versioned: string;
            unversioned: string;
        } | undefined;
        dockerImageName?: string | undefined;
        npmPackageName?: string | undefined;
    }, {
        cdnUrl?: {
            versioned: string;
            unversioned: string;
        } | undefined;
        dockerImageName?: string | undefined;
        npmPackageName?: string | undefined;
    }>>;
    fullPath: z.ZodString;
    relativePath: z.ZodString;
    monorepoDependencies: z.ZodObject<{
        direct: z.ZodArray<z.ZodString, "many">;
        all: z.ZodArray<z.ZodString, "many">;
    }, "strip", z.ZodTypeAny, {
        direct: string[];
        all: string[];
    }, {
        direct: string[];
        all: string[];
    }>;
}, "strip", z.ZodTypeAny, {
    artifact?: {
        cdnUrl?: {
            versioned: string;
            unversioned: string;
        } | undefined;
        dockerImageName?: string | undefined;
        npmPackageName?: string | undefined;
    } | undefined;
    id: string;
    fingerprint: string;
    fullPath: string;
    relativePath: string;
    monorepoDependencies: {
        direct: string[];
        all: string[];
    };
}, {
    artifact?: {
        cdnUrl?: {
            versioned: string;
            unversioned: string;
        } | undefined;
        dockerImageName?: string | undefined;
        npmPackageName?: string | undefined;
    } | undefined;
    id: string;
    fingerprint: string;
    fullPath: string;
    relativePath: string;
    monorepoDependencies: {
        direct: string[];
        all: string[];
    };
}>;
declare const ciBuildInfoV1Schema: z.ZodObject<{
    isFalcon: z.ZodOptional<z.ZodBoolean>;
    falconBuildRunId: z.ZodString;
    flakinessDetectionBuildRun: z.ZodBoolean;
    buildLogLink: z.ZodString;
    repoRootFullPath: z.ZodString;
    vcs: z.ZodObject<{
        repoName: z.ZodString;
        repoOwner: z.ZodString;
        url: z.ZodString;
        commitHash: z.ZodString;
        branch: z.ZodString;
        pullRequest: z.ZodOptional<z.ZodObject<{
            fromBranch: z.ZodString;
            prNumber: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            fromBranch: string;
            prNumber: string;
        }, {
            fromBranch: string;
            prNumber: string;
        }>>;
    }, "strip", z.ZodTypeAny, {
        pullRequest?: {
            fromBranch: string;
            prNumber: string;
        } | undefined;
        repoName: string;
        repoOwner: string;
        url: string;
        commitHash: string;
        branch: string;
    }, {
        pullRequest?: {
            fromBranch: string;
            prNumber: string;
        } | undefined;
        repoName: string;
        repoOwner: string;
        url: string;
        commitHash: string;
        branch: string;
    }>;
    packages: z.ZodRecord<z.ZodString, z.ZodObject<{
        id: z.ZodString;
        fingerprint: z.ZodString;
        artifact: z.ZodOptional<z.ZodObject<{
            cdnUrl: z.ZodOptional<z.ZodObject<{
                versioned: z.ZodString;
                unversioned: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                versioned: string;
                unversioned: string;
            }, {
                versioned: string;
                unversioned: string;
            }>>;
            dockerImageName: z.ZodOptional<z.ZodString>;
            npmPackageName: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            cdnUrl?: {
                versioned: string;
                unversioned: string;
            } | undefined;
            dockerImageName?: string | undefined;
            npmPackageName?: string | undefined;
        }, {
            cdnUrl?: {
                versioned: string;
                unversioned: string;
            } | undefined;
            dockerImageName?: string | undefined;
            npmPackageName?: string | undefined;
        }>>;
        fullPath: z.ZodString;
        relativePath: z.ZodString;
        monorepoDependencies: z.ZodObject<{
            direct: z.ZodArray<z.ZodString, "many">;
            all: z.ZodArray<z.ZodString, "many">;
        }, "strip", z.ZodTypeAny, {
            direct: string[];
            all: string[];
        }, {
            direct: string[];
            all: string[];
        }>;
    }, "strip", z.ZodTypeAny, {
        artifact?: {
            cdnUrl?: {
                versioned: string;
                unversioned: string;
            } | undefined;
            dockerImageName?: string | undefined;
            npmPackageName?: string | undefined;
        } | undefined;
        id: string;
        fingerprint: string;
        fullPath: string;
        relativePath: string;
        monorepoDependencies: {
            direct: string[];
            all: string[];
        };
    }, {
        artifact?: {
            cdnUrl?: {
                versioned: string;
                unversioned: string;
            } | undefined;
            dockerImageName?: string | undefined;
            npmPackageName?: string | undefined;
        } | undefined;
        id: string;
        fingerprint: string;
        fullPath: string;
        relativePath: string;
        monorepoDependencies: {
            direct: string[];
            all: string[];
        };
    }>>;
}, "strip", z.ZodTypeAny, {
    isFalcon?: boolean | undefined;
    falconBuildRunId: string;
    flakinessDetectionBuildRun: boolean;
    buildLogLink: string;
    repoRootFullPath: string;
    vcs: {
        pullRequest?: {
            fromBranch: string;
            prNumber: string;
        } | undefined;
        repoName: string;
        repoOwner: string;
        url: string;
        commitHash: string;
        branch: string;
    };
    packages: Record<string, {
        artifact?: {
            cdnUrl?: {
                versioned: string;
                unversioned: string;
            } | undefined;
            dockerImageName?: string | undefined;
            npmPackageName?: string | undefined;
        } | undefined;
        id: string;
        fingerprint: string;
        fullPath: string;
        relativePath: string;
        monorepoDependencies: {
            direct: string[];
            all: string[];
        };
    }>;
}, {
    isFalcon?: boolean | undefined;
    falconBuildRunId: string;
    flakinessDetectionBuildRun: boolean;
    buildLogLink: string;
    repoRootFullPath: string;
    vcs: {
        pullRequest?: {
            fromBranch: string;
            prNumber: string;
        } | undefined;
        repoName: string;
        repoOwner: string;
        url: string;
        commitHash: string;
        branch: string;
    };
    packages: Record<string, {
        artifact?: {
            cdnUrl?: {
                versioned: string;
                unversioned: string;
            } | undefined;
            dockerImageName?: string | undefined;
            npmPackageName?: string | undefined;
        } | undefined;
        id: string;
        fingerprint: string;
        fullPath: string;
        relativePath: string;
        monorepoDependencies: {
            direct: string[];
            all: string[];
        };
    }>;
}>;
declare const ciBuildInfoSchema: z.ZodObject<{
    v1: z.ZodObject<{
        isFalcon: z.ZodOptional<z.ZodBoolean>;
        falconBuildRunId: z.ZodString;
        flakinessDetectionBuildRun: z.ZodBoolean;
        buildLogLink: z.ZodString;
        repoRootFullPath: z.ZodString;
        vcs: z.ZodObject<{
            repoName: z.ZodString;
            repoOwner: z.ZodString;
            url: z.ZodString;
            commitHash: z.ZodString;
            branch: z.ZodString;
            pullRequest: z.ZodOptional<z.ZodObject<{
                fromBranch: z.ZodString;
                prNumber: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                fromBranch: string;
                prNumber: string;
            }, {
                fromBranch: string;
                prNumber: string;
            }>>;
        }, "strip", z.ZodTypeAny, {
            pullRequest?: {
                fromBranch: string;
                prNumber: string;
            } | undefined;
            repoName: string;
            repoOwner: string;
            url: string;
            commitHash: string;
            branch: string;
        }, {
            pullRequest?: {
                fromBranch: string;
                prNumber: string;
            } | undefined;
            repoName: string;
            repoOwner: string;
            url: string;
            commitHash: string;
            branch: string;
        }>;
        packages: z.ZodRecord<z.ZodString, z.ZodObject<{
            id: z.ZodString;
            fingerprint: z.ZodString;
            artifact: z.ZodOptional<z.ZodObject<{
                cdnUrl: z.ZodOptional<z.ZodObject<{
                    versioned: z.ZodString;
                    unversioned: z.ZodString;
                }, "strip", z.ZodTypeAny, {
                    versioned: string;
                    unversioned: string;
                }, {
                    versioned: string;
                    unversioned: string;
                }>>;
                dockerImageName: z.ZodOptional<z.ZodString>;
                npmPackageName: z.ZodOptional<z.ZodString>;
            }, "strip", z.ZodTypeAny, {
                cdnUrl?: {
                    versioned: string;
                    unversioned: string;
                } | undefined;
                dockerImageName?: string | undefined;
                npmPackageName?: string | undefined;
            }, {
                cdnUrl?: {
                    versioned: string;
                    unversioned: string;
                } | undefined;
                dockerImageName?: string | undefined;
                npmPackageName?: string | undefined;
            }>>;
            fullPath: z.ZodString;
            relativePath: z.ZodString;
            monorepoDependencies: z.ZodObject<{
                direct: z.ZodArray<z.ZodString, "many">;
                all: z.ZodArray<z.ZodString, "many">;
            }, "strip", z.ZodTypeAny, {
                direct: string[];
                all: string[];
            }, {
                direct: string[];
                all: string[];
            }>;
        }, "strip", z.ZodTypeAny, {
            artifact?: {
                cdnUrl?: {
                    versioned: string;
                    unversioned: string;
                } | undefined;
                dockerImageName?: string | undefined;
                npmPackageName?: string | undefined;
            } | undefined;
            id: string;
            fingerprint: string;
            fullPath: string;
            relativePath: string;
            monorepoDependencies: {
                direct: string[];
                all: string[];
            };
        }, {
            artifact?: {
                cdnUrl?: {
                    versioned: string;
                    unversioned: string;
                } | undefined;
                dockerImageName?: string | undefined;
                npmPackageName?: string | undefined;
            } | undefined;
            id: string;
            fingerprint: string;
            fullPath: string;
            relativePath: string;
            monorepoDependencies: {
                direct: string[];
                all: string[];
            };
        }>>;
    }, "strip", z.ZodTypeAny, {
        isFalcon?: boolean | undefined;
        falconBuildRunId: string;
        flakinessDetectionBuildRun: boolean;
        buildLogLink: string;
        repoRootFullPath: string;
        vcs: {
            pullRequest?: {
                fromBranch: string;
                prNumber: string;
            } | undefined;
            repoName: string;
            repoOwner: string;
            url: string;
            commitHash: string;
            branch: string;
        };
        packages: Record<string, {
            artifact?: {
                cdnUrl?: {
                    versioned: string;
                    unversioned: string;
                } | undefined;
                dockerImageName?: string | undefined;
                npmPackageName?: string | undefined;
            } | undefined;
            id: string;
            fingerprint: string;
            fullPath: string;
            relativePath: string;
            monorepoDependencies: {
                direct: string[];
                all: string[];
            };
        }>;
    }, {
        isFalcon?: boolean | undefined;
        falconBuildRunId: string;
        flakinessDetectionBuildRun: boolean;
        buildLogLink: string;
        repoRootFullPath: string;
        vcs: {
            pullRequest?: {
                fromBranch: string;
                prNumber: string;
            } | undefined;
            repoName: string;
            repoOwner: string;
            url: string;
            commitHash: string;
            branch: string;
        };
        packages: Record<string, {
            artifact?: {
                cdnUrl?: {
                    versioned: string;
                    unversioned: string;
                } | undefined;
                dockerImageName?: string | undefined;
                npmPackageName?: string | undefined;
            } | undefined;
            id: string;
            fingerprint: string;
            fullPath: string;
            relativePath: string;
            monorepoDependencies: {
                direct: string[];
                all: string[];
            };
        }>;
    }>;
    v2: z.ZodObject<{
        isFalcon: z.ZodOptional<z.ZodBoolean>;
        falconBuildRunId: z.ZodString;
        flakinessDetectionBuildRun: z.ZodBoolean;
        buildLogLink: z.ZodString;
        repoRootFullPath: z.ZodString;
        vcs: z.ZodObject<{
            repoName: z.ZodString;
            repoOwner: z.ZodString;
            url: z.ZodString;
            commitHash: z.ZodString;
            branch: z.ZodString;
            pullRequest: z.ZodOptional<z.ZodObject<{
                fromBranch: z.ZodString;
                prNumber: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                fromBranch: string;
                prNumber: string;
            }, {
                fromBranch: string;
                prNumber: string;
            }>>;
        }, "strip", z.ZodTypeAny, {
            pullRequest?: {
                fromBranch: string;
                prNumber: string;
            } | undefined;
            repoName: string;
            repoOwner: string;
            url: string;
            commitHash: string;
            branch: string;
        }, {
            pullRequest?: {
                fromBranch: string;
                prNumber: string;
            } | undefined;
            repoName: string;
            repoOwner: string;
            url: string;
            commitHash: string;
            branch: string;
        }>;
        packages: z.ZodRecord<z.ZodString, z.ZodObject<{
            id: z.ZodString;
            fingerprint: z.ZodString;
            artifact: z.ZodOptional<z.ZodObject<{
                cdnUrl: z.ZodOptional<z.ZodObject<{
                    versioned: z.ZodString;
                    unversioned: z.ZodString;
                }, "strip", z.ZodTypeAny, {
                    versioned: string;
                    unversioned: string;
                }, {
                    versioned: string;
                    unversioned: string;
                }>>;
                dockerImageName: z.ZodOptional<z.ZodString>;
                npmPackageName: z.ZodOptional<z.ZodString>;
            }, "strip", z.ZodTypeAny, {
                cdnUrl?: {
                    versioned: string;
                    unversioned: string;
                } | undefined;
                dockerImageName?: string | undefined;
                npmPackageName?: string | undefined;
            }, {
                cdnUrl?: {
                    versioned: string;
                    unversioned: string;
                } | undefined;
                dockerImageName?: string | undefined;
                npmPackageName?: string | undefined;
            }>>;
            fullPath: z.ZodString;
            relativePath: z.ZodString;
            monorepoDependencies: z.ZodObject<{
                direct: z.ZodArray<z.ZodString, "many">;
                all: z.ZodArray<z.ZodString, "many">;
            }, "strip", z.ZodTypeAny, {
                direct: string[];
                all: string[];
            }, {
                direct: string[];
                all: string[];
            }>;
        }, "strip", z.ZodTypeAny, {
            artifact?: {
                cdnUrl?: {
                    versioned: string;
                    unversioned: string;
                } | undefined;
                dockerImageName?: string | undefined;
                npmPackageName?: string | undefined;
            } | undefined;
            id: string;
            fingerprint: string;
            fullPath: string;
            relativePath: string;
            monorepoDependencies: {
                direct: string[];
                all: string[];
            };
        }, {
            artifact?: {
                cdnUrl?: {
                    versioned: string;
                    unversioned: string;
                } | undefined;
                dockerImageName?: string | undefined;
                npmPackageName?: string | undefined;
            } | undefined;
            id: string;
            fingerprint: string;
            fullPath: string;
            relativePath: string;
            monorepoDependencies: {
                direct: string[];
                all: string[];
            };
        }>>;
    }, "strip", z.ZodTypeAny, {
        isFalcon?: boolean | undefined;
        falconBuildRunId: string;
        flakinessDetectionBuildRun: boolean;
        buildLogLink: string;
        repoRootFullPath: string;
        vcs: {
            pullRequest?: {
                fromBranch: string;
                prNumber: string;
            } | undefined;
            repoName: string;
            repoOwner: string;
            url: string;
            commitHash: string;
            branch: string;
        };
        packages: Record<string, {
            artifact?: {
                cdnUrl?: {
                    versioned: string;
                    unversioned: string;
                } | undefined;
                dockerImageName?: string | undefined;
                npmPackageName?: string | undefined;
            } | undefined;
            id: string;
            fingerprint: string;
            fullPath: string;
            relativePath: string;
            monorepoDependencies: {
                direct: string[];
                all: string[];
            };
        }>;
    }, {
        isFalcon?: boolean | undefined;
        falconBuildRunId: string;
        flakinessDetectionBuildRun: boolean;
        buildLogLink: string;
        repoRootFullPath: string;
        vcs: {
            pullRequest?: {
                fromBranch: string;
                prNumber: string;
            } | undefined;
            repoName: string;
            repoOwner: string;
            url: string;
            commitHash: string;
            branch: string;
        };
        packages: Record<string, {
            artifact?: {
                cdnUrl?: {
                    versioned: string;
                    unversioned: string;
                } | undefined;
                dockerImageName?: string | undefined;
                npmPackageName?: string | undefined;
            } | undefined;
            id: string;
            fingerprint: string;
            fullPath: string;
            relativePath: string;
            monorepoDependencies: {
                direct: string[];
                all: string[];
            };
        }>;
    }>;
}, "strip", z.ZodTypeAny, {
    v1: {
        isFalcon?: boolean | undefined;
        falconBuildRunId: string;
        flakinessDetectionBuildRun: boolean;
        buildLogLink: string;
        repoRootFullPath: string;
        vcs: {
            pullRequest?: {
                fromBranch: string;
                prNumber: string;
            } | undefined;
            repoName: string;
            repoOwner: string;
            url: string;
            commitHash: string;
            branch: string;
        };
        packages: Record<string, {
            artifact?: {
                cdnUrl?: {
                    versioned: string;
                    unversioned: string;
                } | undefined;
                dockerImageName?: string | undefined;
                npmPackageName?: string | undefined;
            } | undefined;
            id: string;
            fingerprint: string;
            fullPath: string;
            relativePath: string;
            monorepoDependencies: {
                direct: string[];
                all: string[];
            };
        }>;
    };
    v2: {
        isFalcon?: boolean | undefined;
        falconBuildRunId: string;
        flakinessDetectionBuildRun: boolean;
        buildLogLink: string;
        repoRootFullPath: string;
        vcs: {
            pullRequest?: {
                fromBranch: string;
                prNumber: string;
            } | undefined;
            repoName: string;
            repoOwner: string;
            url: string;
            commitHash: string;
            branch: string;
        };
        packages: Record<string, {
            artifact?: {
                cdnUrl?: {
                    versioned: string;
                    unversioned: string;
                } | undefined;
                dockerImageName?: string | undefined;
                npmPackageName?: string | undefined;
            } | undefined;
            id: string;
            fingerprint: string;
            fullPath: string;
            relativePath: string;
            monorepoDependencies: {
                direct: string[];
                all: string[];
            };
        }>;
    };
}, {
    v1: {
        isFalcon?: boolean | undefined;
        falconBuildRunId: string;
        flakinessDetectionBuildRun: boolean;
        buildLogLink: string;
        repoRootFullPath: string;
        vcs: {
            pullRequest?: {
                fromBranch: string;
                prNumber: string;
            } | undefined;
            repoName: string;
            repoOwner: string;
            url: string;
            commitHash: string;
            branch: string;
        };
        packages: Record<string, {
            artifact?: {
                cdnUrl?: {
                    versioned: string;
                    unversioned: string;
                } | undefined;
                dockerImageName?: string | undefined;
                npmPackageName?: string | undefined;
            } | undefined;
            id: string;
            fingerprint: string;
            fullPath: string;
            relativePath: string;
            monorepoDependencies: {
                direct: string[];
                all: string[];
            };
        }>;
    };
    v2: {
        isFalcon?: boolean | undefined;
        falconBuildRunId: string;
        flakinessDetectionBuildRun: boolean;
        buildLogLink: string;
        repoRootFullPath: string;
        vcs: {
            pullRequest?: {
                fromBranch: string;
                prNumber: string;
            } | undefined;
            repoName: string;
            repoOwner: string;
            url: string;
            commitHash: string;
            branch: string;
        };
        packages: Record<string, {
            artifact?: {
                cdnUrl?: {
                    versioned: string;
                    unversioned: string;
                } | undefined;
                dockerImageName?: string | undefined;
                npmPackageName?: string | undefined;
            } | undefined;
            id: string;
            fingerprint: string;
            fullPath: string;
            relativePath: string;
            monorepoDependencies: {
                direct: string[];
                all: string[];
            };
        }>;
    };
}>;
export declare type ArtifactInfo = z.infer<typeof artifactInfoSchema>;
export declare type PackageInfo = z.infer<typeof packageInfoSchema>;
export declare type CiBuildInfoV1 = z.infer<typeof ciBuildInfoV1Schema>;
export declare type CiBuildInfo = z.infer<typeof ciBuildInfoSchema>;
export declare const parse: (data: unknown, params?: Partial<z.ParseParamsNoData> | undefined) => {
    v1: {
        isFalcon?: boolean | undefined;
        falconBuildRunId: string;
        flakinessDetectionBuildRun: boolean;
        buildLogLink: string;
        repoRootFullPath: string;
        vcs: {
            pullRequest?: {
                fromBranch: string;
                prNumber: string;
            } | undefined;
            repoName: string;
            repoOwner: string;
            url: string;
            commitHash: string;
            branch: string;
        };
        packages: Record<string, {
            artifact?: {
                cdnUrl?: {
                    versioned: string;
                    unversioned: string;
                } | undefined;
                dockerImageName?: string | undefined;
                npmPackageName?: string | undefined;
            } | undefined;
            id: string;
            fingerprint: string;
            fullPath: string;
            relativePath: string;
            monorepoDependencies: {
                direct: string[];
                all: string[];
            };
        }>;
    };
    v2: {
        isFalcon?: boolean | undefined;
        falconBuildRunId: string;
        flakinessDetectionBuildRun: boolean;
        buildLogLink: string;
        repoRootFullPath: string;
        vcs: {
            pullRequest?: {
                fromBranch: string;
                prNumber: string;
            } | undefined;
            repoName: string;
            repoOwner: string;
            url: string;
            commitHash: string;
            branch: string;
        };
        packages: Record<string, {
            artifact?: {
                cdnUrl?: {
                    versioned: string;
                    unversioned: string;
                } | undefined;
                dockerImageName?: string | undefined;
                npmPackageName?: string | undefined;
            } | undefined;
            id: string;
            fingerprint: string;
            fullPath: string;
            relativePath: string;
            monorepoDependencies: {
                direct: string[];
                all: string[];
            };
        }>;
    };
};
export {};
