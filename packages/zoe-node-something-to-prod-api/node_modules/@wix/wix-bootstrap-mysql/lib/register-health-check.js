const HEALTH_CHECK_QUERY = 'SELECT \'health-check\' FROM dual LIMIT 1';
const {WIX_METERING_START_SYMBOL} = require('./constants');

module.exports = {registerHealthCheck, runWithoutMetering};

function registerHealthCheck(connectionPool, openConnectionFn, isReadOnly, context, cluster) {

  const tests = {
    [asLabel('pooled')]: () => runWithoutMetering(connectionPool),
    [asLabel('fresh')]: () => {
      const con = openConnectionFn();
      return con.queryAsync(HEALTH_CHECK_QUERY).finally(() => con.end());
    }
  };

  Object
    .keys(tests)
    .forEach(label => context.management.addHealthTest(`MySQL - ${label} mode connection health test`, tests[label]));

  function asLabel(text) {
    const mode = isReadOnly ? 'read only' : 'read write';
    const clusterLabel = cluster ? `${cluster} ` : '';
    return `${clusterLabel}${text} ${mode}`;
  }
}

function runWithoutMetering(pool) {
  return new Promise((resolve, reject) => {
    pool.getConnection((err, con) => {
      if (err) {
        reject(err);
      } else {
        delete con[WIX_METERING_START_SYMBOL];
        con.query(HEALTH_CHECK_QUERY, err => {
          con.release();
          if (err) {
            reject(err);
          } else {
            resolve('ok');
          }
        });
      }
    });
  });
}
