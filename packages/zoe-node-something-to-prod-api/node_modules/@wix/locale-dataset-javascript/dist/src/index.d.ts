import { AddressParts, Country, Currency, DemoAddress, Locale, Subdivision, Timezone, Language } from '@wix/locale-dataset-data/typings';
interface GetAllCountriesOpts {
    filterForbiddenCountries?: boolean;
}
export interface LocaleDatasetApi {
    getAllCountries(opts?: GetAllCountriesOpts): Country[];
    getCountryByKey(countryKey: string): Country;
    getCountryByShortKey(countryShortKey: string): Country;
    getStateByKey(countryKey: string, stateKey: string): Subdivision;
    getAllCurrencies(): Currency[];
    getCurrencyByKey(currencyKey: string): Currency;
    getAllLocales(): Locale[];
    getLocaleByKey(localeKey: string): Locale;
    getAllTimezones(): Timezone[];
    getTimezoneByKey(timezoneKey: string): Timezone;
    getFormattedAddress(addressParts: AddressParts, formatCountryKey?: string): string;
    getDemoAddresses(): DemoAddress[];
    getDemoAddressByKey(currencyKey: string): DemoAddress;
    getAllSupportedLanguages(): Language[];
}
export declare const getAllCountries: (opts?: GetAllCountriesOpts) => Country[];
export declare const getCountryByKey: (countryKey: string) => Country;
export declare const getCountryByShortKey: (countryShortKey: string) => Country;
export declare const getStateByKey: (countryKey: string, stateKey: string) => Subdivision;
export declare const getAllCurrencies: () => Currency[];
export declare const getCurrencyByKey: (currencyKey: string) => Currency;
export declare const getAllLocales: () => Locale[];
export declare const getLocaleByKey: (localeKey: string) => Locale;
export declare const getAllTimezones: () => Timezone[];
export declare const getTimezoneByKey: (timezoneKey: string) => Timezone;
export declare const getDemoAddresses: () => DemoAddress[];
export declare const getDemoAddressByKey: (demoAddressKey: string) => DemoAddress;
export declare const getAllSupportedLanguages: () => Language[];
declare const _default: LocaleDatasetApi;
export default _default;
