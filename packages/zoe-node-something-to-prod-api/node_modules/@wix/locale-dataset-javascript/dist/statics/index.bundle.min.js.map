{"version":3,"sources":["webpack://LocaleDataset/webpack/universalModuleDefinition","webpack://LocaleDataset/webpack/bootstrap","webpack://LocaleDataset/./address-format.ts","webpack://LocaleDataset/./constants.ts","webpack://LocaleDataset/./index.ts"],"names":["root","factory","exports","module","define","amd","self","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","window","__STATICS_BASE_URL__","s","ADDRESS_PARTS","country","subdivision","addressLine1","addressLine2","city","zipCode","firstName","lastName","company","phone","FORBIDDEN_COUNTRY_CODES","__webpack_exports__","getAllCountries","getCountryByKey","getCountryByShortKey","getStateByKey","getAllCurrencies","getCurrencyByKey","getAllLocales","getLocaleByKey","getAllTimezones","getTimezoneByKey","getDemoAddresses","getDemoAddressByKey","getAllSupportedLanguages","dataset","data_namespaceObject","clone","item","JSON","parse","stringify","index_all","arr","byKey","filter","arrItem","opts","countries","filterForbiddenCountries","includes","countryKey","countryShortKey","shortKey","byShortKey","stateKey","subdivisions","list","currencies","currencyKey","locales","localeKey","toLowerCase","timezones","timezoneKey","demoAddresses","demoAddressKey","supportedLanguages","getFormattedAddress","addressParts","formatCountryKey","formatByCounty","address","addressPattern","emptyParts","split","map","line","commaSection","replace","lineIndex","lineSection","commaIndex","replacedLineSection","keys","forEach","lineSectionAfterReplace","join"],"mappings":"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","file":"index.bundle.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"LocaleDataset\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"LocaleDataset\"] = factory();\n\telse\n\t\troot[\"LocaleDataset\"] = factory();\n})((typeof self !== 'undefined' ? self : this), function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"https://static.parastorage.com/services/locale-dataset-javascript/0.2846.0/\";\n\n\n \t__webpack_require__.p = typeof window !== 'undefined' && window.__STATICS_BASE_URL__ || __webpack_require__.p;\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","import { AddressParts, Country } from '@wix/locale-dataset-data/typings';\nimport { getCountryByKey } from './';\n\nconst ADDRESS_PARTS: AddressParts = {\n  country: 'country',\n  subdivision: 'subdivision',\n  addressLine1: 'addressLine1',\n  addressLine2: 'addressLine2',\n  city: 'city',\n  zipCode: 'zipCode',\n  firstName: 'firstName',\n  lastName: 'lastName',\n  company: 'company',\n  phone: 'phone',\n};\n\nconst FORMAT_BY_COUNTRY_DEFAULT = 'USA';\n\nexport const getFormattedAddress = (\n  addressParts: AddressParts,\n  formatCountryKey?: string,\n): string => {\n  const formatByCounty: Country = formatCountryKey\n    ? getCountryByKey(formatCountryKey)\n    : getCountryByKey(FORMAT_BY_COUNTRY_DEFAULT);\n\n  const address =\n    formatByCounty && formatByCounty.addressPattern\n      ? formatByCounty.addressPattern\n      : getCountryByKey(FORMAT_BY_COUNTRY_DEFAULT).addressPattern;\n\n  const emptyParts = address\n    .split('\\n')\n    .map(line =>\n      line\n        .split(',')\n        .map(commaSection => commaSection.replace(/{{[^}]+}}/g, '')),\n    );\n\n  return address\n    .split('\\n')\n    .map((line, lineIndex) => {\n      return line\n        .split(',')\n        .map((lineSection, commaIndex) => {\n          if (lineSection === '') {\n            return lineSection;\n          }\n          let replacedLineSection = lineSection;\n          Object.keys(ADDRESS_PARTS).forEach(key => {\n            replacedLineSection = replacedLineSection.replace(\n              `{{${key}}}`,\n              addressParts[key] || '',\n            );\n          });\n          if (emptyParts[lineIndex][commaIndex] === replacedLineSection) {\n            return null;\n          }\n          return replacedLineSection;\n        })\n        .filter(lineSectionAfterReplace => lineSectionAfterReplace !== null)\n        .join(',');\n    })\n    .join('\\n')\n    .replace(/\\n+\\s*/g, '\\n');\n};\n","export const FORBIDDEN_COUNTRY_CODES = ['IRN', 'CUB', 'SYR', 'PRK'];\n","import {\n  AddressParts,\n  Country,\n  Currency,\n  DemoAddress,\n  Locale,\n  LocaleDataset,\n  Subdivision,\n  Timezone,\n  Language,\n} from '@wix/locale-dataset-data/typings';\nimport { getFormattedAddress } from './address-format';\nimport * as datasetData from '@wix/locale-dataset-data';\nimport { FORBIDDEN_COUNTRY_CODES } from './constants';\n\ninterface GetAllCountriesOpts {\n  filterForbiddenCountries?: boolean;\n}\n\nexport interface LocaleDatasetApi {\n  getAllCountries(opts?: GetAllCountriesOpts): Country[];\n  getCountryByKey(countryKey: string): Country;\n  getCountryByShortKey(countryShortKey: string): Country;\n  getStateByKey(countryKey: string, stateKey: string): Subdivision;\n  getAllCurrencies(): Currency[];\n  getCurrencyByKey(currencyKey: string): Currency;\n  getAllLocales(): Locale[];\n  getLocaleByKey(localeKey: string): Locale;\n  getAllTimezones(): Timezone[];\n  getTimezoneByKey(timezoneKey: string): Timezone;\n  getFormattedAddress(\n    addressParts: AddressParts,\n    formatCountryKey?: string,\n  ): string;\n  getDemoAddresses(): DemoAddress[];\n  getDemoAddressByKey(currencyKey: string): DemoAddress;\n  getAllSupportedLanguages(): Language[];\n}\nconst dataset: LocaleDataset = datasetData as LocaleDataset;\n\n// Helpers\nconst clone = (item: any) => JSON.parse(JSON.stringify(item));\nconst all = (arr: any[]) => clone(arr);\nconst byKey = (arr: any[], key: string) => {\n  const item = arr.filter((arrItem: any) => arrItem.key === key)[0];\n  return item ? clone(item) : null;\n};\nconst byShortKey = (arr: any[], shortKey: string) => {\n  const item = arr.filter((arrItem: any) => arrItem.shortKey === shortKey)[0];\n  return item ? clone(item) : null;\n};\n\n// Public API\nexport const getAllCountries = (opts:GetAllCountriesOpts = {}): Country[] =>\n  all(dataset.countries).filter(\n    country =>\n      !opts.filterForbiddenCountries ||\n      !FORBIDDEN_COUNTRY_CODES.includes(country.key),\n  );\n\nexport const getCountryByKey = (countryKey: string): Country =>\n  byKey(dataset.countries, countryKey);\nexport const getCountryByShortKey = (countryShortKey: string): Country =>\n  byShortKey(dataset.countries, countryShortKey);\n\nexport const getStateByKey = (\n  countryKey: string,\n  stateKey: string,\n): Subdivision => {\n  const country = byKey(dataset.countries, countryKey);\n  return country && country.subdivisions\n    ? byKey(country.subdivisions.list, stateKey)\n    : null;\n};\n\nexport const getAllCurrencies = (): Currency[] => all(dataset.currencies);\nexport const getCurrencyByKey = (currencyKey: string): Currency =>\n  byKey(dataset.currencies, currencyKey);\n\nexport const getAllLocales = (): Locale[] => all(dataset.locales);\nexport const getLocaleByKey = (localeKey: string): Locale =>\n  byKey(dataset.locales, localeKey.toLowerCase());\n\nexport const getAllTimezones = (): Timezone[] => all(dataset.timezones);\nexport const getTimezoneByKey = (timezoneKey: string): Timezone =>\n  byKey(dataset.timezones, timezoneKey);\n\nexport const getDemoAddresses = (): DemoAddress[] => all(dataset.demoAddresses);\nexport const getDemoAddressByKey = (demoAddressKey: string): DemoAddress =>\n  byKey(dataset.demoAddresses, demoAddressKey);\n\nexport const getAllSupportedLanguages = (): Language[] =>\n  all(dataset.supportedLanguages);\n\nexport default {\n  getAllCountries,\n  getCountryByKey,\n  getCountryByShortKey,\n  getStateByKey,\n  getAllCurrencies,\n  getCurrencyByKey,\n  getAllLocales,\n  getLocaleByKey,\n  getAllTimezones,\n  getTimezoneByKey,\n  getFormattedAddress,\n  getDemoAddresses,\n  getDemoAddressByKey,\n  getAllSupportedLanguages,\n} as LocaleDatasetApi;\n"],"sourceRoot":""}