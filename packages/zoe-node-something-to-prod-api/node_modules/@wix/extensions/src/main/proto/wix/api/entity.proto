syntax = "proto2";

package wix.api;

import "google/protobuf/descriptor.proto";
import "wix/api/annotations.proto";
import "wix/api/callback.proto";

option java_multiple_files = true;
option java_outer_classname = "EntityProto";
option java_package = "com.wix.api";

/*
Marks that message X is the "main" entity of service Y
Key requirement for DomainEvents used in callback/event

package com.wixpress.examples;

service BlooperService {
    option (wix.api.service_entity).message = "com.wixpress.examples.Blooper"; //the "main" entity
    rpc Update (BlooperRequest) returns (BlooperResponse) {
        //...
    };
}

message Blooper {
   option (wix.api.entity) = {
       fqdn: "wix.examples.Blooper" // A fully qualified domain name for this entity. Example: wix.stores.catalog.product, wix.bookings.session, wix.payments.transaction
       exposure: PUBLIC //Optional exposure field. Will be used by systems like corvid and webhooks to decide if to expose events related to this entity to external parties

   };
}
*/

extend google.protobuf.ServiceOptions {
    optional ServiceEntity service_entity = 50500;
}

message ServiceEntity {
    required string message = 1;
    optional string namespace = 50501; // use to avoid naming collisions between functions listed under the same fqdn/entity. Business Schema service shall use it using this hierarchy: [Entity > namespace > action]
}

extend google.protobuf.MessageOptions {
    optional Entity entity = 50500;
}

message Entity {
    required string fqdn = 1;
    optional Exposure exposure = 2;
    repeated MessageAppendix appendix_files = 3; // declare external configuration info
    optional string old_fqdn_for_backwards_compatibility = 4; // Topic name for domain events will be based on this attribute if present (only for known legacy FQDNs)
    optional Segment.Segment segment = 5; // the cluster to which domain events will be produced
    repeated string implements = 6; // FQDNs of interfaces (i.e. SPIs) that this entity implements. Must begin with `wix.interfaces.`
    optional Extensible extensible = 7; // Indicates that this entity can be extended by apps using data-extension mechanism.
    optional bool trashbin = 8; // Indicates whether trash-bin is exposed on this entity.
    optional string plural = 9; // plural form of this entity. e.g. singular: `entity`; plural: `entities`;
    optional string domain_events_read_permission = 10; // permission to consume all event types of this entity from topic. affects internal/external consumers. For external webhook subscribers - MAY be overridden by event/callback `permission` field.
    optional string app_def_id = 11; // the app in devcenter that owns this entity
}

message Extensible {
    optional string nested_extension_field_path = 1;
}

message MessageAppendix {
    enum Type {
        UNKNOWN_APPENDIX_TYPE = 0;
        AUTO_VELO = 1; // auto velo configuration
        DOCS_CONF = 2; // wix docs configuration: `documentation.yaml`
        MULTILINGUAL = 3; // wix multilingual configuration
    }
    required Type type = 1; // appendix type
    required string path = 2; // absolute from module root
}
