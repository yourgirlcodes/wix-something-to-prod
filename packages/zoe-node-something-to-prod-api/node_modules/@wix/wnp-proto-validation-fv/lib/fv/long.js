const Long = require('long');

module.exports = {
  messages: {
    'long.base': '\'{field}\' value \'{actual}\' must be a valid instance of Long',
    'long.nonNegative': '\'{field}\' value \'{actual}\' must be an instance of non-negative Long',
    'long.min': '\'{field}\' value \'{actual}\' must be an instance of non-negative Long greater or equal to \'{expected}\'',
    'long.max': '\'{field}\' value \'{actual}\' must be an instance of non-negative Long less or equal to \'{expected}\'',
  },
  alias: 'long',
  schema: {
    type: 'custom',
    optional: true,
    check(value, errors, schema) {
      let converted;

      if (typeof value === 'number' && Number.isInteger(value) ||
        typeof value === 'object' && Number.isInteger(value.low) && Number.isInteger(value.high) && typeof (value.unsigned) === 'boolean') {
        converted = Long.fromValue(value);
      }

      if (!Long.isLong(converted)) {
        errors.push({type: 'long.base', actual: value});
      } else if (schema.nonNegative === true && converted.isNegative()) {
        errors.push({type: 'long.nonNegative', actual: value});
      }

      if (converted) {
        if (typeof schema.max === 'number') {
          if (converted.gt(schema.max)) {
            errors.push({type: 'long.max', actual: value, expected: schema.max});
          }
        }
        if (typeof schema.min === 'number') {
          if (converted.lt(schema.min)) {
            errors.push({type: 'long.min', actual: value, expected: schema.min});
          }
        }
      }
      return value;
    }
  }
};