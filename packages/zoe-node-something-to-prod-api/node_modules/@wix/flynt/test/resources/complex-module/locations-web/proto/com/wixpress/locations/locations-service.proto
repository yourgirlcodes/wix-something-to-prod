syntax = "proto3";

package com.wixpress.locations;

import "google/api/annotations.proto";
import "wix/api/annotations.proto";
import "wix/api/validations.proto";
import "wix/common/query.proto";
import "wix/common/sorting.proto";
import "wix/common/paging.proto";
import "wix/api/callback.proto";
import "wix/api/action_payload.proto";
import "wix/api/entity.proto";
import "com/wixpress/locations/location.proto";
import "wix/api/permissions.proto";
import "wix/api/api_errors.proto";

service LocationsService {

    option (wix.api.service_entity).message = "Location";

    rpc CreateLocation (CreateLocationRequest) returns (CreateLocationResponse) {
        option (google.api.http).post = "/v1/locations";
        option (wix.api.required) = "CreateLocationRequest.location";
        option (wix.api.required) = "CreateLocationRequest.location.name";
        option (wix.api.required) = "CreateLocationRequest.location.address";
        option (wix.api.required) = "CreateLocationRequest.location.time_zone";
        option (wix.api.exposure) = PUBLIC;
        option (wix.api.maturity) = BETA;
        option (wix.api.permission).name = "LOCATIONS.MANAGE";
        option (wix.api.callback) = {
            event_type: CREATED
        };
        option (.wix.api.error) = {
            http_code: INVALID_ARGUMENT
            application_code: "CANNOT_PERFORM_ACTION_ON_ARCHIVED_LOCATION"
            data: "com.wixpress.locations.exceptions.LocationArchivedException"
        };
        option (.wix.api.error) = {
            http_code: INVALID_ARGUMENT
            application_code: "CANNOT_PERFORM_ACTION_ON_ARCHIVED_LOCATION"
            data: "com.wixpress.locations.exceptions.LocationArchivedException"
        };
    }

    rpc BulkCreateLocation (BulkCreateLocationRequest) returns (BulkCreateLocationResponse) {
        option (google.api.http).post = "/v1/locations/bulk-create";
        option (wix.api.required) = "BulkCreateLocationRequest.locations";
        option (wix.api.maturity) = ALPHA;
        option (wix.api.permission).name = "LOCATIONS.MANAGE";
        option (wix.api.callback) = {
            event_type: CREATED
        };
    }

    rpc GetLocation (GetLocationRequest) returns (GetLocationResponse) {
        option (google.api.http).get = "/v1/locations/{id}";
        option (wix.api.exposure) = PUBLIC;
        option (wix.api.maturity) = BETA;
        option (wix.api.required) = "GetLocationRequest.id";
        option (wix.api.permission).name = "LOCATIONS.READ";
    }

    rpc ListLocations (ListLocationsRequest) returns (ListLocationsResponse) {
        option (google.api.http).get = "/v1/locations";
        option (wix.api.exposure) = PUBLIC;
        option (wix.api.maturity) = BETA;
        option (wix.api.permission).name = "LOCATIONS.READ";
    }

    rpc UpdateLocation (UpdateLocationRequest) returns (UpdateLocationResponse) {
        option (google.api.http).put = "/v1/locations/{location.id}";
        option (wix.api.required) = "UpdateLocationRequest.location";
        option (wix.api.required) = "UpdateLocationRequest.location.id";
        option (wix.api.required) = "UpdateLocationRequest.location.name";
        option (wix.api.required) = "UpdateLocationRequest.location.address";
        option (wix.api.required) = "UpdateLocationRequest.location.time_zone";
        option (wix.api.exposure) = PUBLIC;
        option (wix.api.maturity) = BETA;
        option (wix.api.permission).name = "LOCATIONS.MANAGE";
        option (wix.api.callback) = {
            event_type: UPDATED
        };

        option (.wix.api.error) = {
            http_code: INVALID_ARGUMENT
            application_code: "CANNOT_PERFORM_ACTION_ON_ARCHIVED_LOCATION"
            data: "com.wixpress.locations.exceptions.LocationArchivedException"
        };
        option (.wix.api.error) = {
            http_code: INVALID_ARGUMENT
            application_code: "CANNOT_ARCHIVE_DEFAULT"
            data: "com.wixpress.locations.exceptions.ArchiveDefaultLocationNotAllowedException"
        };
        option (.wix.api.error) = {
            http_code: NOT_FOUND
            application_code: "LOCATION_NOT_FOUND"
            data: "com.wixpress.locations.exceptions.LocationNotFoundException"
        };
    }

    rpc BulkUpdateLocation (BulkUpdateLocationRequest) returns (BulkUpdateLocationResponse) {
        option (google.api.http).put = "/v1/locations/bulk-update";
        option (wix.api.required) = "BulkUpdateLocationRequest.locations";
        option (wix.api.maturity) = ALPHA;
        option (wix.api.permission).name = "LOCATIONS.MANAGE";
        option (wix.api.callback) = {
            event_type: UPDATED
        };
    }

    rpc QueryLocations (QueryLocationsRequest) returns (QueryLocationsResponse) {
        option (google.api.http).post = "/v1/locations/query";
        option (wix.api.exposure) = PUBLIC;
        option (wix.api.maturity) = BETA;
        option (wix.api.permission).name = "LOCATIONS.READ";
    }

    rpc SetDefaultLocation (SetDefaultLocationRequest) returns (SetDefaultLocationResponse) {
        option (google.api.http).post = "/v1/locations/{id}/set-default";
        option (wix.api.exposure) = PUBLIC;
        option (wix.api.maturity) = BETA;
        option (.wix.api.required) = "SetDefaultLocationRequest.id";
        option (wix.api.permission).name = "LOCATIONS.MANAGE";
        option (wix.api.callback) = {
            event_type: ACTION
            payload: "SetDefaultLocation"
        };
        option (.wix.api.error) = {
            http_code: INVALID_ARGUMENT
            application_code: "CANNOT_PERFORM_ACTION_ON_ARCHIVED_LOCATION"
            data: "com.wixpress.locations.exceptions.LocationArchivedException"
        };
        option (.wix.api.error) = {
            http_code: INVALID_ARGUMENT
            application_code: "DEFAULT_NOT_CHANGED"
            data: "com.wixpress.locations.exceptions.DefaultNotChangedException"
        };
    }

    rpc ArchiveLocation (ArchiveLocationRequest) returns (ArchiveLocationResponse) {
        option (google.api.http).post = "/v1/locations/{id}/archive";
        option (wix.api.exposure) = PUBLIC;
        option (wix.api.maturity) = BETA;
        option (.wix.api.required) = "ArchiveLocationRequest.id";
        option (wix.api.permission).name = "LOCATIONS.MANAGE";
        option (wix.api.callback) = {
            event_type: ACTION
            payload: "ArchiveLocation"
        };
        option (.wix.api.error) = {
            http_code: INVALID_ARGUMENT
            application_code: "CANNOT_ARCHIVE_DEFAULT"
            data: "com.wixpress.locations.exceptions.ArchiveDefaultLocationNotAllowedException"
        };
    }

}

message CreateLocationRequest {
    Location location = 1;
}

message CreateLocationResponse {
    Location location = 1;
}

message BulkCreateLocationRequest {
    repeated Location locations = 1 [(wix.api.minSize) = 1, (wix.api.maxSize) = 10];
}

message BulkCreateLocationResponse {
    repeated Location successful_locations = 1;
    repeated FailedCreateLocation failed_locations = 2;
}

message FailedCreateLocation {
    Location location = 1;
    string error_message = 2;
}

message GetLocationRequest {
    string id = 1 [(wix.api.format) = GUID];
}

message GetLocationResponse {
    Location location = 1;
}

message ListLocationsRequest {
    //[Sort order](https://bo.wix.com/wix-docs/rest/crm/contacts/sort-and-filter).
    wix.common.Sorting sort = 1;
    //[Pagination](https://bo.wix.com/wix-docs/rest/crm/contacts/pagination), defaults to offset = 0 and limit = 50 (max limit 1,000).
    wix.common.Paging paging = 2;
    bool include_archived = 3; // False by default
}

message ListLocationsResponse {
    repeated Location locations = 1;
}

message UpdateLocationRequest {
    Location location = 1;
}

message UpdateLocationResponse {
    Location location = 1;
}

message BulkUpdateLocationRequest {
    repeated Location locations = 1 [(wix.api.minSize) = 1, (wix.api.maxSize) = 10];
}

message BulkUpdateLocationResponse {
    repeated Location successful_locations = 1;
    repeated FailedUpdateLocation failed_locations = 2;
}

message FailedUpdateLocation {
    string id = 1;
    string error_message = 2;
}

message QueryLocationsRequest {
    wix.common.Query query = 1;
}

message QueryLocationsResponse {
    repeated Location locations = 1;
}

message SetDefaultLocationRequest {
    string id = 1 [(.wix.api.format) = GUID];
}

message SetDefaultLocationResponse {
    Location location = 1;
}

message SetDefaultLocation {
    option (wix.api.action_payload).custom_slug = "set_default_location";
    string prev_default_location_id = 1 [(wix.api.format) = GUID];
    string curr_default_location_id = 2 [(wix.api.format) = GUID];
}

message ArchiveLocationRequest {
    string id = 1 [(.wix.api.format) = GUID];
}

message ArchiveLocationResponse {
    Location location = 1;
}

message ArchiveLocation {
    option (wix.api.action_payload).custom_slug = "archive_status";
    string id = 1 [(.wix.api.format) = GUID];
}
