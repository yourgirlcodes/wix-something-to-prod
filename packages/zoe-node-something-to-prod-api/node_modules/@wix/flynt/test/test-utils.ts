import {createFlyntPluginsHost, FlyntHostCtx, FlyntPlugins, PluginsHost} from '@wix/flynt-plugins-host';
import {FlyntPlugin} from '@wix/flynt-plugin-types';

export async function loadPlugins(host: PluginsHost, ...plugins: FlyntPlugin[]) {
  for (const plugin of plugins) {
    await host.loadPlugin(plugin);
  }
}

export async function flyntPlugins(ctx: FlyntHostCtx, ...plugins: FlyntPlugin[]): Promise<FlyntPlugins> {
  const host = createFlyntPluginsHost();
  await loadPlugins(host, ...plugins);
  return host.createPluginsRunner(ctx);
}

export class OptionsPlugin implements FlyntPlugin {
  opts = {};

  constructor(readonly name: string, private readonly params: string[]) {
  }

  getCliOptions() {
    return this.params.map(param => ({name: param}));
  }

  setOptions(opts: Record<string, any>) {
    this.opts = opts;
  }
}
