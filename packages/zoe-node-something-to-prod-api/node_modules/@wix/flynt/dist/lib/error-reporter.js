"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.reportError = void 0;
let sentry;
async function reportError(error, { extra, tags } = {}) {
    try {
        if (!sentry) {
            sentry = await Promise.resolve().then(() => __importStar(require('@sentry/node')));
        }
        sentry.init({
            dsn: process.env.FLYNT_TEST_MODE ? '' : 'https://25208199213d44e2ae351417e1e95b04@o37417.ingest.sentry.io/6235775',
            ignoreErrors: ['protoc execution failed'],
        });
        sentry.captureException(error, { extra, tags });
        await sentry.flush();
    }
    catch (err) {
        console.log(`Failed to report to sentry: ${err}. Error that was reported: ${error}`);
    }
}
exports.reportError = reportError;
//# sourceMappingURL=error-reporter.js.map