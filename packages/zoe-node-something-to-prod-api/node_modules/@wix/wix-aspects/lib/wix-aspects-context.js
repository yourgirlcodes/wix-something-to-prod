const assert = require('assert');
const {AsyncLocalStorage} = require('async_hooks');
const {isValidStore} = require('./wix-aspect-store');

const isPromiseLike = obj =>
  !!obj &&
  (typeof obj === 'object' || typeof obj === 'function') &&
  typeof obj.then === 'function';

const createAspectsContext = function () {
  const storage = new AsyncLocalStorage();

  function doRunWithAspects(aspects, callback) {
    assert(isValidStore(aspects), 'aspects must be a valid AspectStore or Promise<AspectStore>');
    assert(typeof callback === 'function', 'callback must be a function');
    return storage.run(aspects, callback);
  }

  return {
    current() {
      return storage.getStore();
    },
    runWithAspects(aspectsOrPromise, callback) {
      if (isPromiseLike(aspectsOrPromise)) {
        return Promise.resolve(aspectsOrPromise)
          .then(aspects => doRunWithAspects(aspects, callback));
      }
      return doRunWithAspects(aspectsOrPromise, callback);
    },
    runWithoutAspects(callback) {
      assert(typeof callback === 'function', 'callback must be a function');
      return storage.exit(callback);
    }
  };

};

module.exports = createAspectsContext;
