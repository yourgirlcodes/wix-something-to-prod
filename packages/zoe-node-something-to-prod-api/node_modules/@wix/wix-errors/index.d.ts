import generated from './lib/generated/proto-generated';
import * as base from '@wix/wnp-errors-base';

type Cause = base.Cause;

export import ErrorClass = base.ErrorClass;
export import ErrorOptions = base.ErrorOptions;
export import BusinessErrorOptions = base.BusinessErrorOptions;
export import WixSystemError = base.WixSystemError;
export import WixBusinessError = base.WixBusinessError;
export import WixError = base.WixError;
export import ThrottledError = base.ThrottledError;
export import SimpleErrorConstructor = base.SimpleErrorConstructor;
export import ErrorMetadata = base.ErrorMetadata;
export import ErrorCode = base.ErrorCode;
export import WixUnsupportedBrowserError = base.WixUnsupportedBrowserError;

export import HttpStatus = base.HttpStatus;
export import wixBusinessError = base.wixBusinessError;
export import wixSystemError = base.wixSystemError;
export import extractMetadata = base.extractMetadata;
export import isBusinessError = base.isBusinessError;
export import throwAsLocalError = base.throwAsLocalError;


export enum GrpcStatus {
    OK = 0,
    CANCELLED = 1,
    UNKNOWN = 2,
    INVALID_ARGUMENT = 3,
    DEADLINE_EXCEEDED = 4,
    NOT_FOUND = 5,
    ALREADY_EXISTS = 6,
    PERMISSION_DENIED = 7,
    RESOURCE_EXHAUSTED = 8,
    FAILED_PRECONDITION = 9,
    ABORTED = 10,
    OUT_OF_RANGE = 11,
    UNIMPLEMENTED = 12,
    INTERNAL = 13,
    UNAVAILABLE = 14,
    DATA_LOSS = 15,
    UNAUTHENTICATED = 16
}

export namespace GrpcStatus {
  export function asString(code: GrpcStatus | string): string | undefined;
  export function asNumber(code: GrpcStatus | string): GrpcStatus | undefined;
  export function toHttpStatus(code: GrpcStatus): number;
}

export interface GrpcMetadata {
  [key: string]: string | Buffer;
}

export import wix = generated.wix;

export const trailers: {
  ['GRPC_STATUS_DETAILS']: string;
};

export interface GrpcStatusError extends ErrorClass {
  new (code?: GrpcStatus | string, message?: string, metadata?: GrpcMetadata, cause?: Error, name?: string): GrpcStatusError; //eslint-disable-line @typescript-eslint/no-misused-new
  readonly code: GrpcStatus;
  readonly metadata?: GrpcMetadata;
  readonly cause?: Error;
  readonly details?: wix.api.Details;
  readonly callInfo?: GrpcStatusError.CallInfo;

  withCallInfo(callInfo: GrpcStatusError.CallInfo): GrpcStatusError;
  putStatusInErrorName(): GrpcStatusError;
}

export namespace GrpcStatusError {

  export interface CallInfo {
    readonly url: string;
    readonly service: string;
    readonly method: string;
  }
}

interface ApplicationErrorOptions {
  code: GrpcStatus;
  message: string;
  applicationError: wix.api.ApplicationError;
  name?: string;
  cause?: Error;
}

interface ValidationErrorOptions {
  code: GrpcStatus;
  message: string;
  validationError: wix.api.ValidationError;
  cause?: Error;
}

interface GrpcStatusErrorStatic extends GrpcStatusError {
  applicationError(options: ApplicationErrorOptions): GrpcStatusError;
  applicationError(
    code: GrpcStatus,
    message: string,
    applicationError: wix.api.ApplicationError,
    name?: string
  ): GrpcStatusError;
  validationError(options: ValidationErrorOptions): GrpcStatusError;
  validationError(
    code: GrpcStatus,
    message: string,
    validationError: wix.api.ValidationError
  ): GrpcStatusError;
  isInstance(instance: Error): instance is GrpcStatusError;
}

export const GrpcStatusError: GrpcStatusErrorStatic;

