const {GrpcStatus} = require('./grpc-status');

const GRPC_STATUS_STRINGS = Object.values(GrpcStatus).filter(v => typeof v === 'string');

function parse(msg) {
  if (!msg) {
    return {};
  }

  for (const s of GRPC_STATUS_STRINGS) {
    if (msg.startsWith(s)) {
      const status = msg.slice(0, s.length);
      const message = msg.slice(s.length).replace(/^(\s|\:)*/, '');
      return {status, message};
    }
  }
  return {message: msg};
}

function constructMessage(code, msg, {callInfo} = {}) {
  let {status, message} = parse(msg);
  status = status || GrpcStatus.asString(code);
  const portions = [];

  if (callInfo) {
    portions.push(`[${callInfo.url}@${callInfo.service}#${callInfo.method}]`);
  }

  if (message) {
    portions.push(message);
  }

  if (portions.length > 0) {
    portions.unshift(':');
  }

  return `${status}${portions.join(' ')}`;
}

module.exports = {constructMessage};