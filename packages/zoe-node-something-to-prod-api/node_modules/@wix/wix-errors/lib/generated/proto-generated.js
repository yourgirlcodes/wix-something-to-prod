const Long = require('long');
const __builtIn = {
  'Number': Number,
  'Array': Array,
  'Object': Object,
  'Buffer': Buffer
};
const $root = {};
$root.__options = {
  'stringEnums': false,
  'stringLongs': false,
  'stdCase': false,
  'generatorVersion': '2.0.0',
  'contentHash': 'c607a10954104b4b86647d110a74b2fb3a744f6a'
};
$root.__lookup = function (pbjs) {
  const root = pbjs.Root.fromJSON({
    'nested': {
      'wix': {
        'nested': {
          'api': {
            'options': {
              'java_multiple_files': true,
              'java_outer_classname': 'ValidationsProto',
              'java_package': 'com.wix.api'
            },
            'nested': {
              'actionPayload': {
                'type': 'ActionPayload',
                'id': 50600,
                'extend': 'google.protobuf.MessageOptions',
                'comment': null,
                'parsedOptions': null
              },
              'ActionPayload': {
                'fields': {
                  'customSlug': {
                    'type': 'string',
                    'id': 1,
                    'comment': null,
                    'parsedOptions': null
                  }
                },
                'comment': null
              },
              'serviceMaturity': {
                'type': 'Maturity',
                'id': 50104,
                'extend': 'google.protobuf.ServiceOptions',
                'comment': null,
                'parsedOptions': null
              },
              'serviceExposure': {
                'type': 'Exposure',
                'id': 50105,
                'extend': 'google.protobuf.ServiceOptions',
                'comment': null,
                'parsedOptions': null
              },
              'serviceDeprecated': {
                'type': 'Deprecated',
                'id': 50140,
                'extend': 'google.protobuf.ServiceOptions',
                'comment': null,
                'parsedOptions': null
              },
              'appendixFiles': {
                'rule': 'repeated',
                'type': 'ServiceAppendix',
                'id': 50150,
                'extend': 'google.protobuf.ServiceOptions',
                'options': { 'packed': false },
                'comment': null,
                'parsedOptions': null
              },
              'exposure': {
                'type': 'Exposure',
                'id': 50101,
                'extend': 'google.protobuf.MethodOptions',
                'comment': null,
                'parsedOptions': null
              },
              'maturity': {
                'type': 'Maturity',
                'id': 50102,
                'extend': 'google.protobuf.MethodOptions',
                'comment': null,
                'parsedOptions': null
              },
              'cacheable': {
                'type': 'CacheSettings',
                'id': 50103,
                'extend': 'google.protobuf.MethodOptions',
                'comment': null,
                'parsedOptions': null
              },
              'deprecated': {
                'type': 'Deprecated',
                'id': 50141,
                'extend': 'google.protobuf.MethodOptions',
                'comment': null,
                'parsedOptions': null
              },
              'crud': {
                'type': 'Crud',
                'id': 50146,
                'extend': 'google.protobuf.MethodOptions',
                'comment': null,
                'parsedOptions': null
              },
              'hookable': {
                'type': 'Hookable',
                'id': 50147,
                'extend': 'google.protobuf.MethodOptions',
                'comment': null,
                'parsedOptions': null
              },
              'acceptsLinguist': {
                'type': 'bool',
                'id': 50148,
                'extend': 'google.protobuf.MethodOptions',
                'comment': null,
                'parsedOptions': null
              },
              'decompositeOf': {
                'type': 'string',
                'id': 50120,
                'extend': 'google.protobuf.MessageOptions',
                'comment': null,
                'parsedOptions': null
              },
              'decompositionMinimumFields': {
                'rule': 'repeated',
                'type': 'FieldSet',
                'id': 50121,
                'extend': 'google.protobuf.MessageOptions',
                'options': { 'packed': false },
                'comment': null,
                'parsedOptions': null
              },
              'unwrapArrayValue': {
                'type': 'bool',
                'id': 50122,
                'extend': 'google.protobuf.MessageOptions',
                'comment': null,
                'parsedOptions': null
              },
              'messageDeprecated': {
                'type': 'Deprecated',
                'id': 50142,
                'extend': 'google.protobuf.MessageOptions',
                'comment': null,
                'parsedOptions': null
              },
              'unique': {
                'rule': 'repeated',
                'type': 'Unique',
                'id': 50145,
                'extend': 'google.protobuf.MessageOptions',
                'options': { 'packed': false },
                'comment': null,
                'parsedOptions': null
              },
              'fieldExposure': {
                'type': 'Exposure',
                'id': 50106,
                'extend': 'google.protobuf.FieldOptions',
                'comment': null,
                'parsedOptions': null
              },
              'fieldMaturity': {
                'type': 'Maturity',
                'id': 50107,
                'extend': 'google.protobuf.FieldOptions',
                'comment': null,
                'parsedOptions': null
              },
              'pii': {
                'type': 'bool',
                'id': 50110,
                'extend': 'google.protobuf.FieldOptions',
                'comment': null,
                'parsedOptions': null
              },
              'referencedEntity': {
                'type': 'string',
                'id': 50111,
                'extend': 'google.protobuf.FieldOptions',
                'comment': null,
                'parsedOptions': null
              },
              'fieldDeprecated': {
                'type': 'Deprecated',
                'id': 50143,
                'extend': 'google.protobuf.FieldOptions',
                'comment': null,
                'parsedOptions': null
              },
              'translatable': {
                'type': 'Translatable',
                'id': 50144,
                'extend': 'google.protobuf.FieldOptions',
                'comment': null,
                'parsedOptions': null
              },
              'enumMaturity': {
                'type': 'Maturity',
                'id': 50130,
                'extend': 'google.protobuf.EnumValueOptions',
                'comment': null,
                'parsedOptions': null
              },
              'enumExposure': {
                'type': 'Exposure',
                'id': 50131,
                'extend': 'google.protobuf.EnumValueOptions',
                'comment': null,
                'parsedOptions': null
              },
              'CacheSettings': {
                'fields': {
                  'maxAgeSeconds': {
                    'type': 'int32',
                    'id': 1,
                    'comment': null,
                    'parsedOptions': null
                  }
                },
                'comment': null
              },
              'FieldSet': {
                'fields': {
                  'field': {
                    'rule': 'repeated',
                    'type': 'string',
                    'id': 1,
                    'comment': null,
                    'parsedOptions': null
                  }
                },
                'comment': null
              },
              'Deprecated': {
                'fields': {
                  'replacedBy': {
                    'type': 'string',
                    'id': 1,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'targetRemovalDate': {
                    'type': 'string',
                    'id': 2,
                    'comment': null,
                    'parsedOptions': null
                  }
                },
                'comment': null
              },
              'Unique': {
                'fields': {
                  'field': {
                    'rule': 'repeated',
                    'type': 'string',
                    'id': 1,
                    'comment': null,
                    'parsedOptions': null
                  }
                },
                'comment': null
              },
              'Crud': {
                'oneofs': {
                  'methodOptions': {
                    'oneof': [
                      'createOptions',
                      'getOptions',
                      'updateOptions',
                      'deleteOptions',
                      'listOptions',
                      'queryOptions',
                      'searchOptions',
                      'bulkCreateOptions',
                      'bulkUpdateOptions',
                      'bulkUpdateByFilterOptions',
                      'bulkDeleteOptions',
                      'bulkDeleteByFilterOptions',
                      'upsertOptions',
                      'bulkUpsertOptions',
                      'listDeletedOptions',
                      'getDeletedOptions',
                      'restoreFromTrashbinOptions',
                      'removeFromTrashbinOptions'
                    ],
                    'comment': null
                  }
                },
                'fields': {
                  'method': {
                    'rule': 'required',
                    'type': 'Method',
                    'id': 1,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'createOptions': {
                    'type': 'CreateMethodOptions',
                    'id': 3,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'getOptions': {
                    'type': 'GetItemMethodOptions',
                    'id': 4,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'updateOptions': {
                    'type': 'UpdateMethodOptions',
                    'id': 5,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'deleteOptions': {
                    'type': 'DeleteMethodOptions',
                    'id': 6,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'listOptions': {
                    'type': 'ListMethodOptions',
                    'id': 7,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'queryOptions': {
                    'type': 'QueryMethodOptions',
                    'id': 8,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'searchOptions': {
                    'type': 'SearchMethodOptions',
                    'id': 20,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'bulkCreateOptions': {
                    'type': 'BulkCreateMethodOptions',
                    'id': 9,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'bulkUpdateOptions': {
                    'type': 'BulkUpdateMethodOptions',
                    'id': 10,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'bulkUpdateByFilterOptions': {
                    'type': 'BulkUpdateByFilterMethodOptions',
                    'id': 11,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'bulkDeleteOptions': {
                    'type': 'BulkDeleteMethodOptions',
                    'id': 12,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'bulkDeleteByFilterOptions': {
                    'type': 'BulkDeleteByFilterMethodOptions',
                    'id': 13,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'upsertOptions': {
                    'type': 'UpsertMethodOptions',
                    'id': 14,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'bulkUpsertOptions': {
                    'type': 'BulkUpsertMethodOptions',
                    'id': 15,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'listDeletedOptions': {
                    'type': 'ListDeletedMethodOptions',
                    'id': 16,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'getDeletedOptions': {
                    'type': 'GetDeletedMethodOptions',
                    'id': 17,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'restoreFromTrashbinOptions': {
                    'type': 'RestoreFromTrashbinMethodOptions',
                    'id': 18,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'removeFromTrashbinOptions': {
                    'type': 'RemoveFromTrashbinMethodOptions',
                    'id': 19,
                    'comment': null,
                    'parsedOptions': null
                  }
                },
                'nested': {
                  'Method': {
                    'values': {
                      'UNKNOWN_METHOD': 0,
                      'CREATE': 1,
                      'GET_ITEM': 2,
                      'UPDATE': 3,
                      'DELETE': 4,
                      'UPSERT': 12,
                      'LIST': 5,
                      'QUERY': 6,
                      'SEARCH': 18,
                      'BULK_CREATE': 7,
                      'BULK_UPDATE': 8,
                      'BULK_UPDATE_BY_FILTER': 9,
                      'BULK_DELETE': 10,
                      'BULK_DELETE_BY_FILTER': 11,
                      'BULK_UPSERT': 13,
                      'LIST_DELETED': 14,
                      'GET_DELETED': 15,
                      'RESTORE_FROM_TRASHBIN': 16,
                      'REMOVE_FROM_TRASHBIN': 17
                    },
                    'comment': null,
                    'comments': {
                      'UNKNOWN_METHOD': null,
                      'CREATE': null,
                      'GET_ITEM': null,
                      'UPDATE': null,
                      'DELETE': null,
                      'UPSERT': null,
                      'LIST': null,
                      'QUERY': null,
                      'SEARCH': null,
                      'BULK_CREATE': null,
                      'BULK_UPDATE': null,
                      'BULK_UPDATE_BY_FILTER': null,
                      'BULK_DELETE': null,
                      'BULK_DELETE_BY_FILTER': null,
                      'BULK_UPSERT': null,
                      'LIST_DELETED': null,
                      'GET_DELETED': null,
                      'RESTORE_FROM_TRASHBIN': null,
                      'REMOVE_FROM_TRASHBIN': null
                    }
                  }
                },
                'comment': null
              },
              'Paging': {
                'fields': {
                  'type': {
                    'type': 'Type',
                    'id': 1,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'pagingMetadataField': {
                    'type': 'string',
                    'id': 2,
                    'comment': null,
                    'parsedOptions': null
                  }
                },
                'nested': {
                  'Type': {
                    'values': {
                      'UNKNOWN_TYPE': 0,
                      'OFFSET': 1,
                      'CURSOR': 2
                    },
                    'comment': null,
                    'comments': {
                      'UNKNOWN_TYPE': null,
                      'OFFSET': null,
                      'CURSOR': null
                    }
                  }
                },
                'comment': null
              },
              'CreateMethodOptions': {
                'fields': {
                  'itemField': {
                    'type': 'string',
                    'id': 1,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'fieldmaskField': {
                    'type': 'string',
                    'id': 2,
                    'comment': null,
                    'parsedOptions': null
                  }
                },
                'comment': null
              },
              'GetItemMethodOptions': {
                'fields': {
                  'itemField': {
                    'type': 'string',
                    'id': 2,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'idField': {
                    'type': 'string',
                    'id': 1,
                    'comment': null,
                    'parsedOptions': null
                  }
                },
                'comment': null
              },
              'UpdateMethodOptions': {
                'fields': {
                  'itemField': {
                    'type': 'string',
                    'id': 1,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'fieldmaskField': {
                    'type': 'string',
                    'id': 2,
                    'comment': null,
                    'parsedOptions': null
                  }
                },
                'comment': null
              },
              'UpsertMethodOptions': {
                'fields': {
                  'itemField': {
                    'type': 'string',
                    'id': 1,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'fieldmaskField': {
                    'type': 'string',
                    'id': 2,
                    'comment': null,
                    'parsedOptions': null
                  }
                },
                'comment': null
              },
              'DeleteMethodOptions': {
                'fields': {
                  'idField': {
                    'type': 'string',
                    'id': 1,
                    'comment': null,
                    'parsedOptions': null
                  }
                },
                'comment': null
              },
              'ListMethodOptions': {
                'fields': {
                  'idsField': {
                    'type': 'string',
                    'id': 1,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'itemsField': {
                    'rule': 'required',
                    'type': 'string',
                    'id': 3,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'paging': {
                    'type': 'Paging',
                    'id': 2,
                    'comment': null,
                    'parsedOptions': null
                  }
                },
                'comment': null
              },
              'QueryMethodOptions': {
                'fields': {
                  'queryField': {
                    'type': 'string',
                    'id': 1,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'itemsField': {
                    'rule': 'required',
                    'type': 'string',
                    'id': 3,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'paging': {
                    'type': 'Paging',
                    'id': 2,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'wql': {
                    'rule': 'required',
                    'type': 'Wql',
                    'id': 4,
                    'comment': null,
                    'parsedOptions': null
                  }
                },
                'comment': null
              },
              'SearchMethodOptions': {
                'fields': {
                  'searchField': {
                    'type': 'string',
                    'id': 1,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'itemsField': {
                    'rule': 'required',
                    'type': 'string',
                    'id': 3,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'paging': {
                    'type': 'Paging',
                    'id': 2,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'wql': {
                    'rule': 'required',
                    'type': 'Wql',
                    'id': 4,
                    'comment': null,
                    'parsedOptions': null
                  }
                },
                'comment': null
              },
              'BulkCreateMethodOptions': {
                'fields': {
                  'itemField': {
                    'type': 'string',
                    'id': 1,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'fieldmaskField': {
                    'type': 'string',
                    'id': 2,
                    'comment': null,
                    'parsedOptions': null
                  }
                },
                'comment': null
              },
              'BulkUpdateMethodOptions': {
                'fields': {
                  'itemField': {
                    'type': 'string',
                    'id': 1,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'fieldmaskField': {
                    'type': 'string',
                    'id': 2,
                    'comment': null,
                    'parsedOptions': null
                  }
                },
                'comment': null
              },
              'BulkUpdateByFilterMethodOptions': {
                'fields': {
                  'itemField': {
                    'type': 'string',
                    'id': 1,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'fieldmaskField': {
                    'type': 'string',
                    'id': 2,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'filterField': {
                    'type': 'string',
                    'id': 3,
                    'comment': null,
                    'parsedOptions': null
                  }
                },
                'comment': null
              },
              'BulkUpsertMethodOptions': {
                'fields': {
                  'itemField': {
                    'type': 'string',
                    'id': 1,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'fieldmaskField': {
                    'type': 'string',
                    'id': 2,
                    'comment': null,
                    'parsedOptions': null
                  }
                },
                'comment': null
              },
              'BulkDeleteMethodOptions': {
                'fields': {
                  'idsField': {
                    'type': 'string',
                    'id': 1,
                    'comment': null,
                    'parsedOptions': null
                  }
                },
                'comment': null
              },
              'BulkDeleteByFilterMethodOptions': {
                'fields': {
                  'filterField': {
                    'type': 'string',
                    'id': 1,
                    'comment': null,
                    'parsedOptions': null
                  }
                },
                'comment': null
              },
              'ListDeletedMethodOptions': {
                'fields': {
                  'idsField': {
                    'type': 'string',
                    'id': 1,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'itemsField': {
                    'rule': 'required',
                    'type': 'string',
                    'id': 3,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'paging': {
                    'type': 'Paging',
                    'id': 2,
                    'comment': null,
                    'parsedOptions': null
                  }
                },
                'comment': null
              },
              'GetDeletedMethodOptions': {
                'fields': {
                  'itemField': {
                    'type': 'string',
                    'id': 2,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'idField': {
                    'type': 'string',
                    'id': 1,
                    'comment': null,
                    'parsedOptions': null
                  }
                },
                'comment': null
              },
              'RestoreFromTrashbinMethodOptions': {
                'fields': {
                  'itemField': {
                    'type': 'string',
                    'id': 2,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'idField': {
                    'type': 'string',
                    'id': 1,
                    'comment': null,
                    'parsedOptions': null
                  }
                },
                'comment': null
              },
              'RemoveFromTrashbinMethodOptions': {
                'fields': {
                  'idField': {
                    'type': 'string',
                    'id': 1,
                    'comment': null,
                    'parsedOptions': null
                  }
                },
                'comment': null
              },
              'Wql': {
                'fields': {
                  'operatorFieldSupport': {
                    'rule': 'repeated',
                    'type': 'OperatorFieldSupport',
                    'id': 3,
                    'comment': null,
                    'parsedOptions': null
                  }
                },
                'nested': {
                  'Operator': {
                    'values': {
                      'ALL_APPLICABLE_OPERATORS': 0,
                      'EQ': 1,
                      'GT': 2,
                      'GTE': 3,
                      'IN': 4,
                      'LT': 5,
                      'LTE': 6,
                      'NE': 7,
                      'NIN': 8,
                      'BEGINS': 9,
                      'EXISTS': 10,
                      'ALL': 11,
                      'ANY': 12,
                      'EMPTY': 13
                    },
                    'comment': null,
                    'comments': {
                      'ALL_APPLICABLE_OPERATORS': null,
                      'EQ': null,
                      'GT': null,
                      'GTE': null,
                      'IN': null,
                      'LT': null,
                      'LTE': null,
                      'NE': null,
                      'NIN': null,
                      'BEGINS': null,
                      'EXISTS': null,
                      'ALL': null,
                      'ANY': null,
                      'EMPTY': null
                    }
                  },
                  'Sort': {
                    'values': {
                      'NONE': 0,
                      'ASC': 1,
                      'DESC': 2,
                      'BOTH': 3
                    },
                    'comment': null,
                    'comments': {
                      'NONE': null,
                      'ASC': null,
                      'DESC': null,
                      'BOTH': null
                    }
                  },
                  'RequiredFields': {
                    'fields': {
                      'field': {
                        'rule': 'repeated',
                        'type': 'string',
                        'id': 1,
                        'comment': null,
                        'parsedOptions': null
                      }
                    },
                    'comment': null
                  },
                  'OperatorFieldSupport': {
                    'fields': {
                      'operator': {
                        'rule': 'repeated',
                        'type': 'Operator',
                        'id': 1,
                        'options': { 'packed': false },
                        'comment': null,
                        'parsedOptions': null
                      },
                      'glob': {
                        'rule': 'required',
                        'type': 'string',
                        'id': 2,
                        'comment': null,
                        'parsedOptions': null
                      },
                      'sort': {
                        'type': 'Sort',
                        'id': 3,
                        'comment': null,
                        'parsedOptions': null
                      },
                      'requiredFields': {
                        'rule': 'repeated',
                        'type': 'RequiredFields',
                        'id': 4,
                        'comment': null,
                        'parsedOptions': null
                      }
                    },
                    'comment': null
                  }
                },
                'comment': null
              },
              'Hookable': {
                'fields': {},
                'comment': null
              },
              'Translatable': {
                'fields': {
                  'name': {
                    'type': 'string',
                    'id': 1,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'hidden': {
                    'type': 'bool',
                    'id': 2,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'grouping': {
                    'rule': 'required',
                    'type': 'string',
                    'id': 3,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'type': {
                    'rule': 'required',
                    'type': 'Type',
                    'id': 4,
                    'comment': null,
                    'parsedOptions': null
                  }
                },
                'nested': {
                  'Type': {
                    'values': {
                      'UNDEFINED_TYPE': 0,
                      'SHORT_TEXT': 1,
                      'LONG_TEXT': 2,
                      'RICH_TEXT': 3,
                      'RICH_CONTENT_EDITOR': 4,
                      'SELECTION': 5,
                      'MULTI_SELECTION': 6,
                      'DOCUMENT': 7,
                      'IMAGE': 8,
                      'VIDEO': 9
                    },
                    'comment': null,
                    'comments': {
                      'UNDEFINED_TYPE': null,
                      'SHORT_TEXT': null,
                      'LONG_TEXT': null,
                      'RICH_TEXT': null,
                      'RICH_CONTENT_EDITOR': null,
                      'SELECTION': null,
                      'MULTI_SELECTION': null,
                      'DOCUMENT': null,
                      'IMAGE': null,
                      'VIDEO': null
                    }
                  }
                },
                'comment': null
              },
              'ServiceAppendix': {
                'fields': {
                  'type': {
                    'rule': 'required',
                    'type': 'Type',
                    'id': 1,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'path': {
                    'rule': 'required',
                    'type': 'string',
                    'id': 2,
                    'comment': null,
                    'parsedOptions': null
                  }
                },
                'nested': {
                  'Type': {
                    'values': {
                      'UNKNOWN_APPENDIX_TYPE': 0,
                      'NILE': 1,
                      'MESSAGE_BUS': 2
                    },
                    'comment': null,
                    'comments': {
                      'UNKNOWN_APPENDIX_TYPE': null,
                      'NILE': null,
                      'MESSAGE_BUS': null
                    }
                  }
                },
                'comment': null
              },
              'Exposure': {
                'values': {
                  'PRIVATE': 0,
                  'INTERNAL': 1,
                  'PUBLIC': 2
                },
                'comment': null,
                'comments': {
                  'PRIVATE': null,
                  'INTERNAL': null,
                  'PUBLIC': null
                }
              },
              'Maturity': {
                'values': {
                  'ALPHA': 0,
                  'BETA': 1,
                  'IA': 2,
                  'GA': 3,
                  'NOT_IMPLEMENTED': 4
                },
                'comment': null,
                'comments': {
                  'ALPHA': null,
                  'BETA': null,
                  'IA': null,
                  'GA': null,
                  'NOT_IMPLEMENTED': null
                }
              },
              'error': {
                'rule': 'repeated',
                'type': 'Error',
                'id': 50801,
                'extend': 'google.protobuf.MethodOptions',
                'options': { 'packed': false },
                'comment': null,
                'parsedOptions': null
              },
              'customValidationError': {
                'rule': 'repeated',
                'type': 'CustomValidationError',
                'id': 50802,
                'extend': 'google.protobuf.MethodOptions',
                'options': { 'packed': false },
                'comment': null,
                'parsedOptions': null
              },
              'inheritCrudErrors': {
                'rule': 'repeated',
                'type': 'InheritCrudErrors',
                'id': 50803,
                'extend': 'google.protobuf.MethodOptions',
                'options': { 'packed': false },
                'comment': null,
                'parsedOptions': null
              },
              'Error': {
                'fields': {
                  'httpCode': {
                    'rule': 'required',
                    'type': 'StatusCodes.HttpStatusCode',
                    'id': 1,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'applicationCode': {
                    'type': 'string',
                    'id': 2,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'data': {
                    'type': 'string',
                    'id': 3,
                    'comment': null,
                    'parsedOptions': null
                  }
                },
                'comment': 'ApplicationError: named Error for backwards compatibility'
              },
              'CustomValidationError': {
                'fields': {
                  'ruleName': {
                    'rule': 'required',
                    'type': 'string',
                    'id': 1,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'data': {
                    'type': 'string',
                    'id': 2,
                    'comment': null,
                    'parsedOptions': null
                  }
                },
                'comment': 'CustomValidationError: field level validation, only declare when you have specific validation in your service that is not coming from infra'
              },
              'InheritCrudErrors': {
                'fields': {
                  'method': {
                    'rule': 'required',
                    'type': 'Crud.Method',
                    'id': 1,
                    'comment': null,
                    'parsedOptions': null
                  }
                },
                'comment': 'InheritCrudErrors: does this method throw standard crud errors?'
              },
              'StatusCodes': {
                'fields': {},
                'nested': {
                  'HttpStatusCode': {
                    'values': {
                      'OK': 0,
                      'UNAUTHENTICATED': 1,
                      'PERMISSION_DENIED': 2,
                      'INVALID_ARGUMENT': 3,
                      'NOT_FOUND': 4,
                      'INTERNAL': 5,
                      'UNAVAILABLE': 6,
                      'RESOURCE_EXHAUSTED': 7,
                      'CANCELED': 8,
                      'ALREADY_EXISTS': 9,
                      'FAILED_PRECONDITION': 10
                    },
                    'comment': null,
                    'comments': {
                      'OK': null,
                      'UNAUTHENTICATED': null,
                      'PERMISSION_DENIED': null,
                      'INVALID_ARGUMENT': null,
                      'NOT_FOUND': null,
                      'INTERNAL': null,
                      'UNAVAILABLE': null,
                      'RESOURCE_EXHAUSTED': null,
                      'CANCELED': null,
                      'ALREADY_EXISTS': null,
                      'FAILED_PRECONDITION': null
                    }
                  }
                },
                'comment': null
              },
              'callback': {
                'rule': 'repeated',
                'type': 'Callback',
                'id': 50000,
                'extend': 'google.protobuf.MethodOptions',
                'options': { 'packed': false },
                'comment': null,
                'parsedOptions': null
              },
              'event': {
                'rule': 'repeated',
                'type': 'Callback',
                'id': 50000,
                'extend': 'google.protobuf.ServiceOptions',
                'options': { 'packed': false },
                'comment': null,
                'parsedOptions': null
              },
              'eventDeprecated': {
                'rule': 'repeated',
                'type': 'CallbackDeprecation',
                'id': 50001,
                'extend': 'google.protobuf.ServiceOptions',
                'options': { 'packed': false },
                'comment': null,
                'parsedOptions': null
              },
              'Callback': {
                'fields': {
                  'topic': {
                    'type': 'string',
                    'id': 1,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'segment': {
                    'type': 'Segment.Segment',
                    'id': 8,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'payload': {
                    'type': 'string',
                    'id': 2,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'permission': {
                    'type': 'string',
                    'id': 3,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'eventType': {
                    'type': 'EventType',
                    'id': 4,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'exposure': {
                    'type': 'Exposure',
                    'id': 6,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'maturity': {
                    'type': 'Maturity',
                    'id': 7,
                    'comment': null,
                    'parsedOptions': null
                  }
                },
                'nested': {
                  'EventType': {
                    'values': {
                      'UNKNOWN': 0,
                      'CREATED': 1,
                      'UPDATED': 2,
                      'DELETED': 3,
                      'ACTION': 4
                    },
                    'comment': null,
                    'comments': {
                      'UNKNOWN': null,
                      'CREATED': null,
                      'UPDATED': null,
                      'DELETED': null,
                      'ACTION': null
                    }
                  }
                },
                'comment': null
              },
              'CallbackDeprecation': {
                'fields': {
                  'replacedBy': {
                    'type': 'string',
                    'id': 1,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'targetRemovalDate': {
                    'type': 'string',
                    'id': 2,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'eventType': {
                    'type': 'Callback.EventType',
                    'id': 3,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'customSlug': {
                    'type': 'string',
                    'id': 4,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'payload': {
                    'type': 'string',
                    'id': 5,
                    'comment': null,
                    'parsedOptions': null
                  }
                },
                'comment': null
              },
              'Segment': {
                'fields': {},
                'nested': {
                  'Segment': {
                    'values': {
                      'UNSPECIFIED': 0,
                      'USERS': 1,
                      'PUBLIC': 2,
                      'OTHERS': 3
                    },
                    'comment': null,
                    'comments': {
                      'UNSPECIFIED': null,
                      'USERS': null,
                      'PUBLIC': null,
                      'OTHERS': null
                    }
                  }
                },
                'comment': null
              },
              'RequestContext': {
                'fields': {
                  'aspects': {
                    'keyType': 'string',
                    'type': 'string',
                    'id': 1,
                    'comment': null
                  }
                },
                'comment': null
              },
              'ResponseContext': {
                'fields': {
                  'aspects': {
                    'rule': 'repeated',
                    'type': 'ResponseContextEntry',
                    'id': 1,
                    'comment': null,
                    'parsedOptions': null
                  }
                },
                'comment': null
              },
              'ResponseContextEntry': {
                'fields': {
                  'aspectEntry': {
                    'keyType': 'string',
                    'type': 'string',
                    'id': 1,
                    'comment': null
                  }
                },
                'comment': null
              },
              'serviceEntity': {
                'type': 'ServiceEntity',
                'id': 50500,
                'extend': 'google.protobuf.ServiceOptions',
                'comment': null,
                'parsedOptions': null
              },
              'ServiceEntity': {
                'fields': {
                  'message': {
                    'rule': 'required',
                    'type': 'string',
                    'id': 1,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'namespace': {
                    'type': 'string',
                    'id': 50501,
                    'comment': null,
                    'parsedOptions': null
                  }
                },
                'comment': null
              },
              'entity': {
                'type': 'Entity',
                'id': 50500,
                'extend': 'google.protobuf.MessageOptions',
                'comment': null,
                'parsedOptions': null
              },
              'Entity': {
                'fields': {
                  'fqdn': {
                    'rule': 'required',
                    'type': 'string',
                    'id': 1,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'exposure': {
                    'type': 'Exposure',
                    'id': 2,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'appendixFiles': {
                    'rule': 'repeated',
                    'type': 'MessageAppendix',
                    'id': 3,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'oldFqdnForBackwardsCompatibility': {
                    'type': 'string',
                    'id': 4,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'segment': {
                    'type': 'Segment.Segment',
                    'id': 5,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'implements': {
                    'rule': 'repeated',
                    'type': 'string',
                    'id': 6,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'extensible': {
                    'type': 'Extensible',
                    'id': 7,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'trashbin': {
                    'type': 'bool',
                    'id': 8,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'plural': {
                    'type': 'string',
                    'id': 9,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'domainEventsReadPermission': {
                    'type': 'string',
                    'id': 10,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'appDefId': {
                    'type': 'string',
                    'id': 11,
                    'comment': null,
                    'parsedOptions': null
                  }
                },
                'comment': null
              },
              'Extensible': {
                'fields': {
                  'nestedExtensionFieldPath': {
                    'type': 'string',
                    'id': 1,
                    'comment': null,
                    'parsedOptions': null
                  }
                },
                'comment': null
              },
              'MessageAppendix': {
                'fields': {
                  'type': {
                    'rule': 'required',
                    'type': 'Type',
                    'id': 1,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'path': {
                    'rule': 'required',
                    'type': 'string',
                    'id': 2,
                    'comment': null,
                    'parsedOptions': null
                  }
                },
                'nested': {
                  'Type': {
                    'values': {
                      'UNKNOWN_APPENDIX_TYPE': 0,
                      'AUTO_VELO': 1,
                      'DOCS_CONF': 2,
                      'MULTILINGUAL': 3
                    },
                    'comment': null,
                    'comments': {
                      'UNKNOWN_APPENDIX_TYPE': null,
                      'AUTO_VELO': null,
                      'DOCS_CONF': null,
                      'MULTILINGUAL': null
                    }
                  }
                },
                'comment': null
              },
              'Details': {
                'oneofs': {
                  'kind': {
                    'oneof': [
                      'applicationError',
                      'validationError'
                    ],
                    'comment': null
                  }
                },
                'fields': {
                  'applicationError': {
                    'type': 'ApplicationError',
                    'id': 1,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'validationError': {
                    'type': 'ValidationError',
                    'id': 2,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'tracing': {
                    'keyType': 'string',
                    'type': 'string',
                    'id': 3,
                    'options': { 'deprecated': true },
                    'comment': null
                  }
                },
                'comment': null
              },
              'ApplicationError': {
                'fields': {
                  'code': {
                    'type': 'string',
                    'id': 1,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'description': {
                    'type': 'string',
                    'id': 2,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'data': {
                    'type': 'google.protobuf.Struct',
                    'id': 3,
                    'comment': null,
                    'parsedOptions': null
                  }
                },
                'comment': null
              },
              'ValidationError': {
                'fields': {
                  'fieldViolations': {
                    'rule': 'repeated',
                    'type': 'FieldViolation',
                    'id': 1,
                    'comment': null,
                    'parsedOptions': null
                  }
                },
                'nested': {
                  'RuleType': {
                    'values': {
                      'VALIDATION': 0,
                      'OTHER': 1,
                      'MAX': 2,
                      'MIN': 3,
                      'MAX_LENGTH': 4,
                      'MIN_LENGTH': 5,
                      'MAX_SIZE': 6,
                      'MIN_SIZE': 7,
                      'FORMAT': 8,
                      'DECIMAL_LTE': 9,
                      'DECIMAL_GTE': 10,
                      'DECIMAL_LT': 11,
                      'DECIMAL_GT': 12,
                      'DECIMAL_MAX_SCALE': 13,
                      'INVALID_ENUM_VALUE': 14,
                      'REQUIRED_FIELD': 15
                    },
                    'comment': null,
                    'comments': {
                      'VALIDATION': null,
                      'OTHER': null,
                      'MAX': null,
                      'MIN': null,
                      'MAX_LENGTH': null,
                      'MIN_LENGTH': null,
                      'MAX_SIZE': null,
                      'MIN_SIZE': null,
                      'FORMAT': null,
                      'DECIMAL_LTE': null,
                      'DECIMAL_GTE': null,
                      'DECIMAL_LT': null,
                      'DECIMAL_GT': null,
                      'DECIMAL_MAX_SCALE': null,
                      'INVALID_ENUM_VALUE': null,
                      'REQUIRED_FIELD': null
                    }
                  },
                  'FieldViolation': {
                    'fields': {
                      'field': {
                        'type': 'string',
                        'id': 1,
                        'comment': null,
                        'parsedOptions': null
                      },
                      'description': {
                        'type': 'string',
                        'id': 2,
                        'comment': null,
                        'parsedOptions': null
                      },
                      'violatedRule': {
                        'type': 'RuleType',
                        'id': 3,
                        'comment': null,
                        'parsedOptions': null
                      },
                      'ruleName': {
                        'type': 'google.protobuf.StringValue',
                        'id': 4,
                        'comment': null,
                        'parsedOptions': null
                      },
                      'data': {
                        'type': 'google.protobuf.Struct',
                        'id': 5,
                        'comment': null,
                        'parsedOptions': null
                      }
                    },
                    'comment': null
                  }
                },
                'comment': 'example result:\n{\n"fieldViolations": [\n{\n"field": "fieldA",\n"description": "invalid music note. supported notes: [do,re,mi,fa,sol,la,ti]",\n"violatedRule": "OTHER",\n"ruleName": "INVALID_NOTE",\n"data": {\n"value": "FI"\n}\n},\n{\n"field": "fieldB",\n"description": "field value out of range. supported range: [0-20]",\n"violatedRule": "MAX",\n"data": {\n"threshold": 20\n}\n},\n{\n"field": "fieldC",\n"description": "invalid phone number. provide a valid phone number of size: [7-12], supported characters: [0-9, +, -, (, )]",\n"violatedRule": "FORMAT",\n"data": {\n"type": "PHONE"\n}\n}\n]\n}'
              },
              'LimitRuleInt32DataPayload': {
                'fields': {
                  'threshold': {
                    'type': 'int32',
                    'id': 1,
                    'comment': null,
                    'parsedOptions': null
                  }
                },
                'comment': null
              },
              'LimitRuleDoubleDataPayload': {
                'fields': {
                  'threshold': {
                    'type': 'double',
                    'id': 1,
                    'comment': null,
                    'parsedOptions': null
                  }
                },
                'comment': null
              },
              'LimitRuleStringDataPayload': {
                'fields': {
                  'threshold': {
                    'type': 'string',
                    'id': 1,
                    'comment': null,
                    'parsedOptions': null
                  }
                },
                'comment': null
              },
              'FormatRuleDataPayload': {
                'fields': {
                  'type': {
                    'type': 'string',
                    'id': 1,
                    'comment': null,
                    'parsedOptions': null
                  }
                },
                'comment': null
              },
              'EnumRuleDataPayload': {
                'fields': {
                  'supported': {
                    'rule': 'repeated',
                    'type': 'string',
                    'id': 1,
                    'comment': null,
                    'parsedOptions': null
                  }
                },
                'comment': null
              },
              'permission': {
                'type': 'PermissionRule',
                'id': 50301,
                'extend': 'google.protobuf.MethodOptions',
                'comment': null,
                'parsedOptions': null
              },
              'additionalPermission': {
                'rule': 'repeated',
                'type': 'PermissionRule',
                'id': 50302,
                'extend': 'google.protobuf.MethodOptions',
                'options': { 'packed': false },
                'comment': null,
                'parsedOptions': null
              },
              'PermissionRule': {
                'fields': {
                  'name': {
                    'type': 'string',
                    'id': 1,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'type': {
                    'type': 'PermissionType',
                    'id': 2,
                    'comment': null,
                    'parsedOptions': null
                  }
                },
                'comment': null
              },
              'PermissionType': {
                'values': {
                  'AUTO': 0,
                  'MANUAL': 1
                },
                'comment': null,
                'comments': {
                  'AUTO': null,
                  'MANUAL': null
                }
              },
              'sla': {
                'type': 'Sla',
                'id': 50700,
                'extend': 'google.protobuf.MethodOptions',
                'comment': null,
                'parsedOptions': null
              },
              'Sla': {
                'fields': {
                  'responseTimeMs': {
                    'type': 'int32',
                    'id': 1,
                    'comment': null,
                    'parsedOptions': null
                  }
                },
                'comment': null
              },
              'subscription': {
                'type': 'Subscription',
                'id': 50400,
                'extend': 'google.protobuf.MethodOptions',
                'comment': null,
                'parsedOptions': null
              },
              'Subscription': {
                'fields': {
                  'topic': {
                    'type': 'string',
                    'id': 1,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'segment': {
                    'type': 'Segment.Segment',
                    'id': 4,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'batch': {
                    'type': 'bool',
                    'id': 2,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'entity': {
                    'type': 'string',
                    'id': 3,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'consumeMode': {
                    'type': 'MessageConsumeMode',
                    'id': 5,
                    'comment': null,
                    'parsedOptions': null
                  }
                },
                'comment': null
              },
              'MessageConsumeMode': {
                'values': {
                  'SINGLE_MESSAGE': 0,
                  'BATCH_MESSAGES': 1,
                  'LEGACY_BATCH_MESSAGES': 2
                },
                'comment': null,
                'comments': {
                  'SINGLE_MESSAGE': null,
                  'BATCH_MESSAGES': null,
                  'LEGACY_BATCH_MESSAGES': null
                }
              },
              'max': {
                'type': 'double',
                'id': 50201,
                'extend': 'google.protobuf.FieldOptions',
                'comment': null,
                'parsedOptions': null
              },
              'min': {
                'type': 'double',
                'id': 50202,
                'extend': 'google.protobuf.FieldOptions',
                'comment': null,
                'parsedOptions': null
              },
              'maxLength': {
                'type': 'int32',
                'id': 50203,
                'extend': 'google.protobuf.FieldOptions',
                'comment': null,
                'parsedOptions': null
              },
              'minLength': {
                'type': 'int32',
                'id': 50204,
                'extend': 'google.protobuf.FieldOptions',
                'comment': null,
                'parsedOptions': null
              },
              'maxSize': {
                'type': 'int32',
                'id': 50209,
                'extend': 'google.protobuf.FieldOptions',
                'comment': null,
                'parsedOptions': null
              },
              'minSize': {
                'type': 'int32',
                'id': 50210,
                'extend': 'google.protobuf.FieldOptions',
                'comment': null,
                'parsedOptions': null
              },
              'format': {
                'type': 'Format',
                'id': 50205,
                'extend': 'google.protobuf.FieldOptions',
                'comment': null,
                'parsedOptions': null
              },
              'readOnly': {
                'type': 'bool',
                'id': 50208,
                'extend': 'google.protobuf.FieldOptions',
                'comment': null,
                'parsedOptions': null
              },
              'immutable': {
                'type': 'bool',
                'id': 50212,
                'extend': 'google.protobuf.FieldOptions',
                'comment': null,
                'parsedOptions': null
              },
              'decimalValue': {
                'type': 'DecimalValueOptions',
                'id': 50211,
                'extend': 'google.protobuf.FieldOptions',
                'comment': null,
                'parsedOptions': null
              },
              'customValidation': {
                'type': 'CustomValidationError',
                'id': 50214,
                'extend': 'google.protobuf.FieldOptions',
                'comment': null,
                'parsedOptions': null
              },
              'DecimalValueOptions': {
                'fields': {
                  'lte': {
                    'type': 'string',
                    'id': 1,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'gte': {
                    'type': 'string',
                    'id': 2,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'lt': {
                    'type': 'string',
                    'id': 3,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'gt': {
                    'type': 'string',
                    'id': 4,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'maxScale': {
                    'type': 'int32',
                    'id': 5,
                    'comment': null,
                    'parsedOptions': null
                  }
                },
                'comment': 'Decimal value validation rules.\nBased on java.math.BigDecimal, implies (wix.api.format) = DECIMAL_VALUE'
              },
              'required': {
                'rule': 'repeated',
                'type': 'string',
                'id': 50200,
                'extend': 'google.protobuf.MethodOptions',
                'comment': null,
                'parsedOptions': null
              },
              'writable': {
                'rule': 'repeated',
                'type': 'string',
                'id': 50213,
                'extend': 'google.protobuf.MethodOptions',
                'comment': null,
                'parsedOptions': null
              },
              'Format': {
                'values': {
                  'EMAIL': 0,
                  'HOSTNAME': 1,
                  'IPV4': 2,
                  'IPV6': 3,
                  'URI': 4,
                  'WEB_URL': 5,
                  'PHONE': 7,
                  'CREDIT_CARD': 8,
                  'GUID': 9,
                  'COUNTRY': 10,
                  'LANGUAGE': 11,
                  'DECIMAL_VALUE': 12,
                  'CURRENCY': 13,
                  'LANGUAGE_TAG': 14,
                  'COLOR_HEX': 15,
                  'LOCAL_DATE': 16,
                  'LOCAL_TIME': 17,
                  'LOCAL_DATE_TIME': 18
                },
                'comment': null,
                'comments': {
                  'EMAIL': null,
                  'HOSTNAME': null,
                  'IPV4': null,
                  'IPV6': null,
                  'URI': null,
                  'WEB_URL': null,
                  'PHONE': null,
                  'CREDIT_CARD': null,
                  'GUID': null,
                  'COUNTRY': null,
                  'LANGUAGE': null,
                  'DECIMAL_VALUE': null,
                  'CURRENCY': null,
                  'LANGUAGE_TAG': null,
                  'COLOR_HEX': null,
                  'LOCAL_DATE': null,
                  'LOCAL_TIME': null,
                  'LOCAL_DATE_TIME': null
                }
              }
            }
          },
          'graphql': {
            'options': {
              'java_multiple_files': true,
              'java_outer_classname': 'GraphqlProto',
              'java_package': 'com.wix.graphql'
            },
            'nested': {
              'namespace': {
                'type': 'string',
                'id': 66000,
                'extend': 'google.protobuf.FileOptions',
                'comment': null,
                'parsedOptions': null
              }
            }
          },
          'http': {
            'options': {
              'java_multiple_files': true,
              'java_outer_classname': 'FieldmaskProto',
              'java_package': 'com.wix.http'
            },
            'nested': {
              'inferFieldmaskFrom': {
                'type': 'string',
                'id': 50901,
                'extend': 'google.protobuf.FieldOptions',
                'options': { 'deprecated': true },
                'comment': null,
                'parsedOptions': [{
                    'deprecated': true,
                    '__comment': null
                  }]
              },
              'inferFieldmask': {
                'type': 'InferFieldmask',
                'id': 50902,
                'extend': 'google.protobuf.MethodOptions',
                'comment': null,
                'parsedOptions': null
              },
              'InferFieldmask': {
                'fields': {
                  'from': {
                    'rule': 'required',
                    'type': 'string',
                    'id': 1,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'fieldmask': {
                    'rule': 'required',
                    'type': 'string',
                    'id': 2,
                    'comment': null,
                    'parsedOptions': null
                  }
                },
                'comment': null
              }
            }
          },
          'sdk': {
            'options': {
              'java_multiple_files': true,
              'java_outer_classname': 'DefinitionsProto',
              'java_package': 'com.wix.sdk'
            },
            'nested': {
              'signature': {
                'rule': 'repeated',
                'type': 'Signature',
                'id': 60100,
                'extend': 'google.protobuf.MethodOptions',
                'options': { 'packed': false },
                'comment': null,
                'parsedOptions': null
              },
              'Signature': {
                'fields': {
                  'params': {
                    'rule': 'repeated',
                    'type': 'string',
                    'id': 1,
                    'comment': null,
                    'parsedOptions': null
                  }
                },
                'comment': null
              }
            }
          },
          'spi': {
            'options': {
              'java_multiple_files': true,
              'java_outer_classname': 'DefinitionsProto',
              'java_package': 'com.wix.spi'
            },
            'nested': {
              'service': {
                'type': 'Service',
                'id': 65000,
                'extend': 'google.protobuf.ServiceOptions',
                'comment': null,
                'parsedOptions': null
              },
              'event': {
                'rule': 'repeated',
                'type': 'Event',
                'id': 65001,
                'extend': 'google.protobuf.ServiceOptions',
                'options': { 'packed': false },
                'comment': null,
                'parsedOptions': null
              },
              'baseUri': {
                'type': 'bool',
                'id': 65020,
                'extend': 'google.protobuf.FieldOptions',
                'comment': null,
                'parsedOptions': null
              },
              'error': {
                'rule': 'repeated',
                'type': 'Error',
                'id': 65040,
                'extend': 'google.protobuf.MethodOptions',
                'options': { 'packed': false },
                'comment': null,
                'parsedOptions': null
              },
              'featureToggle': {
                'type': 'string',
                'id': 65041,
                'extend': 'google.protobuf.MethodOptions',
                'comment': null,
                'parsedOptions': null
              },
              'Service': {
                'fields': {
                  'spiIdentifier': {
                    'rule': 'required',
                    'type': 'string',
                    'id': 1,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'configMessage': {
                    'rule': 'required',
                    'type': 'string',
                    'id': 2,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'hostService': {
                    'type': 'string',
                    'id': 3,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'businessManagerUrl': {
                    'type': 'string',
                    'id': 4,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'fqdn': {
                    'type': 'string',
                    'id': 5,
                    'comment': null,
                    'parsedOptions': null
                  }
                },
                'comment': null
              },
              'Error': {
                'fields': {
                  'name': {
                    'rule': 'required',
                    'type': 'string',
                    'id': 1,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'httpCode': {
                    'rule': 'required',
                    'type': 'HttpStatusCode',
                    'id': 2,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'applicationCode': {
                    'rule': 'required',
                    'type': 'string',
                    'id': 3,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'data': {
                    'type': 'string',
                    'id': 4,
                    'comment': null,
                    'parsedOptions': null
                  }
                },
                'comment': null
              },
              'Event': {
                'fields': {
                  'methodName': {
                    'rule': 'required',
                    'type': 'string',
                    'id': 1,
                    'comment': null,
                    'parsedOptions': null
                  }
                },
                'comment': null
              },
              'HttpStatusCode': {
                'values': {
                  'UNKNOWN_ERROR': 0,
                  'UNAUTHENTICATED': 1,
                  'INVALID_ARGUMENT': 3,
                  'INTERNAL': 5,
                  'RESOURCE_EXHAUSTED': 7,
                  'CANCELED': 8,
                  'NOT_FOUND': 4,
                  'ALREADY_EXISTS': 9,
                  'FAILED_PRECONDITION': 10
                },
                'comment': null,
                'comments': {
                  'UNKNOWN_ERROR': null,
                  'UNAUTHENTICATED': null,
                  'INVALID_ARGUMENT': null,
                  'INTERNAL': null,
                  'RESOURCE_EXHAUSTED': null,
                  'CANCELED': null,
                  'NOT_FOUND': null,
                  'ALREADY_EXISTS': null,
                  'FAILED_PRECONDITION': null
                }
              }
            }
          }
        }
      },
      'google': {
        'nested': {
          'protobuf': {
            'options': {
              'go_package': 'google.golang.org/protobuf/types/descriptorpb',
              'java_package': 'com.google.protobuf',
              'java_outer_classname': 'DescriptorProtos',
              'csharp_namespace': 'Google.Protobuf.Reflection',
              'objc_class_prefix': 'GPB',
              'cc_enable_arenas': true,
              'optimize_for': 'SPEED'
            },
            'nested': {
              'FileDescriptorSet': {
                'fields': {
                  'file': {
                    'rule': 'repeated',
                    'type': 'FileDescriptorProto',
                    'id': 1,
                    'comment': null,
                    'parsedOptions': null
                  }
                },
                'comment': null
              },
              'FileDescriptorProto': {
                'fields': {
                  'name': {
                    'type': 'string',
                    'id': 1,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'package': {
                    'type': 'string',
                    'id': 2,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'dependency': {
                    'rule': 'repeated',
                    'type': 'string',
                    'id': 3,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'publicDependency': {
                    'rule': 'repeated',
                    'type': 'int32',
                    'id': 10,
                    'options': { 'packed': false },
                    'comment': null,
                    'parsedOptions': null
                  },
                  'weakDependency': {
                    'rule': 'repeated',
                    'type': 'int32',
                    'id': 11,
                    'options': { 'packed': false },
                    'comment': null,
                    'parsedOptions': null
                  },
                  'messageType': {
                    'rule': 'repeated',
                    'type': 'DescriptorProto',
                    'id': 4,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'enumType': {
                    'rule': 'repeated',
                    'type': 'EnumDescriptorProto',
                    'id': 5,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'service': {
                    'rule': 'repeated',
                    'type': 'ServiceDescriptorProto',
                    'id': 6,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'extension': {
                    'rule': 'repeated',
                    'type': 'FieldDescriptorProto',
                    'id': 7,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'options': {
                    'type': 'FileOptions',
                    'id': 8,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'sourceCodeInfo': {
                    'type': 'SourceCodeInfo',
                    'id': 9,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'syntax': {
                    'type': 'string',
                    'id': 12,
                    'comment': null,
                    'parsedOptions': null
                  }
                },
                'comment': null
              },
              'DescriptorProto': {
                'fields': {
                  'name': {
                    'type': 'string',
                    'id': 1,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'field': {
                    'rule': 'repeated',
                    'type': 'FieldDescriptorProto',
                    'id': 2,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'extension': {
                    'rule': 'repeated',
                    'type': 'FieldDescriptorProto',
                    'id': 6,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'nestedType': {
                    'rule': 'repeated',
                    'type': 'DescriptorProto',
                    'id': 3,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'enumType': {
                    'rule': 'repeated',
                    'type': 'EnumDescriptorProto',
                    'id': 4,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'extensionRange': {
                    'rule': 'repeated',
                    'type': 'ExtensionRange',
                    'id': 5,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'oneofDecl': {
                    'rule': 'repeated',
                    'type': 'OneofDescriptorProto',
                    'id': 8,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'options': {
                    'type': 'MessageOptions',
                    'id': 7,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'reservedRange': {
                    'rule': 'repeated',
                    'type': 'ReservedRange',
                    'id': 9,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'reservedName': {
                    'rule': 'repeated',
                    'type': 'string',
                    'id': 10,
                    'comment': null,
                    'parsedOptions': null
                  }
                },
                'nested': {
                  'ExtensionRange': {
                    'fields': {
                      'start': {
                        'type': 'int32',
                        'id': 1,
                        'comment': null,
                        'parsedOptions': null
                      },
                      'end': {
                        'type': 'int32',
                        'id': 2,
                        'comment': null,
                        'parsedOptions': null
                      },
                      'options': {
                        'type': 'ExtensionRangeOptions',
                        'id': 3,
                        'comment': null,
                        'parsedOptions': null
                      }
                    },
                    'comment': null
                  },
                  'ReservedRange': {
                    'fields': {
                      'start': {
                        'type': 'int32',
                        'id': 1,
                        'comment': null,
                        'parsedOptions': null
                      },
                      'end': {
                        'type': 'int32',
                        'id': 2,
                        'comment': null,
                        'parsedOptions': null
                      }
                    },
                    'comment': null
                  }
                },
                'comment': null
              },
              'ExtensionRangeOptions': {
                'fields': {
                  'uninterpretedOption': {
                    'rule': 'repeated',
                    'type': 'UninterpretedOption',
                    'id': 999,
                    'comment': null,
                    'parsedOptions': null
                  }
                },
                'extensions': [[
                    1000,
                    536870911
                  ]],
                'comment': null
              },
              'FieldDescriptorProto': {
                'fields': {
                  'name': {
                    'type': 'string',
                    'id': 1,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'number': {
                    'type': 'int32',
                    'id': 3,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'label': {
                    'type': 'Label',
                    'id': 4,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'type': {
                    'type': 'Type',
                    'id': 5,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'typeName': {
                    'type': 'string',
                    'id': 6,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'extendee': {
                    'type': 'string',
                    'id': 2,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'defaultValue': {
                    'type': 'string',
                    'id': 7,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'oneofIndex': {
                    'type': 'int32',
                    'id': 9,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'jsonName': {
                    'type': 'string',
                    'id': 10,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'options': {
                    'type': 'FieldOptions',
                    'id': 8,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'proto3Optional': {
                    'type': 'bool',
                    'id': 17,
                    'comment': null,
                    'parsedOptions': null
                  }
                },
                'nested': {
                  'Type': {
                    'values': {
                      'TYPE_DOUBLE': 1,
                      'TYPE_FLOAT': 2,
                      'TYPE_INT64': 3,
                      'TYPE_UINT64': 4,
                      'TYPE_INT32': 5,
                      'TYPE_FIXED64': 6,
                      'TYPE_FIXED32': 7,
                      'TYPE_BOOL': 8,
                      'TYPE_STRING': 9,
                      'TYPE_GROUP': 10,
                      'TYPE_MESSAGE': 11,
                      'TYPE_BYTES': 12,
                      'TYPE_UINT32': 13,
                      'TYPE_ENUM': 14,
                      'TYPE_SFIXED32': 15,
                      'TYPE_SFIXED64': 16,
                      'TYPE_SINT32': 17,
                      'TYPE_SINT64': 18
                    },
                    'comment': null,
                    'comments': {
                      'TYPE_DOUBLE': null,
                      'TYPE_FLOAT': null,
                      'TYPE_INT64': null,
                      'TYPE_UINT64': null,
                      'TYPE_INT32': null,
                      'TYPE_FIXED64': null,
                      'TYPE_FIXED32': null,
                      'TYPE_BOOL': null,
                      'TYPE_STRING': null,
                      'TYPE_GROUP': null,
                      'TYPE_MESSAGE': null,
                      'TYPE_BYTES': null,
                      'TYPE_UINT32': null,
                      'TYPE_ENUM': null,
                      'TYPE_SFIXED32': null,
                      'TYPE_SFIXED64': null,
                      'TYPE_SINT32': null,
                      'TYPE_SINT64': null
                    }
                  },
                  'Label': {
                    'values': {
                      'LABEL_OPTIONAL': 1,
                      'LABEL_REQUIRED': 2,
                      'LABEL_REPEATED': 3
                    },
                    'comment': null,
                    'comments': {
                      'LABEL_OPTIONAL': null,
                      'LABEL_REQUIRED': null,
                      'LABEL_REPEATED': null
                    }
                  }
                },
                'comment': null
              },
              'OneofDescriptorProto': {
                'fields': {
                  'name': {
                    'type': 'string',
                    'id': 1,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'options': {
                    'type': 'OneofOptions',
                    'id': 2,
                    'comment': null,
                    'parsedOptions': null
                  }
                },
                'comment': null
              },
              'EnumDescriptorProto': {
                'fields': {
                  'name': {
                    'type': 'string',
                    'id': 1,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'value': {
                    'rule': 'repeated',
                    'type': 'EnumValueDescriptorProto',
                    'id': 2,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'options': {
                    'type': 'EnumOptions',
                    'id': 3,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'reservedRange': {
                    'rule': 'repeated',
                    'type': 'EnumReservedRange',
                    'id': 4,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'reservedName': {
                    'rule': 'repeated',
                    'type': 'string',
                    'id': 5,
                    'comment': null,
                    'parsedOptions': null
                  }
                },
                'nested': {
                  'EnumReservedRange': {
                    'fields': {
                      'start': {
                        'type': 'int32',
                        'id': 1,
                        'comment': null,
                        'parsedOptions': null
                      },
                      'end': {
                        'type': 'int32',
                        'id': 2,
                        'comment': null,
                        'parsedOptions': null
                      }
                    },
                    'comment': null
                  }
                },
                'comment': null
              },
              'EnumValueDescriptorProto': {
                'fields': {
                  'name': {
                    'type': 'string',
                    'id': 1,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'number': {
                    'type': 'int32',
                    'id': 2,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'options': {
                    'type': 'EnumValueOptions',
                    'id': 3,
                    'comment': null,
                    'parsedOptions': null
                  }
                },
                'comment': null
              },
              'ServiceDescriptorProto': {
                'fields': {
                  'name': {
                    'type': 'string',
                    'id': 1,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'method': {
                    'rule': 'repeated',
                    'type': 'MethodDescriptorProto',
                    'id': 2,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'options': {
                    'type': 'ServiceOptions',
                    'id': 3,
                    'comment': null,
                    'parsedOptions': null
                  }
                },
                'comment': null
              },
              'MethodDescriptorProto': {
                'fields': {
                  'name': {
                    'type': 'string',
                    'id': 1,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'inputType': {
                    'type': 'string',
                    'id': 2,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'outputType': {
                    'type': 'string',
                    'id': 3,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'options': {
                    'type': 'MethodOptions',
                    'id': 4,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'clientStreaming': {
                    'type': 'bool',
                    'id': 5,
                    'options': { 'default': false },
                    'comment': null,
                    'parsedOptions': [{
                        'default': false,
                        '__comment': null
                      }]
                  },
                  'serverStreaming': {
                    'type': 'bool',
                    'id': 6,
                    'options': { 'default': false },
                    'comment': null,
                    'parsedOptions': [{
                        'default': false,
                        '__comment': null
                      }]
                  }
                },
                'comment': null
              },
              'FileOptions': {
                'fields': {
                  'javaPackage': {
                    'type': 'string',
                    'id': 1,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'javaOuterClassname': {
                    'type': 'string',
                    'id': 8,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'javaMultipleFiles': {
                    'type': 'bool',
                    'id': 10,
                    'options': { 'default': false },
                    'comment': null,
                    'parsedOptions': [{
                        'default': false,
                        '__comment': null
                      }]
                  },
                  'javaGenerateEqualsAndHash': {
                    'type': 'bool',
                    'id': 20,
                    'options': { 'deprecated': true },
                    'comment': null,
                    'parsedOptions': [{
                        'deprecated': true,
                        '__comment': null
                      }]
                  },
                  'javaStringCheckUtf8': {
                    'type': 'bool',
                    'id': 27,
                    'options': { 'default': false },
                    'comment': null,
                    'parsedOptions': [{
                        'default': false,
                        '__comment': null
                      }]
                  },
                  'optimizeFor': {
                    'type': 'OptimizeMode',
                    'id': 9,
                    'options': { 'default': 'SPEED' },
                    'comment': null,
                    'parsedOptions': [{
                        'default': 'SPEED',
                        '__comment': null
                      }]
                  },
                  'goPackage': {
                    'type': 'string',
                    'id': 11,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'ccGenericServices': {
                    'type': 'bool',
                    'id': 16,
                    'options': { 'default': false },
                    'comment': null,
                    'parsedOptions': [{
                        'default': false,
                        '__comment': null
                      }]
                  },
                  'javaGenericServices': {
                    'type': 'bool',
                    'id': 17,
                    'options': { 'default': false },
                    'comment': null,
                    'parsedOptions': [{
                        'default': false,
                        '__comment': null
                      }]
                  },
                  'pyGenericServices': {
                    'type': 'bool',
                    'id': 18,
                    'options': { 'default': false },
                    'comment': null,
                    'parsedOptions': [{
                        'default': false,
                        '__comment': null
                      }]
                  },
                  'phpGenericServices': {
                    'type': 'bool',
                    'id': 42,
                    'options': { 'default': false },
                    'comment': null,
                    'parsedOptions': [{
                        'default': false,
                        '__comment': null
                      }]
                  },
                  'deprecated': {
                    'type': 'bool',
                    'id': 23,
                    'options': { 'default': false },
                    'comment': null,
                    'parsedOptions': [{
                        'default': false,
                        '__comment': null
                      }]
                  },
                  'ccEnableArenas': {
                    'type': 'bool',
                    'id': 31,
                    'options': { 'default': true },
                    'comment': null,
                    'parsedOptions': [{
                        'default': true,
                        '__comment': null
                      }]
                  },
                  'objcClassPrefix': {
                    'type': 'string',
                    'id': 36,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'csharpNamespace': {
                    'type': 'string',
                    'id': 37,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'swiftPrefix': {
                    'type': 'string',
                    'id': 39,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'phpClassPrefix': {
                    'type': 'string',
                    'id': 40,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'phpNamespace': {
                    'type': 'string',
                    'id': 41,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'phpMetadataNamespace': {
                    'type': 'string',
                    'id': 44,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'rubyPackage': {
                    'type': 'string',
                    'id': 45,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'uninterpretedOption': {
                    'rule': 'repeated',
                    'type': 'UninterpretedOption',
                    'id': 999,
                    'comment': null,
                    'parsedOptions': null
                  }
                },
                'extensions': [[
                    1000,
                    536870911
                  ]],
                'reserved': [[
                    38,
                    38
                  ]],
                'nested': {
                  'OptimizeMode': {
                    'values': {
                      'SPEED': 1,
                      'CODE_SIZE': 2,
                      'LITE_RUNTIME': 3
                    },
                    'comment': null,
                    'comments': {
                      'SPEED': null,
                      'CODE_SIZE': null,
                      'LITE_RUNTIME': null
                    }
                  }
                },
                'comment': null
              },
              'MessageOptions': {
                'fields': {
                  'messageSetWireFormat': {
                    'type': 'bool',
                    'id': 1,
                    'options': { 'default': false },
                    'comment': null,
                    'parsedOptions': [{
                        'default': false,
                        '__comment': null
                      }]
                  },
                  'noStandardDescriptorAccessor': {
                    'type': 'bool',
                    'id': 2,
                    'options': { 'default': false },
                    'comment': null,
                    'parsedOptions': [{
                        'default': false,
                        '__comment': null
                      }]
                  },
                  'deprecated': {
                    'type': 'bool',
                    'id': 3,
                    'options': { 'default': false },
                    'comment': null,
                    'parsedOptions': [{
                        'default': false,
                        '__comment': null
                      }]
                  },
                  'mapEntry': {
                    'type': 'bool',
                    'id': 7,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'uninterpretedOption': {
                    'rule': 'repeated',
                    'type': 'UninterpretedOption',
                    'id': 999,
                    'comment': null,
                    'parsedOptions': null
                  }
                },
                'extensions': [[
                    1000,
                    536870911
                  ]],
                'reserved': [
                  [
                    4,
                    4
                  ],
                  [
                    5,
                    5
                  ],
                  [
                    6,
                    6
                  ],
                  [
                    8,
                    8
                  ],
                  [
                    9,
                    9
                  ]
                ],
                'comment': null
              },
              'FieldOptions': {
                'fields': {
                  'ctype': {
                    'type': 'CType',
                    'id': 1,
                    'options': { 'default': 'STRING' },
                    'comment': null,
                    'parsedOptions': [{
                        'default': 'STRING',
                        '__comment': null
                      }]
                  },
                  'packed': {
                    'type': 'bool',
                    'id': 2,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'jstype': {
                    'type': 'JSType',
                    'id': 6,
                    'options': { 'default': 'JS_NORMAL' },
                    'comment': null,
                    'parsedOptions': [{
                        'default': 'JS_NORMAL',
                        '__comment': null
                      }]
                  },
                  'lazy': {
                    'type': 'bool',
                    'id': 5,
                    'options': { 'default': false },
                    'comment': null,
                    'parsedOptions': [{
                        'default': false,
                        '__comment': null
                      }]
                  },
                  'deprecated': {
                    'type': 'bool',
                    'id': 3,
                    'options': { 'default': false },
                    'comment': null,
                    'parsedOptions': [{
                        'default': false,
                        '__comment': null
                      }]
                  },
                  'weak': {
                    'type': 'bool',
                    'id': 10,
                    'options': { 'default': false },
                    'comment': null,
                    'parsedOptions': [{
                        'default': false,
                        '__comment': null
                      }]
                  },
                  'uninterpretedOption': {
                    'rule': 'repeated',
                    'type': 'UninterpretedOption',
                    'id': 999,
                    'comment': null,
                    'parsedOptions': null
                  }
                },
                'extensions': [[
                    1000,
                    536870911
                  ]],
                'reserved': [[
                    4,
                    4
                  ]],
                'nested': {
                  'CType': {
                    'values': {
                      'STRING': 0,
                      'CORD': 1,
                      'STRING_PIECE': 2
                    },
                    'comment': null,
                    'comments': {
                      'STRING': null,
                      'CORD': null,
                      'STRING_PIECE': null
                    }
                  },
                  'JSType': {
                    'values': {
                      'JS_NORMAL': 0,
                      'JS_STRING': 1,
                      'JS_NUMBER': 2
                    },
                    'comment': null,
                    'comments': {
                      'JS_NORMAL': null,
                      'JS_STRING': null,
                      'JS_NUMBER': null
                    }
                  }
                },
                'comment': null
              },
              'OneofOptions': {
                'fields': {
                  'uninterpretedOption': {
                    'rule': 'repeated',
                    'type': 'UninterpretedOption',
                    'id': 999,
                    'comment': null,
                    'parsedOptions': null
                  }
                },
                'extensions': [[
                    1000,
                    536870911
                  ]],
                'comment': null
              },
              'EnumOptions': {
                'fields': {
                  'allowAlias': {
                    'type': 'bool',
                    'id': 2,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'deprecated': {
                    'type': 'bool',
                    'id': 3,
                    'options': { 'default': false },
                    'comment': null,
                    'parsedOptions': [{
                        'default': false,
                        '__comment': null
                      }]
                  },
                  'uninterpretedOption': {
                    'rule': 'repeated',
                    'type': 'UninterpretedOption',
                    'id': 999,
                    'comment': null,
                    'parsedOptions': null
                  }
                },
                'extensions': [[
                    1000,
                    536870911
                  ]],
                'reserved': [[
                    5,
                    5
                  ]],
                'comment': null
              },
              'EnumValueOptions': {
                'fields': {
                  'deprecated': {
                    'type': 'bool',
                    'id': 1,
                    'options': { 'default': false },
                    'comment': null,
                    'parsedOptions': [{
                        'default': false,
                        '__comment': null
                      }]
                  },
                  'uninterpretedOption': {
                    'rule': 'repeated',
                    'type': 'UninterpretedOption',
                    'id': 999,
                    'comment': null,
                    'parsedOptions': null
                  }
                },
                'extensions': [[
                    1000,
                    536870911
                  ]],
                'comment': null
              },
              'ServiceOptions': {
                'fields': {
                  'deprecated': {
                    'type': 'bool',
                    'id': 33,
                    'options': { 'default': false },
                    'comment': null,
                    'parsedOptions': [{
                        'default': false,
                        '__comment': null
                      }]
                  },
                  'uninterpretedOption': {
                    'rule': 'repeated',
                    'type': 'UninterpretedOption',
                    'id': 999,
                    'comment': null,
                    'parsedOptions': null
                  }
                },
                'extensions': [[
                    1000,
                    536870911
                  ]],
                'comment': null
              },
              'MethodOptions': {
                'fields': {
                  'deprecated': {
                    'type': 'bool',
                    'id': 33,
                    'options': { 'default': false },
                    'comment': null,
                    'parsedOptions': [{
                        'default': false,
                        '__comment': null
                      }]
                  },
                  'idempotencyLevel': {
                    'type': 'IdempotencyLevel',
                    'id': 34,
                    'options': { 'default': 'IDEMPOTENCY_UNKNOWN' },
                    'comment': null,
                    'parsedOptions': [{
                        'default': 'IDEMPOTENCY_UNKNOWN',
                        '__comment': null
                      }]
                  },
                  'uninterpretedOption': {
                    'rule': 'repeated',
                    'type': 'UninterpretedOption',
                    'id': 999,
                    'comment': null,
                    'parsedOptions': null
                  }
                },
                'extensions': [[
                    1000,
                    536870911
                  ]],
                'nested': {
                  'IdempotencyLevel': {
                    'values': {
                      'IDEMPOTENCY_UNKNOWN': 0,
                      'NO_SIDE_EFFECTS': 1,
                      'IDEMPOTENT': 2
                    },
                    'comment': null,
                    'comments': {
                      'IDEMPOTENCY_UNKNOWN': null,
                      'NO_SIDE_EFFECTS': null,
                      'IDEMPOTENT': null
                    }
                  }
                },
                'comment': null
              },
              'UninterpretedOption': {
                'fields': {
                  'name': {
                    'rule': 'repeated',
                    'type': 'NamePart',
                    'id': 2,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'identifierValue': {
                    'type': 'string',
                    'id': 3,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'positiveIntValue': {
                    'type': 'uint64',
                    'id': 4,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'negativeIntValue': {
                    'type': 'int64',
                    'id': 5,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'doubleValue': {
                    'type': 'double',
                    'id': 6,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'stringValue': {
                    'type': 'bytes',
                    'id': 7,
                    'comment': null,
                    'parsedOptions': null
                  },
                  'aggregateValue': {
                    'type': 'string',
                    'id': 8,
                    'comment': null,
                    'parsedOptions': null
                  }
                },
                'nested': {
                  'NamePart': {
                    'fields': {
                      'namePart': {
                        'rule': 'required',
                        'type': 'string',
                        'id': 1,
                        'comment': null,
                        'parsedOptions': null
                      },
                      'isExtension': {
                        'rule': 'required',
                        'type': 'bool',
                        'id': 2,
                        'comment': null,
                        'parsedOptions': null
                      }
                    },
                    'comment': null
                  }
                },
                'comment': null
              },
              'SourceCodeInfo': {
                'fields': {
                  'location': {
                    'rule': 'repeated',
                    'type': 'Location',
                    'id': 1,
                    'comment': null,
                    'parsedOptions': null
                  }
                },
                'nested': {
                  'Location': {
                    'fields': {
                      'path': {
                        'rule': 'repeated',
                        'type': 'int32',
                        'id': 1,
                        'comment': null,
                        'parsedOptions': [{
                            'packed': true,
                            '__comment': null
                          }]
                      },
                      'span': {
                        'rule': 'repeated',
                        'type': 'int32',
                        'id': 2,
                        'comment': null,
                        'parsedOptions': [{
                            'packed': true,
                            '__comment': null
                          }]
                      },
                      'leadingComments': {
                        'type': 'string',
                        'id': 3,
                        'comment': null,
                        'parsedOptions': null
                      },
                      'trailingComments': {
                        'type': 'string',
                        'id': 4,
                        'comment': null,
                        'parsedOptions': null
                      },
                      'leadingDetachedComments': {
                        'rule': 'repeated',
                        'type': 'string',
                        'id': 6,
                        'comment': null,
                        'parsedOptions': null
                      }
                    },
                    'comment': null
                  }
                },
                'comment': null
              },
              'GeneratedCodeInfo': {
                'fields': {
                  'annotation': {
                    'rule': 'repeated',
                    'type': 'Annotation',
                    'id': 1,
                    'comment': null,
                    'parsedOptions': null
                  }
                },
                'nested': {
                  'Annotation': {
                    'fields': {
                      'path': {
                        'rule': 'repeated',
                        'type': 'int32',
                        'id': 1,
                        'comment': null,
                        'parsedOptions': [{
                            'packed': true,
                            '__comment': null
                          }]
                      },
                      'sourceFile': {
                        'type': 'string',
                        'id': 2,
                        'comment': null,
                        'parsedOptions': null
                      },
                      'begin': {
                        'type': 'int32',
                        'id': 3,
                        'comment': null,
                        'parsedOptions': null
                      },
                      'end': {
                        'type': 'int32',
                        'id': 4,
                        'comment': null,
                        'parsedOptions': null
                      }
                    },
                    'comment': null
                  }
                },
                'comment': null
              },
              'Struct': {
                'fields': {
                  'fields': {
                    'keyType': 'string',
                    'type': 'Value',
                    'id': 1
                  }
                },
                'comment': null
              },
              'Value': {
                'oneofs': {
                  'kind': {
                    'oneof': [
                      'nullValue',
                      'numberValue',
                      'stringValue',
                      'boolValue',
                      'structValue',
                      'listValue'
                    ]
                  }
                },
                'fields': {
                  'nullValue': {
                    'type': 'NullValue',
                    'id': 1
                  },
                  'numberValue': {
                    'type': 'double',
                    'id': 2
                  },
                  'stringValue': {
                    'type': 'string',
                    'id': 3
                  },
                  'boolValue': {
                    'type': 'bool',
                    'id': 4
                  },
                  'structValue': {
                    'type': 'Struct',
                    'id': 5
                  },
                  'listValue': {
                    'type': 'ListValue',
                    'id': 6
                  }
                },
                'comment': null
              },
              'NullValue': {
                'values': { 'NULL_VALUE': 0 },
                'comments': {}
              },
              'ListValue': {
                'fields': {
                  'values': {
                    'rule': 'repeated',
                    'type': 'Value',
                    'id': 1
                  }
                },
                'comment': null
              },
              'DoubleValue': {
                'fields': {
                  'value': {
                    'type': 'double',
                    'id': 1
                  }
                },
                'comment': null
              },
              'FloatValue': {
                'fields': {
                  'value': {
                    'type': 'float',
                    'id': 1
                  }
                },
                'comment': null
              },
              'Int64Value': {
                'fields': {
                  'value': {
                    'type': 'int64',
                    'id': 1
                  }
                },
                'comment': null
              },
              'UInt64Value': {
                'fields': {
                  'value': {
                    'type': 'uint64',
                    'id': 1
                  }
                },
                'comment': null
              },
              'Int32Value': {
                'fields': {
                  'value': {
                    'type': 'int32',
                    'id': 1
                  }
                },
                'comment': null
              },
              'UInt32Value': {
                'fields': {
                  'value': {
                    'type': 'uint32',
                    'id': 1
                  }
                },
                'comment': null
              },
              'BoolValue': {
                'fields': {
                  'value': {
                    'type': 'bool',
                    'id': 1
                  }
                },
                'comment': null
              },
              'StringValue': {
                'fields': {
                  'value': {
                    'type': 'string',
                    'id': 1
                  }
                },
                'comment': null
              },
              'BytesValue': {
                'fields': {
                  'value': {
                    'type': 'bytes',
                    'id': 1
                  }
                },
                'comment': null
              }
            }
          }
        }
      }
    }
  });
  $root.__lookup = function () {
    return path => {
      return root.lookup(path);
    };
  };
  return $root.__lookup();
};
$root.wix = (function () {
  const _wix = {};
  _wix.api = (function () {
    const _api = {};
    _api.ActionPayload = (function () {
      class ActionPayload {
        constructor(props) {
          this.customSlug = props && props.customSlug;
        }
        static toJSON(obj, helper, withDefaults) {
          if (obj == null) {
            return null;
          } else {
            const json = {};
            if (obj['customSlug'] != null) {
              json['customSlug'] = obj['customSlug'];
            } else if (withDefaults) {
              json['customSlug'] = '';
            }
            return json;
          }
        }
        static fromJSON(json, helper, withDefaults) {
          if (typeof json === 'object' && !Array.isArray(json)) {
            const result = new $root.wix.api.ActionPayload();
            if (json['customSlug'] != null) {
              result['customSlug'] = json['customSlug'];
            } else if (withDefaults !== false) {
              result['customSlug'] = '';
            } else {
              delete result['customSlug'];
            }
            return result;
          } else
            return json;
        }
        static toGRPC(obj, helper) {
          if (obj == null) {
            return null;
          } else {
            const grpc = {};
            if (obj['customSlug'] != null) {
              grpc['customSlug'] = obj['customSlug'];
            }
            return grpc;
          }
        }
        static fromGRPC(grpc, helper) {
          if (grpc == null) {
            return null;
          } else {
            const result = new $root.wix.api.ActionPayload();
            if (grpc['customSlug'] != null) {
              result['customSlug'] = grpc['customSlug'];
            } else {
              result['customSlug'] = '';
            }
            return result;
          }
        }
      }
      __builtIn.Object.defineProperty(ActionPayload.prototype, '__proto', {
        value: pbjs => {
          return $root.__lookup(pbjs)('wix.api.ActionPayload');
        },
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(ActionPayload.prototype, '__fqn__', {
        value: 'wix.api.ActionPayload',
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(ActionPayload.prototype, '__options__', {
        value: $root.__options,
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(ActionPayload.prototype, '__root__', {
        value: $root,
        enumerable: false,
        configurable: false
      });
      return ActionPayload;
    }());;
    _api.CacheSettings = (function () {
      class CacheSettings {
        constructor(props) {
          this.maxAgeSeconds = props && props.maxAgeSeconds;
        }
        static toJSON(obj, helper, withDefaults) {
          if (obj == null) {
            return null;
          } else {
            const json = {};
            if (obj['maxAgeSeconds'] != null) {
              json['maxAgeSeconds'] = obj['maxAgeSeconds'];
            } else if (withDefaults) {
              json['maxAgeSeconds'] = 0;
            }
            return json;
          }
        }
        static fromJSON(json, helper, withDefaults) {
          if (typeof json === 'object' && !Array.isArray(json)) {
            const result = new $root.wix.api.CacheSettings();
            if (json['maxAgeSeconds'] != null) {
              result['maxAgeSeconds'] = json['maxAgeSeconds'];
            } else if (withDefaults !== false) {
              result['maxAgeSeconds'] = 0;
            } else {
              delete result['maxAgeSeconds'];
            }
            return result;
          } else
            return json;
        }
        static toGRPC(obj, helper) {
          if (obj == null) {
            return null;
          } else {
            const grpc = {};
            if (obj['maxAgeSeconds'] != null) {
              grpc['maxAgeSeconds'] = obj['maxAgeSeconds'];
            }
            return grpc;
          }
        }
        static fromGRPC(grpc, helper) {
          if (grpc == null) {
            return null;
          } else {
            const result = new $root.wix.api.CacheSettings();
            if (grpc['maxAgeSeconds'] != null) {
              result['maxAgeSeconds'] = grpc['maxAgeSeconds'];
            } else {
              result['maxAgeSeconds'] = 0;
            }
            return result;
          }
        }
      }
      __builtIn.Object.defineProperty(CacheSettings.prototype, '__proto', {
        value: pbjs => {
          return $root.__lookup(pbjs)('wix.api.CacheSettings');
        },
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(CacheSettings.prototype, '__fqn__', {
        value: 'wix.api.CacheSettings',
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(CacheSettings.prototype, '__options__', {
        value: $root.__options,
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(CacheSettings.prototype, '__root__', {
        value: $root,
        enumerable: false,
        configurable: false
      });
      return CacheSettings;
    }());;
    _api.FieldSet = (function () {
      class FieldSet {
        constructor(props) {
          this.field = props && props.field;
        }
        static toJSON(obj, helper, withDefaults) {
          if (obj == null) {
            return null;
          } else {
            const json = {};
            if (obj['field'] != null) {
              json['field'] = obj['field'].map(e => {
                return e;
              });
            } else if (withDefaults) {
              json['field'] = [];
            }
            return json;
          }
        }
        static fromJSON(json, helper, withDefaults) {
          if (typeof json === 'object' && !Array.isArray(json)) {
            const result = new $root.wix.api.FieldSet();
            if (json['field'] != null) {
              result['field'] = Array.isArray(json['field']) ? json['field'].map(e => {
                return e;
              }) : json['field'];
            } else if (withDefaults !== false) {
              result['field'] = [];
            } else {
              delete result['field'];
            }
            return result;
          } else
            return json;
        }
        static toGRPC(obj, helper) {
          if (obj == null) {
            return null;
          } else {
            const grpc = {};
            if (obj['field'] != null) {
              grpc['field'] = obj['field'].map(e => {
                return e;
              });
            }
            return grpc;
          }
        }
        static fromGRPC(grpc, helper) {
          if (grpc == null) {
            return null;
          } else {
            const result = new $root.wix.api.FieldSet();
            if (grpc['field'] != null) {
              result['field'] = grpc['field'].map(e => {
                return e;
              });
            } else {
              result['field'] = [];
            }
            return result;
          }
        }
      }
      __builtIn.Object.defineProperty(FieldSet.prototype, '__proto', {
        value: pbjs => {
          return $root.__lookup(pbjs)('wix.api.FieldSet');
        },
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(FieldSet.prototype, '__fqn__', {
        value: 'wix.api.FieldSet',
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(FieldSet.prototype, '__options__', {
        value: $root.__options,
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(FieldSet.prototype, '__root__', {
        value: $root,
        enumerable: false,
        configurable: false
      });
      return FieldSet;
    }());;
    _api.Deprecated = (function () {
      class Deprecated {
        constructor(props) {
          this.replacedBy = props && props.replacedBy;
          this.targetRemovalDate = props && props.targetRemovalDate;
        }
        static toJSON(obj, helper, withDefaults) {
          if (obj == null) {
            return null;
          } else {
            const json = {};
            if (obj['replacedBy'] != null) {
              json['replacedBy'] = obj['replacedBy'];
            } else if (withDefaults) {
              json['replacedBy'] = '';
            }
            if (obj['targetRemovalDate'] != null) {
              json['targetRemovalDate'] = obj['targetRemovalDate'];
            } else if (withDefaults) {
              json['targetRemovalDate'] = '';
            }
            return json;
          }
        }
        static fromJSON(json, helper, withDefaults) {
          if (typeof json === 'object' && !Array.isArray(json)) {
            const result = new $root.wix.api.Deprecated();
            if (json['replacedBy'] != null) {
              result['replacedBy'] = json['replacedBy'];
            } else if (withDefaults !== false) {
              result['replacedBy'] = '';
            } else {
              delete result['replacedBy'];
            }
            if (json['targetRemovalDate'] != null) {
              result['targetRemovalDate'] = json['targetRemovalDate'];
            } else if (withDefaults !== false) {
              result['targetRemovalDate'] = '';
            } else {
              delete result['targetRemovalDate'];
            }
            return result;
          } else
            return json;
        }
        static toGRPC(obj, helper) {
          if (obj == null) {
            return null;
          } else {
            const grpc = {};
            if (obj['replacedBy'] != null) {
              grpc['replacedBy'] = obj['replacedBy'];
            }
            if (obj['targetRemovalDate'] != null) {
              grpc['targetRemovalDate'] = obj['targetRemovalDate'];
            }
            return grpc;
          }
        }
        static fromGRPC(grpc, helper) {
          if (grpc == null) {
            return null;
          } else {
            const result = new $root.wix.api.Deprecated();
            if (grpc['replacedBy'] != null) {
              result['replacedBy'] = grpc['replacedBy'];
            } else {
              result['replacedBy'] = '';
            }
            if (grpc['targetRemovalDate'] != null) {
              result['targetRemovalDate'] = grpc['targetRemovalDate'];
            } else {
              result['targetRemovalDate'] = '';
            }
            return result;
          }
        }
      }
      __builtIn.Object.defineProperty(Deprecated.prototype, '__proto', {
        value: pbjs => {
          return $root.__lookup(pbjs)('wix.api.Deprecated');
        },
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(Deprecated.prototype, '__fqn__', {
        value: 'wix.api.Deprecated',
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(Deprecated.prototype, '__options__', {
        value: $root.__options,
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(Deprecated.prototype, '__root__', {
        value: $root,
        enumerable: false,
        configurable: false
      });
      return Deprecated;
    }());;
    _api.Unique = (function () {
      class Unique {
        constructor(props) {
          this.field = props && props.field;
        }
        static toJSON(obj, helper, withDefaults) {
          if (obj == null) {
            return null;
          } else {
            const json = {};
            if (obj['field'] != null) {
              json['field'] = obj['field'].map(e => {
                return e;
              });
            } else if (withDefaults) {
              json['field'] = [];
            }
            return json;
          }
        }
        static fromJSON(json, helper, withDefaults) {
          if (typeof json === 'object' && !Array.isArray(json)) {
            const result = new $root.wix.api.Unique();
            if (json['field'] != null) {
              result['field'] = Array.isArray(json['field']) ? json['field'].map(e => {
                return e;
              }) : json['field'];
            } else if (withDefaults !== false) {
              result['field'] = [];
            } else {
              delete result['field'];
            }
            return result;
          } else
            return json;
        }
        static toGRPC(obj, helper) {
          if (obj == null) {
            return null;
          } else {
            const grpc = {};
            if (obj['field'] != null) {
              grpc['field'] = obj['field'].map(e => {
                return e;
              });
            }
            return grpc;
          }
        }
        static fromGRPC(grpc, helper) {
          if (grpc == null) {
            return null;
          } else {
            const result = new $root.wix.api.Unique();
            if (grpc['field'] != null) {
              result['field'] = grpc['field'].map(e => {
                return e;
              });
            } else {
              result['field'] = [];
            }
            return result;
          }
        }
      }
      __builtIn.Object.defineProperty(Unique.prototype, '__proto', {
        value: pbjs => {
          return $root.__lookup(pbjs)('wix.api.Unique');
        },
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(Unique.prototype, '__fqn__', {
        value: 'wix.api.Unique',
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(Unique.prototype, '__options__', {
        value: $root.__options,
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(Unique.prototype, '__root__', {
        value: $root,
        enumerable: false,
        configurable: false
      });
      return Unique;
    }());;
    _api.Crud = (function () {
      class Crud {
        constructor(props) {
          this.method = props && props.method;
          this.createOptions = props && props.createOptions;
          this.getOptions = props && props.getOptions;
          this.updateOptions = props && props.updateOptions;
          this.deleteOptions = props && props.deleteOptions;
          this.listOptions = props && props.listOptions;
          this.queryOptions = props && props.queryOptions;
          this.searchOptions = props && props.searchOptions;
          this.bulkCreateOptions = props && props.bulkCreateOptions;
          this.bulkUpdateOptions = props && props.bulkUpdateOptions;
          this.bulkUpdateByFilterOptions = props && props.bulkUpdateByFilterOptions;
          this.bulkDeleteOptions = props && props.bulkDeleteOptions;
          this.bulkDeleteByFilterOptions = props && props.bulkDeleteByFilterOptions;
          this.upsertOptions = props && props.upsertOptions;
          this.bulkUpsertOptions = props && props.bulkUpsertOptions;
          this.listDeletedOptions = props && props.listDeletedOptions;
          this.getDeletedOptions = props && props.getDeletedOptions;
          this.restoreFromTrashbinOptions = props && props.restoreFromTrashbinOptions;
          this.removeFromTrashbinOptions = props && props.removeFromTrashbinOptions;
        }
        static toJSON(obj, helper, withDefaults) {
          if (obj == null) {
            return null;
          } else {
            const json = {};
            if (obj['method'] != null) {
              json['method'] = $root.wix.api.Crud.Method[obj['method']];
            } else if (withDefaults) {
              json['method'] = 0;
            }
            if (obj['createOptions'] != null) {
              json['createOptions'] = $root.wix.api.CreateMethodOptions.toJSON(obj['createOptions'], helper, withDefaults);
            } else if (withDefaults) {
              delete json['createOptions'];
            }
            if (obj['getOptions'] != null) {
              json['getOptions'] = $root.wix.api.GetItemMethodOptions.toJSON(obj['getOptions'], helper, withDefaults);
            } else if (withDefaults) {
              delete json['getOptions'];
            }
            if (obj['updateOptions'] != null) {
              json['updateOptions'] = $root.wix.api.UpdateMethodOptions.toJSON(obj['updateOptions'], helper, withDefaults);
            } else if (withDefaults) {
              delete json['updateOptions'];
            }
            if (obj['deleteOptions'] != null) {
              json['deleteOptions'] = $root.wix.api.DeleteMethodOptions.toJSON(obj['deleteOptions'], helper, withDefaults);
            } else if (withDefaults) {
              delete json['deleteOptions'];
            }
            if (obj['listOptions'] != null) {
              json['listOptions'] = $root.wix.api.ListMethodOptions.toJSON(obj['listOptions'], helper, withDefaults);
            } else if (withDefaults) {
              delete json['listOptions'];
            }
            if (obj['queryOptions'] != null) {
              json['queryOptions'] = $root.wix.api.QueryMethodOptions.toJSON(obj['queryOptions'], helper, withDefaults);
            } else if (withDefaults) {
              delete json['queryOptions'];
            }
            if (obj['searchOptions'] != null) {
              json['searchOptions'] = $root.wix.api.SearchMethodOptions.toJSON(obj['searchOptions'], helper, withDefaults);
            } else if (withDefaults) {
              delete json['searchOptions'];
            }
            if (obj['bulkCreateOptions'] != null) {
              json['bulkCreateOptions'] = $root.wix.api.BulkCreateMethodOptions.toJSON(obj['bulkCreateOptions'], helper, withDefaults);
            } else if (withDefaults) {
              delete json['bulkCreateOptions'];
            }
            if (obj['bulkUpdateOptions'] != null) {
              json['bulkUpdateOptions'] = $root.wix.api.BulkUpdateMethodOptions.toJSON(obj['bulkUpdateOptions'], helper, withDefaults);
            } else if (withDefaults) {
              delete json['bulkUpdateOptions'];
            }
            if (obj['bulkUpdateByFilterOptions'] != null) {
              json['bulkUpdateByFilterOptions'] = $root.wix.api.BulkUpdateByFilterMethodOptions.toJSON(obj['bulkUpdateByFilterOptions'], helper, withDefaults);
            } else if (withDefaults) {
              delete json['bulkUpdateByFilterOptions'];
            }
            if (obj['bulkDeleteOptions'] != null) {
              json['bulkDeleteOptions'] = $root.wix.api.BulkDeleteMethodOptions.toJSON(obj['bulkDeleteOptions'], helper, withDefaults);
            } else if (withDefaults) {
              delete json['bulkDeleteOptions'];
            }
            if (obj['bulkDeleteByFilterOptions'] != null) {
              json['bulkDeleteByFilterOptions'] = $root.wix.api.BulkDeleteByFilterMethodOptions.toJSON(obj['bulkDeleteByFilterOptions'], helper, withDefaults);
            } else if (withDefaults) {
              delete json['bulkDeleteByFilterOptions'];
            }
            if (obj['upsertOptions'] != null) {
              json['upsertOptions'] = $root.wix.api.UpsertMethodOptions.toJSON(obj['upsertOptions'], helper, withDefaults);
            } else if (withDefaults) {
              delete json['upsertOptions'];
            }
            if (obj['bulkUpsertOptions'] != null) {
              json['bulkUpsertOptions'] = $root.wix.api.BulkUpsertMethodOptions.toJSON(obj['bulkUpsertOptions'], helper, withDefaults);
            } else if (withDefaults) {
              delete json['bulkUpsertOptions'];
            }
            if (obj['listDeletedOptions'] != null) {
              json['listDeletedOptions'] = $root.wix.api.ListDeletedMethodOptions.toJSON(obj['listDeletedOptions'], helper, withDefaults);
            } else if (withDefaults) {
              delete json['listDeletedOptions'];
            }
            if (obj['getDeletedOptions'] != null) {
              json['getDeletedOptions'] = $root.wix.api.GetDeletedMethodOptions.toJSON(obj['getDeletedOptions'], helper, withDefaults);
            } else if (withDefaults) {
              delete json['getDeletedOptions'];
            }
            if (obj['restoreFromTrashbinOptions'] != null) {
              json['restoreFromTrashbinOptions'] = $root.wix.api.RestoreFromTrashbinMethodOptions.toJSON(obj['restoreFromTrashbinOptions'], helper, withDefaults);
            } else if (withDefaults) {
              delete json['restoreFromTrashbinOptions'];
            }
            if (obj['removeFromTrashbinOptions'] != null) {
              json['removeFromTrashbinOptions'] = $root.wix.api.RemoveFromTrashbinMethodOptions.toJSON(obj['removeFromTrashbinOptions'], helper, withDefaults);
            } else if (withDefaults) {
              delete json['removeFromTrashbinOptions'];
            }
            return json;
          }
        }
        static fromJSON(json, helper, withDefaults) {
          if (typeof json === 'object' && !Array.isArray(json)) {
            const result = new $root.wix.api.Crud();
            if (json['method'] != null) {
              result['method'] = typeof json['method'] === 'string' ? $root.wix.api.Crud.Method[json['method']] : json['method'];
            } else if (withDefaults !== false) {
              result['method'] = 0;
            } else {
              delete result['method'];
            }
            if (json['createOptions'] != null) {
              result['createOptions'] = $root.wix.api.CreateMethodOptions.fromJSON(json['createOptions'], helper);
            } else if (withDefaults !== false) {
              delete result['createOptions'];
            } else {
              delete result['createOptions'];
            }
            if (json['getOptions'] != null) {
              result['getOptions'] = $root.wix.api.GetItemMethodOptions.fromJSON(json['getOptions'], helper);
            } else if (withDefaults !== false) {
              delete result['getOptions'];
            } else {
              delete result['getOptions'];
            }
            if (json['updateOptions'] != null) {
              result['updateOptions'] = $root.wix.api.UpdateMethodOptions.fromJSON(json['updateOptions'], helper);
            } else if (withDefaults !== false) {
              delete result['updateOptions'];
            } else {
              delete result['updateOptions'];
            }
            if (json['deleteOptions'] != null) {
              result['deleteOptions'] = $root.wix.api.DeleteMethodOptions.fromJSON(json['deleteOptions'], helper);
            } else if (withDefaults !== false) {
              delete result['deleteOptions'];
            } else {
              delete result['deleteOptions'];
            }
            if (json['listOptions'] != null) {
              result['listOptions'] = $root.wix.api.ListMethodOptions.fromJSON(json['listOptions'], helper);
            } else if (withDefaults !== false) {
              delete result['listOptions'];
            } else {
              delete result['listOptions'];
            }
            if (json['queryOptions'] != null) {
              result['queryOptions'] = $root.wix.api.QueryMethodOptions.fromJSON(json['queryOptions'], helper);
            } else if (withDefaults !== false) {
              delete result['queryOptions'];
            } else {
              delete result['queryOptions'];
            }
            if (json['searchOptions'] != null) {
              result['searchOptions'] = $root.wix.api.SearchMethodOptions.fromJSON(json['searchOptions'], helper);
            } else if (withDefaults !== false) {
              delete result['searchOptions'];
            } else {
              delete result['searchOptions'];
            }
            if (json['bulkCreateOptions'] != null) {
              result['bulkCreateOptions'] = $root.wix.api.BulkCreateMethodOptions.fromJSON(json['bulkCreateOptions'], helper);
            } else if (withDefaults !== false) {
              delete result['bulkCreateOptions'];
            } else {
              delete result['bulkCreateOptions'];
            }
            if (json['bulkUpdateOptions'] != null) {
              result['bulkUpdateOptions'] = $root.wix.api.BulkUpdateMethodOptions.fromJSON(json['bulkUpdateOptions'], helper);
            } else if (withDefaults !== false) {
              delete result['bulkUpdateOptions'];
            } else {
              delete result['bulkUpdateOptions'];
            }
            if (json['bulkUpdateByFilterOptions'] != null) {
              result['bulkUpdateByFilterOptions'] = $root.wix.api.BulkUpdateByFilterMethodOptions.fromJSON(json['bulkUpdateByFilterOptions'], helper);
            } else if (withDefaults !== false) {
              delete result['bulkUpdateByFilterOptions'];
            } else {
              delete result['bulkUpdateByFilterOptions'];
            }
            if (json['bulkDeleteOptions'] != null) {
              result['bulkDeleteOptions'] = $root.wix.api.BulkDeleteMethodOptions.fromJSON(json['bulkDeleteOptions'], helper);
            } else if (withDefaults !== false) {
              delete result['bulkDeleteOptions'];
            } else {
              delete result['bulkDeleteOptions'];
            }
            if (json['bulkDeleteByFilterOptions'] != null) {
              result['bulkDeleteByFilterOptions'] = $root.wix.api.BulkDeleteByFilterMethodOptions.fromJSON(json['bulkDeleteByFilterOptions'], helper);
            } else if (withDefaults !== false) {
              delete result['bulkDeleteByFilterOptions'];
            } else {
              delete result['bulkDeleteByFilterOptions'];
            }
            if (json['upsertOptions'] != null) {
              result['upsertOptions'] = $root.wix.api.UpsertMethodOptions.fromJSON(json['upsertOptions'], helper);
            } else if (withDefaults !== false) {
              delete result['upsertOptions'];
            } else {
              delete result['upsertOptions'];
            }
            if (json['bulkUpsertOptions'] != null) {
              result['bulkUpsertOptions'] = $root.wix.api.BulkUpsertMethodOptions.fromJSON(json['bulkUpsertOptions'], helper);
            } else if (withDefaults !== false) {
              delete result['bulkUpsertOptions'];
            } else {
              delete result['bulkUpsertOptions'];
            }
            if (json['listDeletedOptions'] != null) {
              result['listDeletedOptions'] = $root.wix.api.ListDeletedMethodOptions.fromJSON(json['listDeletedOptions'], helper);
            } else if (withDefaults !== false) {
              delete result['listDeletedOptions'];
            } else {
              delete result['listDeletedOptions'];
            }
            if (json['getDeletedOptions'] != null) {
              result['getDeletedOptions'] = $root.wix.api.GetDeletedMethodOptions.fromJSON(json['getDeletedOptions'], helper);
            } else if (withDefaults !== false) {
              delete result['getDeletedOptions'];
            } else {
              delete result['getDeletedOptions'];
            }
            if (json['restoreFromTrashbinOptions'] != null) {
              result['restoreFromTrashbinOptions'] = $root.wix.api.RestoreFromTrashbinMethodOptions.fromJSON(json['restoreFromTrashbinOptions'], helper);
            } else if (withDefaults !== false) {
              delete result['restoreFromTrashbinOptions'];
            } else {
              delete result['restoreFromTrashbinOptions'];
            }
            if (json['removeFromTrashbinOptions'] != null) {
              result['removeFromTrashbinOptions'] = $root.wix.api.RemoveFromTrashbinMethodOptions.fromJSON(json['removeFromTrashbinOptions'], helper);
            } else if (withDefaults !== false) {
              delete result['removeFromTrashbinOptions'];
            } else {
              delete result['removeFromTrashbinOptions'];
            }
            return result;
          } else
            return json;
        }
        static toGRPC(obj, helper) {
          if (obj == null) {
            return null;
          } else {
            const grpc = {};
            if (obj['method'] != null) {
              grpc['method'] = obj['method'];
            }
            if (obj['createOptions'] != null) {
              grpc['createOptions'] = $root.wix.api.CreateMethodOptions.toGRPC(obj['createOptions'], helper);
            }
            if (obj['getOptions'] != null) {
              grpc['getOptions'] = $root.wix.api.GetItemMethodOptions.toGRPC(obj['getOptions'], helper);
            }
            if (obj['updateOptions'] != null) {
              grpc['updateOptions'] = $root.wix.api.UpdateMethodOptions.toGRPC(obj['updateOptions'], helper);
            }
            if (obj['deleteOptions'] != null) {
              grpc['deleteOptions'] = $root.wix.api.DeleteMethodOptions.toGRPC(obj['deleteOptions'], helper);
            }
            if (obj['listOptions'] != null) {
              grpc['listOptions'] = $root.wix.api.ListMethodOptions.toGRPC(obj['listOptions'], helper);
            }
            if (obj['queryOptions'] != null) {
              grpc['queryOptions'] = $root.wix.api.QueryMethodOptions.toGRPC(obj['queryOptions'], helper);
            }
            if (obj['searchOptions'] != null) {
              grpc['searchOptions'] = $root.wix.api.SearchMethodOptions.toGRPC(obj['searchOptions'], helper);
            }
            if (obj['bulkCreateOptions'] != null) {
              grpc['bulkCreateOptions'] = $root.wix.api.BulkCreateMethodOptions.toGRPC(obj['bulkCreateOptions'], helper);
            }
            if (obj['bulkUpdateOptions'] != null) {
              grpc['bulkUpdateOptions'] = $root.wix.api.BulkUpdateMethodOptions.toGRPC(obj['bulkUpdateOptions'], helper);
            }
            if (obj['bulkUpdateByFilterOptions'] != null) {
              grpc['bulkUpdateByFilterOptions'] = $root.wix.api.BulkUpdateByFilterMethodOptions.toGRPC(obj['bulkUpdateByFilterOptions'], helper);
            }
            if (obj['bulkDeleteOptions'] != null) {
              grpc['bulkDeleteOptions'] = $root.wix.api.BulkDeleteMethodOptions.toGRPC(obj['bulkDeleteOptions'], helper);
            }
            if (obj['bulkDeleteByFilterOptions'] != null) {
              grpc['bulkDeleteByFilterOptions'] = $root.wix.api.BulkDeleteByFilterMethodOptions.toGRPC(obj['bulkDeleteByFilterOptions'], helper);
            }
            if (obj['upsertOptions'] != null) {
              grpc['upsertOptions'] = $root.wix.api.UpsertMethodOptions.toGRPC(obj['upsertOptions'], helper);
            }
            if (obj['bulkUpsertOptions'] != null) {
              grpc['bulkUpsertOptions'] = $root.wix.api.BulkUpsertMethodOptions.toGRPC(obj['bulkUpsertOptions'], helper);
            }
            if (obj['listDeletedOptions'] != null) {
              grpc['listDeletedOptions'] = $root.wix.api.ListDeletedMethodOptions.toGRPC(obj['listDeletedOptions'], helper);
            }
            if (obj['getDeletedOptions'] != null) {
              grpc['getDeletedOptions'] = $root.wix.api.GetDeletedMethodOptions.toGRPC(obj['getDeletedOptions'], helper);
            }
            if (obj['restoreFromTrashbinOptions'] != null) {
              grpc['restoreFromTrashbinOptions'] = $root.wix.api.RestoreFromTrashbinMethodOptions.toGRPC(obj['restoreFromTrashbinOptions'], helper);
            }
            if (obj['removeFromTrashbinOptions'] != null) {
              grpc['removeFromTrashbinOptions'] = $root.wix.api.RemoveFromTrashbinMethodOptions.toGRPC(obj['removeFromTrashbinOptions'], helper);
            }
            return grpc;
          }
        }
        static fromGRPC(grpc, helper) {
          if (grpc == null) {
            return null;
          } else {
            const result = new $root.wix.api.Crud();
            if (grpc['method'] != null) {
              result['method'] = grpc['method'];
            } else {
              result['method'] = 0;
            }
            if (grpc['createOptions'] != null) {
              result['createOptions'] = $root.wix.api.CreateMethodOptions.fromGRPC(grpc['createOptions'], helper);
            } else {
              delete result['createOptions'];
            }
            if (grpc['getOptions'] != null) {
              result['getOptions'] = $root.wix.api.GetItemMethodOptions.fromGRPC(grpc['getOptions'], helper);
            } else {
              delete result['getOptions'];
            }
            if (grpc['updateOptions'] != null) {
              result['updateOptions'] = $root.wix.api.UpdateMethodOptions.fromGRPC(grpc['updateOptions'], helper);
            } else {
              delete result['updateOptions'];
            }
            if (grpc['deleteOptions'] != null) {
              result['deleteOptions'] = $root.wix.api.DeleteMethodOptions.fromGRPC(grpc['deleteOptions'], helper);
            } else {
              delete result['deleteOptions'];
            }
            if (grpc['listOptions'] != null) {
              result['listOptions'] = $root.wix.api.ListMethodOptions.fromGRPC(grpc['listOptions'], helper);
            } else {
              delete result['listOptions'];
            }
            if (grpc['queryOptions'] != null) {
              result['queryOptions'] = $root.wix.api.QueryMethodOptions.fromGRPC(grpc['queryOptions'], helper);
            } else {
              delete result['queryOptions'];
            }
            if (grpc['searchOptions'] != null) {
              result['searchOptions'] = $root.wix.api.SearchMethodOptions.fromGRPC(grpc['searchOptions'], helper);
            } else {
              delete result['searchOptions'];
            }
            if (grpc['bulkCreateOptions'] != null) {
              result['bulkCreateOptions'] = $root.wix.api.BulkCreateMethodOptions.fromGRPC(grpc['bulkCreateOptions'], helper);
            } else {
              delete result['bulkCreateOptions'];
            }
            if (grpc['bulkUpdateOptions'] != null) {
              result['bulkUpdateOptions'] = $root.wix.api.BulkUpdateMethodOptions.fromGRPC(grpc['bulkUpdateOptions'], helper);
            } else {
              delete result['bulkUpdateOptions'];
            }
            if (grpc['bulkUpdateByFilterOptions'] != null) {
              result['bulkUpdateByFilterOptions'] = $root.wix.api.BulkUpdateByFilterMethodOptions.fromGRPC(grpc['bulkUpdateByFilterOptions'], helper);
            } else {
              delete result['bulkUpdateByFilterOptions'];
            }
            if (grpc['bulkDeleteOptions'] != null) {
              result['bulkDeleteOptions'] = $root.wix.api.BulkDeleteMethodOptions.fromGRPC(grpc['bulkDeleteOptions'], helper);
            } else {
              delete result['bulkDeleteOptions'];
            }
            if (grpc['bulkDeleteByFilterOptions'] != null) {
              result['bulkDeleteByFilterOptions'] = $root.wix.api.BulkDeleteByFilterMethodOptions.fromGRPC(grpc['bulkDeleteByFilterOptions'], helper);
            } else {
              delete result['bulkDeleteByFilterOptions'];
            }
            if (grpc['upsertOptions'] != null) {
              result['upsertOptions'] = $root.wix.api.UpsertMethodOptions.fromGRPC(grpc['upsertOptions'], helper);
            } else {
              delete result['upsertOptions'];
            }
            if (grpc['bulkUpsertOptions'] != null) {
              result['bulkUpsertOptions'] = $root.wix.api.BulkUpsertMethodOptions.fromGRPC(grpc['bulkUpsertOptions'], helper);
            } else {
              delete result['bulkUpsertOptions'];
            }
            if (grpc['listDeletedOptions'] != null) {
              result['listDeletedOptions'] = $root.wix.api.ListDeletedMethodOptions.fromGRPC(grpc['listDeletedOptions'], helper);
            } else {
              delete result['listDeletedOptions'];
            }
            if (grpc['getDeletedOptions'] != null) {
              result['getDeletedOptions'] = $root.wix.api.GetDeletedMethodOptions.fromGRPC(grpc['getDeletedOptions'], helper);
            } else {
              delete result['getDeletedOptions'];
            }
            if (grpc['restoreFromTrashbinOptions'] != null) {
              result['restoreFromTrashbinOptions'] = $root.wix.api.RestoreFromTrashbinMethodOptions.fromGRPC(grpc['restoreFromTrashbinOptions'], helper);
            } else {
              delete result['restoreFromTrashbinOptions'];
            }
            if (grpc['removeFromTrashbinOptions'] != null) {
              result['removeFromTrashbinOptions'] = $root.wix.api.RemoveFromTrashbinMethodOptions.fromGRPC(grpc['removeFromTrashbinOptions'], helper);
            } else {
              delete result['removeFromTrashbinOptions'];
            }
            return result;
          }
        }
      }
      Crud.Method = {
        'UNKNOWN_METHOD': 0,
        0: 'UNKNOWN_METHOD',
        'CREATE': 1,
        1: 'CREATE',
        'GET_ITEM': 2,
        2: 'GET_ITEM',
        'UPDATE': 3,
        3: 'UPDATE',
        'DELETE': 4,
        4: 'DELETE',
        'UPSERT': 12,
        12: 'UPSERT',
        'LIST': 5,
        5: 'LIST',
        'QUERY': 6,
        6: 'QUERY',
        'SEARCH': 18,
        18: 'SEARCH',
        'BULK_CREATE': 7,
        7: 'BULK_CREATE',
        'BULK_UPDATE': 8,
        8: 'BULK_UPDATE',
        'BULK_UPDATE_BY_FILTER': 9,
        9: 'BULK_UPDATE_BY_FILTER',
        'BULK_DELETE': 10,
        10: 'BULK_DELETE',
        'BULK_DELETE_BY_FILTER': 11,
        11: 'BULK_DELETE_BY_FILTER',
        'BULK_UPSERT': 13,
        13: 'BULK_UPSERT',
        'LIST_DELETED': 14,
        14: 'LIST_DELETED',
        'GET_DELETED': 15,
        15: 'GET_DELETED',
        'RESTORE_FROM_TRASHBIN': 16,
        16: 'RESTORE_FROM_TRASHBIN',
        'REMOVE_FROM_TRASHBIN': 17,
        17: 'REMOVE_FROM_TRASHBIN'
      };
      Crud.Method = {
        'UNKNOWN_METHOD': 0,
        0: 'UNKNOWN_METHOD',
        'CREATE': 1,
        1: 'CREATE',
        'GET_ITEM': 2,
        2: 'GET_ITEM',
        'UPDATE': 3,
        3: 'UPDATE',
        'DELETE': 4,
        4: 'DELETE',
        'UPSERT': 12,
        12: 'UPSERT',
        'LIST': 5,
        5: 'LIST',
        'QUERY': 6,
        6: 'QUERY',
        'SEARCH': 18,
        18: 'SEARCH',
        'BULK_CREATE': 7,
        7: 'BULK_CREATE',
        'BULK_UPDATE': 8,
        8: 'BULK_UPDATE',
        'BULK_UPDATE_BY_FILTER': 9,
        9: 'BULK_UPDATE_BY_FILTER',
        'BULK_DELETE': 10,
        10: 'BULK_DELETE',
        'BULK_DELETE_BY_FILTER': 11,
        11: 'BULK_DELETE_BY_FILTER',
        'BULK_UPSERT': 13,
        13: 'BULK_UPSERT',
        'LIST_DELETED': 14,
        14: 'LIST_DELETED',
        'GET_DELETED': 15,
        15: 'GET_DELETED',
        'RESTORE_FROM_TRASHBIN': 16,
        16: 'RESTORE_FROM_TRASHBIN',
        'REMOVE_FROM_TRASHBIN': 17,
        17: 'REMOVE_FROM_TRASHBIN'
      };
      __builtIn.Object.defineProperty(Crud.prototype, '__proto', {
        value: pbjs => {
          return $root.__lookup(pbjs)('wix.api.Crud');
        },
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(Crud.prototype, '__fqn__', {
        value: 'wix.api.Crud',
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(Crud.prototype, '__options__', {
        value: $root.__options,
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(Crud.prototype, '__root__', {
        value: $root,
        enumerable: false,
        configurable: false
      });
      return Crud;
    }());;
    _api.Paging = (function () {
      class Paging {
        constructor(props) {
          this.type = props && props.type;
          this.pagingMetadataField = props && props.pagingMetadataField;
        }
        static toJSON(obj, helper, withDefaults) {
          if (obj == null) {
            return null;
          } else {
            const json = {};
            if (obj['type'] != null) {
              json['type'] = $root.wix.api.Paging.Type[obj['type']];
            } else if (withDefaults) {
              json['type'] = 0;
            }
            if (obj['pagingMetadataField'] != null) {
              json['pagingMetadataField'] = obj['pagingMetadataField'];
            } else if (withDefaults) {
              json['pagingMetadataField'] = '';
            }
            return json;
          }
        }
        static fromJSON(json, helper, withDefaults) {
          if (typeof json === 'object' && !Array.isArray(json)) {
            const result = new $root.wix.api.Paging();
            if (json['type'] != null) {
              result['type'] = typeof json['type'] === 'string' ? $root.wix.api.Paging.Type[json['type']] : json['type'];
            } else if (withDefaults !== false) {
              result['type'] = 0;
            } else {
              delete result['type'];
            }
            if (json['pagingMetadataField'] != null) {
              result['pagingMetadataField'] = json['pagingMetadataField'];
            } else if (withDefaults !== false) {
              result['pagingMetadataField'] = '';
            } else {
              delete result['pagingMetadataField'];
            }
            return result;
          } else
            return json;
        }
        static toGRPC(obj, helper) {
          if (obj == null) {
            return null;
          } else {
            const grpc = {};
            if (obj['type'] != null) {
              grpc['type'] = obj['type'];
            }
            if (obj['pagingMetadataField'] != null) {
              grpc['pagingMetadataField'] = obj['pagingMetadataField'];
            }
            return grpc;
          }
        }
        static fromGRPC(grpc, helper) {
          if (grpc == null) {
            return null;
          } else {
            const result = new $root.wix.api.Paging();
            if (grpc['type'] != null) {
              result['type'] = grpc['type'];
            } else {
              result['type'] = 0;
            }
            if (grpc['pagingMetadataField'] != null) {
              result['pagingMetadataField'] = grpc['pagingMetadataField'];
            } else {
              result['pagingMetadataField'] = '';
            }
            return result;
          }
        }
      }
      Paging.Type = {
        'UNKNOWN_TYPE': 0,
        0: 'UNKNOWN_TYPE',
        'OFFSET': 1,
        1: 'OFFSET',
        'CURSOR': 2,
        2: 'CURSOR'
      };
      Paging.Type = {
        'UNKNOWN_TYPE': 0,
        0: 'UNKNOWN_TYPE',
        'OFFSET': 1,
        1: 'OFFSET',
        'CURSOR': 2,
        2: 'CURSOR'
      };
      __builtIn.Object.defineProperty(Paging.prototype, '__proto', {
        value: pbjs => {
          return $root.__lookup(pbjs)('wix.api.Paging');
        },
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(Paging.prototype, '__fqn__', {
        value: 'wix.api.Paging',
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(Paging.prototype, '__options__', {
        value: $root.__options,
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(Paging.prototype, '__root__', {
        value: $root,
        enumerable: false,
        configurable: false
      });
      return Paging;
    }());;
    _api.CreateMethodOptions = (function () {
      class CreateMethodOptions {
        constructor(props) {
          this.itemField = props && props.itemField;
          this.fieldmaskField = props && props.fieldmaskField;
        }
        static toJSON(obj, helper, withDefaults) {
          if (obj == null) {
            return null;
          } else {
            const json = {};
            if (obj['itemField'] != null) {
              json['itemField'] = obj['itemField'];
            } else if (withDefaults) {
              json['itemField'] = '';
            }
            if (obj['fieldmaskField'] != null) {
              json['fieldmaskField'] = obj['fieldmaskField'];
            } else if (withDefaults) {
              json['fieldmaskField'] = '';
            }
            return json;
          }
        }
        static fromJSON(json, helper, withDefaults) {
          if (typeof json === 'object' && !Array.isArray(json)) {
            const result = new $root.wix.api.CreateMethodOptions();
            if (json['itemField'] != null) {
              result['itemField'] = json['itemField'];
            } else if (withDefaults !== false) {
              result['itemField'] = '';
            } else {
              delete result['itemField'];
            }
            if (json['fieldmaskField'] != null) {
              result['fieldmaskField'] = json['fieldmaskField'];
            } else if (withDefaults !== false) {
              result['fieldmaskField'] = '';
            } else {
              delete result['fieldmaskField'];
            }
            return result;
          } else
            return json;
        }
        static toGRPC(obj, helper) {
          if (obj == null) {
            return null;
          } else {
            const grpc = {};
            if (obj['itemField'] != null) {
              grpc['itemField'] = obj['itemField'];
            }
            if (obj['fieldmaskField'] != null) {
              grpc['fieldmaskField'] = obj['fieldmaskField'];
            }
            return grpc;
          }
        }
        static fromGRPC(grpc, helper) {
          if (grpc == null) {
            return null;
          } else {
            const result = new $root.wix.api.CreateMethodOptions();
            if (grpc['itemField'] != null) {
              result['itemField'] = grpc['itemField'];
            } else {
              result['itemField'] = '';
            }
            if (grpc['fieldmaskField'] != null) {
              result['fieldmaskField'] = grpc['fieldmaskField'];
            } else {
              result['fieldmaskField'] = '';
            }
            return result;
          }
        }
      }
      __builtIn.Object.defineProperty(CreateMethodOptions.prototype, '__proto', {
        value: pbjs => {
          return $root.__lookup(pbjs)('wix.api.CreateMethodOptions');
        },
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(CreateMethodOptions.prototype, '__fqn__', {
        value: 'wix.api.CreateMethodOptions',
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(CreateMethodOptions.prototype, '__options__', {
        value: $root.__options,
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(CreateMethodOptions.prototype, '__root__', {
        value: $root,
        enumerable: false,
        configurable: false
      });
      return CreateMethodOptions;
    }());;
    _api.GetItemMethodOptions = (function () {
      class GetItemMethodOptions {
        constructor(props) {
          this.itemField = props && props.itemField;
          this.idField = props && props.idField;
        }
        static toJSON(obj, helper, withDefaults) {
          if (obj == null) {
            return null;
          } else {
            const json = {};
            if (obj['itemField'] != null) {
              json['itemField'] = obj['itemField'];
            } else if (withDefaults) {
              json['itemField'] = '';
            }
            if (obj['idField'] != null) {
              json['idField'] = obj['idField'];
            } else if (withDefaults) {
              json['idField'] = '';
            }
            return json;
          }
        }
        static fromJSON(json, helper, withDefaults) {
          if (typeof json === 'object' && !Array.isArray(json)) {
            const result = new $root.wix.api.GetItemMethodOptions();
            if (json['itemField'] != null) {
              result['itemField'] = json['itemField'];
            } else if (withDefaults !== false) {
              result['itemField'] = '';
            } else {
              delete result['itemField'];
            }
            if (json['idField'] != null) {
              result['idField'] = json['idField'];
            } else if (withDefaults !== false) {
              result['idField'] = '';
            } else {
              delete result['idField'];
            }
            return result;
          } else
            return json;
        }
        static toGRPC(obj, helper) {
          if (obj == null) {
            return null;
          } else {
            const grpc = {};
            if (obj['itemField'] != null) {
              grpc['itemField'] = obj['itemField'];
            }
            if (obj['idField'] != null) {
              grpc['idField'] = obj['idField'];
            }
            return grpc;
          }
        }
        static fromGRPC(grpc, helper) {
          if (grpc == null) {
            return null;
          } else {
            const result = new $root.wix.api.GetItemMethodOptions();
            if (grpc['itemField'] != null) {
              result['itemField'] = grpc['itemField'];
            } else {
              result['itemField'] = '';
            }
            if (grpc['idField'] != null) {
              result['idField'] = grpc['idField'];
            } else {
              result['idField'] = '';
            }
            return result;
          }
        }
      }
      __builtIn.Object.defineProperty(GetItemMethodOptions.prototype, '__proto', {
        value: pbjs => {
          return $root.__lookup(pbjs)('wix.api.GetItemMethodOptions');
        },
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(GetItemMethodOptions.prototype, '__fqn__', {
        value: 'wix.api.GetItemMethodOptions',
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(GetItemMethodOptions.prototype, '__options__', {
        value: $root.__options,
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(GetItemMethodOptions.prototype, '__root__', {
        value: $root,
        enumerable: false,
        configurable: false
      });
      return GetItemMethodOptions;
    }());;
    _api.UpdateMethodOptions = (function () {
      class UpdateMethodOptions {
        constructor(props) {
          this.itemField = props && props.itemField;
          this.fieldmaskField = props && props.fieldmaskField;
        }
        static toJSON(obj, helper, withDefaults) {
          if (obj == null) {
            return null;
          } else {
            const json = {};
            if (obj['itemField'] != null) {
              json['itemField'] = obj['itemField'];
            } else if (withDefaults) {
              json['itemField'] = '';
            }
            if (obj['fieldmaskField'] != null) {
              json['fieldmaskField'] = obj['fieldmaskField'];
            } else if (withDefaults) {
              json['fieldmaskField'] = '';
            }
            return json;
          }
        }
        static fromJSON(json, helper, withDefaults) {
          if (typeof json === 'object' && !Array.isArray(json)) {
            const result = new $root.wix.api.UpdateMethodOptions();
            if (json['itemField'] != null) {
              result['itemField'] = json['itemField'];
            } else if (withDefaults !== false) {
              result['itemField'] = '';
            } else {
              delete result['itemField'];
            }
            if (json['fieldmaskField'] != null) {
              result['fieldmaskField'] = json['fieldmaskField'];
            } else if (withDefaults !== false) {
              result['fieldmaskField'] = '';
            } else {
              delete result['fieldmaskField'];
            }
            return result;
          } else
            return json;
        }
        static toGRPC(obj, helper) {
          if (obj == null) {
            return null;
          } else {
            const grpc = {};
            if (obj['itemField'] != null) {
              grpc['itemField'] = obj['itemField'];
            }
            if (obj['fieldmaskField'] != null) {
              grpc['fieldmaskField'] = obj['fieldmaskField'];
            }
            return grpc;
          }
        }
        static fromGRPC(grpc, helper) {
          if (grpc == null) {
            return null;
          } else {
            const result = new $root.wix.api.UpdateMethodOptions();
            if (grpc['itemField'] != null) {
              result['itemField'] = grpc['itemField'];
            } else {
              result['itemField'] = '';
            }
            if (grpc['fieldmaskField'] != null) {
              result['fieldmaskField'] = grpc['fieldmaskField'];
            } else {
              result['fieldmaskField'] = '';
            }
            return result;
          }
        }
      }
      __builtIn.Object.defineProperty(UpdateMethodOptions.prototype, '__proto', {
        value: pbjs => {
          return $root.__lookup(pbjs)('wix.api.UpdateMethodOptions');
        },
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(UpdateMethodOptions.prototype, '__fqn__', {
        value: 'wix.api.UpdateMethodOptions',
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(UpdateMethodOptions.prototype, '__options__', {
        value: $root.__options,
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(UpdateMethodOptions.prototype, '__root__', {
        value: $root,
        enumerable: false,
        configurable: false
      });
      return UpdateMethodOptions;
    }());;
    _api.UpsertMethodOptions = (function () {
      class UpsertMethodOptions {
        constructor(props) {
          this.itemField = props && props.itemField;
          this.fieldmaskField = props && props.fieldmaskField;
        }
        static toJSON(obj, helper, withDefaults) {
          if (obj == null) {
            return null;
          } else {
            const json = {};
            if (obj['itemField'] != null) {
              json['itemField'] = obj['itemField'];
            } else if (withDefaults) {
              json['itemField'] = '';
            }
            if (obj['fieldmaskField'] != null) {
              json['fieldmaskField'] = obj['fieldmaskField'];
            } else if (withDefaults) {
              json['fieldmaskField'] = '';
            }
            return json;
          }
        }
        static fromJSON(json, helper, withDefaults) {
          if (typeof json === 'object' && !Array.isArray(json)) {
            const result = new $root.wix.api.UpsertMethodOptions();
            if (json['itemField'] != null) {
              result['itemField'] = json['itemField'];
            } else if (withDefaults !== false) {
              result['itemField'] = '';
            } else {
              delete result['itemField'];
            }
            if (json['fieldmaskField'] != null) {
              result['fieldmaskField'] = json['fieldmaskField'];
            } else if (withDefaults !== false) {
              result['fieldmaskField'] = '';
            } else {
              delete result['fieldmaskField'];
            }
            return result;
          } else
            return json;
        }
        static toGRPC(obj, helper) {
          if (obj == null) {
            return null;
          } else {
            const grpc = {};
            if (obj['itemField'] != null) {
              grpc['itemField'] = obj['itemField'];
            }
            if (obj['fieldmaskField'] != null) {
              grpc['fieldmaskField'] = obj['fieldmaskField'];
            }
            return grpc;
          }
        }
        static fromGRPC(grpc, helper) {
          if (grpc == null) {
            return null;
          } else {
            const result = new $root.wix.api.UpsertMethodOptions();
            if (grpc['itemField'] != null) {
              result['itemField'] = grpc['itemField'];
            } else {
              result['itemField'] = '';
            }
            if (grpc['fieldmaskField'] != null) {
              result['fieldmaskField'] = grpc['fieldmaskField'];
            } else {
              result['fieldmaskField'] = '';
            }
            return result;
          }
        }
      }
      __builtIn.Object.defineProperty(UpsertMethodOptions.prototype, '__proto', {
        value: pbjs => {
          return $root.__lookup(pbjs)('wix.api.UpsertMethodOptions');
        },
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(UpsertMethodOptions.prototype, '__fqn__', {
        value: 'wix.api.UpsertMethodOptions',
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(UpsertMethodOptions.prototype, '__options__', {
        value: $root.__options,
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(UpsertMethodOptions.prototype, '__root__', {
        value: $root,
        enumerable: false,
        configurable: false
      });
      return UpsertMethodOptions;
    }());;
    _api.DeleteMethodOptions = (function () {
      class DeleteMethodOptions {
        constructor(props) {
          this.idField = props && props.idField;
        }
        static toJSON(obj, helper, withDefaults) {
          if (obj == null) {
            return null;
          } else {
            const json = {};
            if (obj['idField'] != null) {
              json['idField'] = obj['idField'];
            } else if (withDefaults) {
              json['idField'] = '';
            }
            return json;
          }
        }
        static fromJSON(json, helper, withDefaults) {
          if (typeof json === 'object' && !Array.isArray(json)) {
            const result = new $root.wix.api.DeleteMethodOptions();
            if (json['idField'] != null) {
              result['idField'] = json['idField'];
            } else if (withDefaults !== false) {
              result['idField'] = '';
            } else {
              delete result['idField'];
            }
            return result;
          } else
            return json;
        }
        static toGRPC(obj, helper) {
          if (obj == null) {
            return null;
          } else {
            const grpc = {};
            if (obj['idField'] != null) {
              grpc['idField'] = obj['idField'];
            }
            return grpc;
          }
        }
        static fromGRPC(grpc, helper) {
          if (grpc == null) {
            return null;
          } else {
            const result = new $root.wix.api.DeleteMethodOptions();
            if (grpc['idField'] != null) {
              result['idField'] = grpc['idField'];
            } else {
              result['idField'] = '';
            }
            return result;
          }
        }
      }
      __builtIn.Object.defineProperty(DeleteMethodOptions.prototype, '__proto', {
        value: pbjs => {
          return $root.__lookup(pbjs)('wix.api.DeleteMethodOptions');
        },
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(DeleteMethodOptions.prototype, '__fqn__', {
        value: 'wix.api.DeleteMethodOptions',
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(DeleteMethodOptions.prototype, '__options__', {
        value: $root.__options,
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(DeleteMethodOptions.prototype, '__root__', {
        value: $root,
        enumerable: false,
        configurable: false
      });
      return DeleteMethodOptions;
    }());;
    _api.ListMethodOptions = (function () {
      class ListMethodOptions {
        constructor(props) {
          this.idsField = props && props.idsField;
          this.itemsField = props && props.itemsField;
          this.paging = props && props.paging;
        }
        static toJSON(obj, helper, withDefaults) {
          if (obj == null) {
            return null;
          } else {
            const json = {};
            if (obj['idsField'] != null) {
              json['idsField'] = obj['idsField'];
            } else if (withDefaults) {
              json['idsField'] = '';
            }
            if (obj['itemsField'] != null) {
              json['itemsField'] = obj['itemsField'];
            } else if (withDefaults) {
              json['itemsField'] = '';
            }
            if (obj['paging'] != null) {
              json['paging'] = $root.wix.api.Paging.toJSON(obj['paging'], helper, withDefaults);
            } else if (withDefaults) {
              delete json['paging'];
            }
            return json;
          }
        }
        static fromJSON(json, helper, withDefaults) {
          if (typeof json === 'object' && !Array.isArray(json)) {
            const result = new $root.wix.api.ListMethodOptions();
            if (json['idsField'] != null) {
              result['idsField'] = json['idsField'];
            } else if (withDefaults !== false) {
              result['idsField'] = '';
            } else {
              delete result['idsField'];
            }
            if (json['itemsField'] != null) {
              result['itemsField'] = json['itemsField'];
            } else if (withDefaults !== false) {
              result['itemsField'] = '';
            } else {
              delete result['itemsField'];
            }
            if (json['paging'] != null) {
              result['paging'] = $root.wix.api.Paging.fromJSON(json['paging'], helper);
            } else if (withDefaults !== false) {
              delete result['paging'];
            } else {
              delete result['paging'];
            }
            return result;
          } else
            return json;
        }
        static toGRPC(obj, helper) {
          if (obj == null) {
            return null;
          } else {
            const grpc = {};
            if (obj['idsField'] != null) {
              grpc['idsField'] = obj['idsField'];
            }
            if (obj['itemsField'] != null) {
              grpc['itemsField'] = obj['itemsField'];
            }
            if (obj['paging'] != null) {
              grpc['paging'] = $root.wix.api.Paging.toGRPC(obj['paging'], helper);
            }
            return grpc;
          }
        }
        static fromGRPC(grpc, helper) {
          if (grpc == null) {
            return null;
          } else {
            const result = new $root.wix.api.ListMethodOptions();
            if (grpc['idsField'] != null) {
              result['idsField'] = grpc['idsField'];
            } else {
              result['idsField'] = '';
            }
            if (grpc['itemsField'] != null) {
              result['itemsField'] = grpc['itemsField'];
            } else {
              result['itemsField'] = '';
            }
            if (grpc['paging'] != null) {
              result['paging'] = $root.wix.api.Paging.fromGRPC(grpc['paging'], helper);
            } else {
              delete result['paging'];
            }
            return result;
          }
        }
      }
      __builtIn.Object.defineProperty(ListMethodOptions.prototype, '__proto', {
        value: pbjs => {
          return $root.__lookup(pbjs)('wix.api.ListMethodOptions');
        },
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(ListMethodOptions.prototype, '__fqn__', {
        value: 'wix.api.ListMethodOptions',
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(ListMethodOptions.prototype, '__options__', {
        value: $root.__options,
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(ListMethodOptions.prototype, '__root__', {
        value: $root,
        enumerable: false,
        configurable: false
      });
      return ListMethodOptions;
    }());;
    _api.QueryMethodOptions = (function () {
      class QueryMethodOptions {
        constructor(props) {
          this.queryField = props && props.queryField;
          this.itemsField = props && props.itemsField;
          this.paging = props && props.paging;
          this.wql = props && props.wql;
        }
        static toJSON(obj, helper, withDefaults) {
          if (obj == null) {
            return null;
          } else {
            const json = {};
            if (obj['queryField'] != null) {
              json['queryField'] = obj['queryField'];
            } else if (withDefaults) {
              json['queryField'] = '';
            }
            if (obj['itemsField'] != null) {
              json['itemsField'] = obj['itemsField'];
            } else if (withDefaults) {
              json['itemsField'] = '';
            }
            if (obj['paging'] != null) {
              json['paging'] = $root.wix.api.Paging.toJSON(obj['paging'], helper, withDefaults);
            } else if (withDefaults) {
              delete json['paging'];
            }
            if (obj['wql'] != null) {
              json['wql'] = $root.wix.api.Wql.toJSON(obj['wql'], helper, withDefaults);
            } else if (withDefaults) {
              delete json['wql'];
            }
            return json;
          }
        }
        static fromJSON(json, helper, withDefaults) {
          if (typeof json === 'object' && !Array.isArray(json)) {
            const result = new $root.wix.api.QueryMethodOptions();
            if (json['queryField'] != null) {
              result['queryField'] = json['queryField'];
            } else if (withDefaults !== false) {
              result['queryField'] = '';
            } else {
              delete result['queryField'];
            }
            if (json['itemsField'] != null) {
              result['itemsField'] = json['itemsField'];
            } else if (withDefaults !== false) {
              result['itemsField'] = '';
            } else {
              delete result['itemsField'];
            }
            if (json['paging'] != null) {
              result['paging'] = $root.wix.api.Paging.fromJSON(json['paging'], helper);
            } else if (withDefaults !== false) {
              delete result['paging'];
            } else {
              delete result['paging'];
            }
            if (json['wql'] != null) {
              result['wql'] = $root.wix.api.Wql.fromJSON(json['wql'], helper);
            } else if (withDefaults !== false) {
              delete result['wql'];
            } else {
              delete result['wql'];
            }
            return result;
          } else
            return json;
        }
        static toGRPC(obj, helper) {
          if (obj == null) {
            return null;
          } else {
            const grpc = {};
            if (obj['queryField'] != null) {
              grpc['queryField'] = obj['queryField'];
            }
            if (obj['itemsField'] != null) {
              grpc['itemsField'] = obj['itemsField'];
            }
            if (obj['paging'] != null) {
              grpc['paging'] = $root.wix.api.Paging.toGRPC(obj['paging'], helper);
            }
            if (obj['wql'] != null) {
              grpc['wql'] = $root.wix.api.Wql.toGRPC(obj['wql'], helper);
            }
            return grpc;
          }
        }
        static fromGRPC(grpc, helper) {
          if (grpc == null) {
            return null;
          } else {
            const result = new $root.wix.api.QueryMethodOptions();
            if (grpc['queryField'] != null) {
              result['queryField'] = grpc['queryField'];
            } else {
              result['queryField'] = '';
            }
            if (grpc['itemsField'] != null) {
              result['itemsField'] = grpc['itemsField'];
            } else {
              result['itemsField'] = '';
            }
            if (grpc['paging'] != null) {
              result['paging'] = $root.wix.api.Paging.fromGRPC(grpc['paging'], helper);
            } else {
              delete result['paging'];
            }
            if (grpc['wql'] != null) {
              result['wql'] = $root.wix.api.Wql.fromGRPC(grpc['wql'], helper);
            } else {
              delete result['wql'];
            }
            return result;
          }
        }
      }
      __builtIn.Object.defineProperty(QueryMethodOptions.prototype, '__proto', {
        value: pbjs => {
          return $root.__lookup(pbjs)('wix.api.QueryMethodOptions');
        },
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(QueryMethodOptions.prototype, '__fqn__', {
        value: 'wix.api.QueryMethodOptions',
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(QueryMethodOptions.prototype, '__options__', {
        value: $root.__options,
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(QueryMethodOptions.prototype, '__root__', {
        value: $root,
        enumerable: false,
        configurable: false
      });
      return QueryMethodOptions;
    }());;
    _api.SearchMethodOptions = (function () {
      class SearchMethodOptions {
        constructor(props) {
          this.searchField = props && props.searchField;
          this.itemsField = props && props.itemsField;
          this.paging = props && props.paging;
          this.wql = props && props.wql;
        }
        static toJSON(obj, helper, withDefaults) {
          if (obj == null) {
            return null;
          } else {
            const json = {};
            if (obj['searchField'] != null) {
              json['searchField'] = obj['searchField'];
            } else if (withDefaults) {
              json['searchField'] = '';
            }
            if (obj['itemsField'] != null) {
              json['itemsField'] = obj['itemsField'];
            } else if (withDefaults) {
              json['itemsField'] = '';
            }
            if (obj['paging'] != null) {
              json['paging'] = $root.wix.api.Paging.toJSON(obj['paging'], helper, withDefaults);
            } else if (withDefaults) {
              delete json['paging'];
            }
            if (obj['wql'] != null) {
              json['wql'] = $root.wix.api.Wql.toJSON(obj['wql'], helper, withDefaults);
            } else if (withDefaults) {
              delete json['wql'];
            }
            return json;
          }
        }
        static fromJSON(json, helper, withDefaults) {
          if (typeof json === 'object' && !Array.isArray(json)) {
            const result = new $root.wix.api.SearchMethodOptions();
            if (json['searchField'] != null) {
              result['searchField'] = json['searchField'];
            } else if (withDefaults !== false) {
              result['searchField'] = '';
            } else {
              delete result['searchField'];
            }
            if (json['itemsField'] != null) {
              result['itemsField'] = json['itemsField'];
            } else if (withDefaults !== false) {
              result['itemsField'] = '';
            } else {
              delete result['itemsField'];
            }
            if (json['paging'] != null) {
              result['paging'] = $root.wix.api.Paging.fromJSON(json['paging'], helper);
            } else if (withDefaults !== false) {
              delete result['paging'];
            } else {
              delete result['paging'];
            }
            if (json['wql'] != null) {
              result['wql'] = $root.wix.api.Wql.fromJSON(json['wql'], helper);
            } else if (withDefaults !== false) {
              delete result['wql'];
            } else {
              delete result['wql'];
            }
            return result;
          } else
            return json;
        }
        static toGRPC(obj, helper) {
          if (obj == null) {
            return null;
          } else {
            const grpc = {};
            if (obj['searchField'] != null) {
              grpc['searchField'] = obj['searchField'];
            }
            if (obj['itemsField'] != null) {
              grpc['itemsField'] = obj['itemsField'];
            }
            if (obj['paging'] != null) {
              grpc['paging'] = $root.wix.api.Paging.toGRPC(obj['paging'], helper);
            }
            if (obj['wql'] != null) {
              grpc['wql'] = $root.wix.api.Wql.toGRPC(obj['wql'], helper);
            }
            return grpc;
          }
        }
        static fromGRPC(grpc, helper) {
          if (grpc == null) {
            return null;
          } else {
            const result = new $root.wix.api.SearchMethodOptions();
            if (grpc['searchField'] != null) {
              result['searchField'] = grpc['searchField'];
            } else {
              result['searchField'] = '';
            }
            if (grpc['itemsField'] != null) {
              result['itemsField'] = grpc['itemsField'];
            } else {
              result['itemsField'] = '';
            }
            if (grpc['paging'] != null) {
              result['paging'] = $root.wix.api.Paging.fromGRPC(grpc['paging'], helper);
            } else {
              delete result['paging'];
            }
            if (grpc['wql'] != null) {
              result['wql'] = $root.wix.api.Wql.fromGRPC(grpc['wql'], helper);
            } else {
              delete result['wql'];
            }
            return result;
          }
        }
      }
      __builtIn.Object.defineProperty(SearchMethodOptions.prototype, '__proto', {
        value: pbjs => {
          return $root.__lookup(pbjs)('wix.api.SearchMethodOptions');
        },
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(SearchMethodOptions.prototype, '__fqn__', {
        value: 'wix.api.SearchMethodOptions',
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(SearchMethodOptions.prototype, '__options__', {
        value: $root.__options,
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(SearchMethodOptions.prototype, '__root__', {
        value: $root,
        enumerable: false,
        configurable: false
      });
      return SearchMethodOptions;
    }());;
    _api.BulkCreateMethodOptions = (function () {
      class BulkCreateMethodOptions {
        constructor(props) {
          this.itemField = props && props.itemField;
          this.fieldmaskField = props && props.fieldmaskField;
        }
        static toJSON(obj, helper, withDefaults) {
          if (obj == null) {
            return null;
          } else {
            const json = {};
            if (obj['itemField'] != null) {
              json['itemField'] = obj['itemField'];
            } else if (withDefaults) {
              json['itemField'] = '';
            }
            if (obj['fieldmaskField'] != null) {
              json['fieldmaskField'] = obj['fieldmaskField'];
            } else if (withDefaults) {
              json['fieldmaskField'] = '';
            }
            return json;
          }
        }
        static fromJSON(json, helper, withDefaults) {
          if (typeof json === 'object' && !Array.isArray(json)) {
            const result = new $root.wix.api.BulkCreateMethodOptions();
            if (json['itemField'] != null) {
              result['itemField'] = json['itemField'];
            } else if (withDefaults !== false) {
              result['itemField'] = '';
            } else {
              delete result['itemField'];
            }
            if (json['fieldmaskField'] != null) {
              result['fieldmaskField'] = json['fieldmaskField'];
            } else if (withDefaults !== false) {
              result['fieldmaskField'] = '';
            } else {
              delete result['fieldmaskField'];
            }
            return result;
          } else
            return json;
        }
        static toGRPC(obj, helper) {
          if (obj == null) {
            return null;
          } else {
            const grpc = {};
            if (obj['itemField'] != null) {
              grpc['itemField'] = obj['itemField'];
            }
            if (obj['fieldmaskField'] != null) {
              grpc['fieldmaskField'] = obj['fieldmaskField'];
            }
            return grpc;
          }
        }
        static fromGRPC(grpc, helper) {
          if (grpc == null) {
            return null;
          } else {
            const result = new $root.wix.api.BulkCreateMethodOptions();
            if (grpc['itemField'] != null) {
              result['itemField'] = grpc['itemField'];
            } else {
              result['itemField'] = '';
            }
            if (grpc['fieldmaskField'] != null) {
              result['fieldmaskField'] = grpc['fieldmaskField'];
            } else {
              result['fieldmaskField'] = '';
            }
            return result;
          }
        }
      }
      __builtIn.Object.defineProperty(BulkCreateMethodOptions.prototype, '__proto', {
        value: pbjs => {
          return $root.__lookup(pbjs)('wix.api.BulkCreateMethodOptions');
        },
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(BulkCreateMethodOptions.prototype, '__fqn__', {
        value: 'wix.api.BulkCreateMethodOptions',
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(BulkCreateMethodOptions.prototype, '__options__', {
        value: $root.__options,
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(BulkCreateMethodOptions.prototype, '__root__', {
        value: $root,
        enumerable: false,
        configurable: false
      });
      return BulkCreateMethodOptions;
    }());;
    _api.BulkUpdateMethodOptions = (function () {
      class BulkUpdateMethodOptions {
        constructor(props) {
          this.itemField = props && props.itemField;
          this.fieldmaskField = props && props.fieldmaskField;
        }
        static toJSON(obj, helper, withDefaults) {
          if (obj == null) {
            return null;
          } else {
            const json = {};
            if (obj['itemField'] != null) {
              json['itemField'] = obj['itemField'];
            } else if (withDefaults) {
              json['itemField'] = '';
            }
            if (obj['fieldmaskField'] != null) {
              json['fieldmaskField'] = obj['fieldmaskField'];
            } else if (withDefaults) {
              json['fieldmaskField'] = '';
            }
            return json;
          }
        }
        static fromJSON(json, helper, withDefaults) {
          if (typeof json === 'object' && !Array.isArray(json)) {
            const result = new $root.wix.api.BulkUpdateMethodOptions();
            if (json['itemField'] != null) {
              result['itemField'] = json['itemField'];
            } else if (withDefaults !== false) {
              result['itemField'] = '';
            } else {
              delete result['itemField'];
            }
            if (json['fieldmaskField'] != null) {
              result['fieldmaskField'] = json['fieldmaskField'];
            } else if (withDefaults !== false) {
              result['fieldmaskField'] = '';
            } else {
              delete result['fieldmaskField'];
            }
            return result;
          } else
            return json;
        }
        static toGRPC(obj, helper) {
          if (obj == null) {
            return null;
          } else {
            const grpc = {};
            if (obj['itemField'] != null) {
              grpc['itemField'] = obj['itemField'];
            }
            if (obj['fieldmaskField'] != null) {
              grpc['fieldmaskField'] = obj['fieldmaskField'];
            }
            return grpc;
          }
        }
        static fromGRPC(grpc, helper) {
          if (grpc == null) {
            return null;
          } else {
            const result = new $root.wix.api.BulkUpdateMethodOptions();
            if (grpc['itemField'] != null) {
              result['itemField'] = grpc['itemField'];
            } else {
              result['itemField'] = '';
            }
            if (grpc['fieldmaskField'] != null) {
              result['fieldmaskField'] = grpc['fieldmaskField'];
            } else {
              result['fieldmaskField'] = '';
            }
            return result;
          }
        }
      }
      __builtIn.Object.defineProperty(BulkUpdateMethodOptions.prototype, '__proto', {
        value: pbjs => {
          return $root.__lookup(pbjs)('wix.api.BulkUpdateMethodOptions');
        },
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(BulkUpdateMethodOptions.prototype, '__fqn__', {
        value: 'wix.api.BulkUpdateMethodOptions',
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(BulkUpdateMethodOptions.prototype, '__options__', {
        value: $root.__options,
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(BulkUpdateMethodOptions.prototype, '__root__', {
        value: $root,
        enumerable: false,
        configurable: false
      });
      return BulkUpdateMethodOptions;
    }());;
    _api.BulkUpdateByFilterMethodOptions = (function () {
      class BulkUpdateByFilterMethodOptions {
        constructor(props) {
          this.itemField = props && props.itemField;
          this.fieldmaskField = props && props.fieldmaskField;
          this.filterField = props && props.filterField;
        }
        static toJSON(obj, helper, withDefaults) {
          if (obj == null) {
            return null;
          } else {
            const json = {};
            if (obj['itemField'] != null) {
              json['itemField'] = obj['itemField'];
            } else if (withDefaults) {
              json['itemField'] = '';
            }
            if (obj['fieldmaskField'] != null) {
              json['fieldmaskField'] = obj['fieldmaskField'];
            } else if (withDefaults) {
              json['fieldmaskField'] = '';
            }
            if (obj['filterField'] != null) {
              json['filterField'] = obj['filterField'];
            } else if (withDefaults) {
              json['filterField'] = '';
            }
            return json;
          }
        }
        static fromJSON(json, helper, withDefaults) {
          if (typeof json === 'object' && !Array.isArray(json)) {
            const result = new $root.wix.api.BulkUpdateByFilterMethodOptions();
            if (json['itemField'] != null) {
              result['itemField'] = json['itemField'];
            } else if (withDefaults !== false) {
              result['itemField'] = '';
            } else {
              delete result['itemField'];
            }
            if (json['fieldmaskField'] != null) {
              result['fieldmaskField'] = json['fieldmaskField'];
            } else if (withDefaults !== false) {
              result['fieldmaskField'] = '';
            } else {
              delete result['fieldmaskField'];
            }
            if (json['filterField'] != null) {
              result['filterField'] = json['filterField'];
            } else if (withDefaults !== false) {
              result['filterField'] = '';
            } else {
              delete result['filterField'];
            }
            return result;
          } else
            return json;
        }
        static toGRPC(obj, helper) {
          if (obj == null) {
            return null;
          } else {
            const grpc = {};
            if (obj['itemField'] != null) {
              grpc['itemField'] = obj['itemField'];
            }
            if (obj['fieldmaskField'] != null) {
              grpc['fieldmaskField'] = obj['fieldmaskField'];
            }
            if (obj['filterField'] != null) {
              grpc['filterField'] = obj['filterField'];
            }
            return grpc;
          }
        }
        static fromGRPC(grpc, helper) {
          if (grpc == null) {
            return null;
          } else {
            const result = new $root.wix.api.BulkUpdateByFilterMethodOptions();
            if (grpc['itemField'] != null) {
              result['itemField'] = grpc['itemField'];
            } else {
              result['itemField'] = '';
            }
            if (grpc['fieldmaskField'] != null) {
              result['fieldmaskField'] = grpc['fieldmaskField'];
            } else {
              result['fieldmaskField'] = '';
            }
            if (grpc['filterField'] != null) {
              result['filterField'] = grpc['filterField'];
            } else {
              result['filterField'] = '';
            }
            return result;
          }
        }
      }
      __builtIn.Object.defineProperty(BulkUpdateByFilterMethodOptions.prototype, '__proto', {
        value: pbjs => {
          return $root.__lookup(pbjs)('wix.api.BulkUpdateByFilterMethodOptions');
        },
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(BulkUpdateByFilterMethodOptions.prototype, '__fqn__', {
        value: 'wix.api.BulkUpdateByFilterMethodOptions',
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(BulkUpdateByFilterMethodOptions.prototype, '__options__', {
        value: $root.__options,
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(BulkUpdateByFilterMethodOptions.prototype, '__root__', {
        value: $root,
        enumerable: false,
        configurable: false
      });
      return BulkUpdateByFilterMethodOptions;
    }());;
    _api.BulkUpsertMethodOptions = (function () {
      class BulkUpsertMethodOptions {
        constructor(props) {
          this.itemField = props && props.itemField;
          this.fieldmaskField = props && props.fieldmaskField;
        }
        static toJSON(obj, helper, withDefaults) {
          if (obj == null) {
            return null;
          } else {
            const json = {};
            if (obj['itemField'] != null) {
              json['itemField'] = obj['itemField'];
            } else if (withDefaults) {
              json['itemField'] = '';
            }
            if (obj['fieldmaskField'] != null) {
              json['fieldmaskField'] = obj['fieldmaskField'];
            } else if (withDefaults) {
              json['fieldmaskField'] = '';
            }
            return json;
          }
        }
        static fromJSON(json, helper, withDefaults) {
          if (typeof json === 'object' && !Array.isArray(json)) {
            const result = new $root.wix.api.BulkUpsertMethodOptions();
            if (json['itemField'] != null) {
              result['itemField'] = json['itemField'];
            } else if (withDefaults !== false) {
              result['itemField'] = '';
            } else {
              delete result['itemField'];
            }
            if (json['fieldmaskField'] != null) {
              result['fieldmaskField'] = json['fieldmaskField'];
            } else if (withDefaults !== false) {
              result['fieldmaskField'] = '';
            } else {
              delete result['fieldmaskField'];
            }
            return result;
          } else
            return json;
        }
        static toGRPC(obj, helper) {
          if (obj == null) {
            return null;
          } else {
            const grpc = {};
            if (obj['itemField'] != null) {
              grpc['itemField'] = obj['itemField'];
            }
            if (obj['fieldmaskField'] != null) {
              grpc['fieldmaskField'] = obj['fieldmaskField'];
            }
            return grpc;
          }
        }
        static fromGRPC(grpc, helper) {
          if (grpc == null) {
            return null;
          } else {
            const result = new $root.wix.api.BulkUpsertMethodOptions();
            if (grpc['itemField'] != null) {
              result['itemField'] = grpc['itemField'];
            } else {
              result['itemField'] = '';
            }
            if (grpc['fieldmaskField'] != null) {
              result['fieldmaskField'] = grpc['fieldmaskField'];
            } else {
              result['fieldmaskField'] = '';
            }
            return result;
          }
        }
      }
      __builtIn.Object.defineProperty(BulkUpsertMethodOptions.prototype, '__proto', {
        value: pbjs => {
          return $root.__lookup(pbjs)('wix.api.BulkUpsertMethodOptions');
        },
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(BulkUpsertMethodOptions.prototype, '__fqn__', {
        value: 'wix.api.BulkUpsertMethodOptions',
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(BulkUpsertMethodOptions.prototype, '__options__', {
        value: $root.__options,
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(BulkUpsertMethodOptions.prototype, '__root__', {
        value: $root,
        enumerable: false,
        configurable: false
      });
      return BulkUpsertMethodOptions;
    }());;
    _api.BulkDeleteMethodOptions = (function () {
      class BulkDeleteMethodOptions {
        constructor(props) {
          this.idsField = props && props.idsField;
        }
        static toJSON(obj, helper, withDefaults) {
          if (obj == null) {
            return null;
          } else {
            const json = {};
            if (obj['idsField'] != null) {
              json['idsField'] = obj['idsField'];
            } else if (withDefaults) {
              json['idsField'] = '';
            }
            return json;
          }
        }
        static fromJSON(json, helper, withDefaults) {
          if (typeof json === 'object' && !Array.isArray(json)) {
            const result = new $root.wix.api.BulkDeleteMethodOptions();
            if (json['idsField'] != null) {
              result['idsField'] = json['idsField'];
            } else if (withDefaults !== false) {
              result['idsField'] = '';
            } else {
              delete result['idsField'];
            }
            return result;
          } else
            return json;
        }
        static toGRPC(obj, helper) {
          if (obj == null) {
            return null;
          } else {
            const grpc = {};
            if (obj['idsField'] != null) {
              grpc['idsField'] = obj['idsField'];
            }
            return grpc;
          }
        }
        static fromGRPC(grpc, helper) {
          if (grpc == null) {
            return null;
          } else {
            const result = new $root.wix.api.BulkDeleteMethodOptions();
            if (grpc['idsField'] != null) {
              result['idsField'] = grpc['idsField'];
            } else {
              result['idsField'] = '';
            }
            return result;
          }
        }
      }
      __builtIn.Object.defineProperty(BulkDeleteMethodOptions.prototype, '__proto', {
        value: pbjs => {
          return $root.__lookup(pbjs)('wix.api.BulkDeleteMethodOptions');
        },
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(BulkDeleteMethodOptions.prototype, '__fqn__', {
        value: 'wix.api.BulkDeleteMethodOptions',
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(BulkDeleteMethodOptions.prototype, '__options__', {
        value: $root.__options,
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(BulkDeleteMethodOptions.prototype, '__root__', {
        value: $root,
        enumerable: false,
        configurable: false
      });
      return BulkDeleteMethodOptions;
    }());;
    _api.BulkDeleteByFilterMethodOptions = (function () {
      class BulkDeleteByFilterMethodOptions {
        constructor(props) {
          this.filterField = props && props.filterField;
        }
        static toJSON(obj, helper, withDefaults) {
          if (obj == null) {
            return null;
          } else {
            const json = {};
            if (obj['filterField'] != null) {
              json['filterField'] = obj['filterField'];
            } else if (withDefaults) {
              json['filterField'] = '';
            }
            return json;
          }
        }
        static fromJSON(json, helper, withDefaults) {
          if (typeof json === 'object' && !Array.isArray(json)) {
            const result = new $root.wix.api.BulkDeleteByFilterMethodOptions();
            if (json['filterField'] != null) {
              result['filterField'] = json['filterField'];
            } else if (withDefaults !== false) {
              result['filterField'] = '';
            } else {
              delete result['filterField'];
            }
            return result;
          } else
            return json;
        }
        static toGRPC(obj, helper) {
          if (obj == null) {
            return null;
          } else {
            const grpc = {};
            if (obj['filterField'] != null) {
              grpc['filterField'] = obj['filterField'];
            }
            return grpc;
          }
        }
        static fromGRPC(grpc, helper) {
          if (grpc == null) {
            return null;
          } else {
            const result = new $root.wix.api.BulkDeleteByFilterMethodOptions();
            if (grpc['filterField'] != null) {
              result['filterField'] = grpc['filterField'];
            } else {
              result['filterField'] = '';
            }
            return result;
          }
        }
      }
      __builtIn.Object.defineProperty(BulkDeleteByFilterMethodOptions.prototype, '__proto', {
        value: pbjs => {
          return $root.__lookup(pbjs)('wix.api.BulkDeleteByFilterMethodOptions');
        },
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(BulkDeleteByFilterMethodOptions.prototype, '__fqn__', {
        value: 'wix.api.BulkDeleteByFilterMethodOptions',
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(BulkDeleteByFilterMethodOptions.prototype, '__options__', {
        value: $root.__options,
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(BulkDeleteByFilterMethodOptions.prototype, '__root__', {
        value: $root,
        enumerable: false,
        configurable: false
      });
      return BulkDeleteByFilterMethodOptions;
    }());;
    _api.ListDeletedMethodOptions = (function () {
      class ListDeletedMethodOptions {
        constructor(props) {
          this.idsField = props && props.idsField;
          this.itemsField = props && props.itemsField;
          this.paging = props && props.paging;
        }
        static toJSON(obj, helper, withDefaults) {
          if (obj == null) {
            return null;
          } else {
            const json = {};
            if (obj['idsField'] != null) {
              json['idsField'] = obj['idsField'];
            } else if (withDefaults) {
              json['idsField'] = '';
            }
            if (obj['itemsField'] != null) {
              json['itemsField'] = obj['itemsField'];
            } else if (withDefaults) {
              json['itemsField'] = '';
            }
            if (obj['paging'] != null) {
              json['paging'] = $root.wix.api.Paging.toJSON(obj['paging'], helper, withDefaults);
            } else if (withDefaults) {
              delete json['paging'];
            }
            return json;
          }
        }
        static fromJSON(json, helper, withDefaults) {
          if (typeof json === 'object' && !Array.isArray(json)) {
            const result = new $root.wix.api.ListDeletedMethodOptions();
            if (json['idsField'] != null) {
              result['idsField'] = json['idsField'];
            } else if (withDefaults !== false) {
              result['idsField'] = '';
            } else {
              delete result['idsField'];
            }
            if (json['itemsField'] != null) {
              result['itemsField'] = json['itemsField'];
            } else if (withDefaults !== false) {
              result['itemsField'] = '';
            } else {
              delete result['itemsField'];
            }
            if (json['paging'] != null) {
              result['paging'] = $root.wix.api.Paging.fromJSON(json['paging'], helper);
            } else if (withDefaults !== false) {
              delete result['paging'];
            } else {
              delete result['paging'];
            }
            return result;
          } else
            return json;
        }
        static toGRPC(obj, helper) {
          if (obj == null) {
            return null;
          } else {
            const grpc = {};
            if (obj['idsField'] != null) {
              grpc['idsField'] = obj['idsField'];
            }
            if (obj['itemsField'] != null) {
              grpc['itemsField'] = obj['itemsField'];
            }
            if (obj['paging'] != null) {
              grpc['paging'] = $root.wix.api.Paging.toGRPC(obj['paging'], helper);
            }
            return grpc;
          }
        }
        static fromGRPC(grpc, helper) {
          if (grpc == null) {
            return null;
          } else {
            const result = new $root.wix.api.ListDeletedMethodOptions();
            if (grpc['idsField'] != null) {
              result['idsField'] = grpc['idsField'];
            } else {
              result['idsField'] = '';
            }
            if (grpc['itemsField'] != null) {
              result['itemsField'] = grpc['itemsField'];
            } else {
              result['itemsField'] = '';
            }
            if (grpc['paging'] != null) {
              result['paging'] = $root.wix.api.Paging.fromGRPC(grpc['paging'], helper);
            } else {
              delete result['paging'];
            }
            return result;
          }
        }
      }
      __builtIn.Object.defineProperty(ListDeletedMethodOptions.prototype, '__proto', {
        value: pbjs => {
          return $root.__lookup(pbjs)('wix.api.ListDeletedMethodOptions');
        },
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(ListDeletedMethodOptions.prototype, '__fqn__', {
        value: 'wix.api.ListDeletedMethodOptions',
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(ListDeletedMethodOptions.prototype, '__options__', {
        value: $root.__options,
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(ListDeletedMethodOptions.prototype, '__root__', {
        value: $root,
        enumerable: false,
        configurable: false
      });
      return ListDeletedMethodOptions;
    }());;
    _api.GetDeletedMethodOptions = (function () {
      class GetDeletedMethodOptions {
        constructor(props) {
          this.itemField = props && props.itemField;
          this.idField = props && props.idField;
        }
        static toJSON(obj, helper, withDefaults) {
          if (obj == null) {
            return null;
          } else {
            const json = {};
            if (obj['itemField'] != null) {
              json['itemField'] = obj['itemField'];
            } else if (withDefaults) {
              json['itemField'] = '';
            }
            if (obj['idField'] != null) {
              json['idField'] = obj['idField'];
            } else if (withDefaults) {
              json['idField'] = '';
            }
            return json;
          }
        }
        static fromJSON(json, helper, withDefaults) {
          if (typeof json === 'object' && !Array.isArray(json)) {
            const result = new $root.wix.api.GetDeletedMethodOptions();
            if (json['itemField'] != null) {
              result['itemField'] = json['itemField'];
            } else if (withDefaults !== false) {
              result['itemField'] = '';
            } else {
              delete result['itemField'];
            }
            if (json['idField'] != null) {
              result['idField'] = json['idField'];
            } else if (withDefaults !== false) {
              result['idField'] = '';
            } else {
              delete result['idField'];
            }
            return result;
          } else
            return json;
        }
        static toGRPC(obj, helper) {
          if (obj == null) {
            return null;
          } else {
            const grpc = {};
            if (obj['itemField'] != null) {
              grpc['itemField'] = obj['itemField'];
            }
            if (obj['idField'] != null) {
              grpc['idField'] = obj['idField'];
            }
            return grpc;
          }
        }
        static fromGRPC(grpc, helper) {
          if (grpc == null) {
            return null;
          } else {
            const result = new $root.wix.api.GetDeletedMethodOptions();
            if (grpc['itemField'] != null) {
              result['itemField'] = grpc['itemField'];
            } else {
              result['itemField'] = '';
            }
            if (grpc['idField'] != null) {
              result['idField'] = grpc['idField'];
            } else {
              result['idField'] = '';
            }
            return result;
          }
        }
      }
      __builtIn.Object.defineProperty(GetDeletedMethodOptions.prototype, '__proto', {
        value: pbjs => {
          return $root.__lookup(pbjs)('wix.api.GetDeletedMethodOptions');
        },
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(GetDeletedMethodOptions.prototype, '__fqn__', {
        value: 'wix.api.GetDeletedMethodOptions',
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(GetDeletedMethodOptions.prototype, '__options__', {
        value: $root.__options,
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(GetDeletedMethodOptions.prototype, '__root__', {
        value: $root,
        enumerable: false,
        configurable: false
      });
      return GetDeletedMethodOptions;
    }());;
    _api.RestoreFromTrashbinMethodOptions = (function () {
      class RestoreFromTrashbinMethodOptions {
        constructor(props) {
          this.itemField = props && props.itemField;
          this.idField = props && props.idField;
        }
        static toJSON(obj, helper, withDefaults) {
          if (obj == null) {
            return null;
          } else {
            const json = {};
            if (obj['itemField'] != null) {
              json['itemField'] = obj['itemField'];
            } else if (withDefaults) {
              json['itemField'] = '';
            }
            if (obj['idField'] != null) {
              json['idField'] = obj['idField'];
            } else if (withDefaults) {
              json['idField'] = '';
            }
            return json;
          }
        }
        static fromJSON(json, helper, withDefaults) {
          if (typeof json === 'object' && !Array.isArray(json)) {
            const result = new $root.wix.api.RestoreFromTrashbinMethodOptions();
            if (json['itemField'] != null) {
              result['itemField'] = json['itemField'];
            } else if (withDefaults !== false) {
              result['itemField'] = '';
            } else {
              delete result['itemField'];
            }
            if (json['idField'] != null) {
              result['idField'] = json['idField'];
            } else if (withDefaults !== false) {
              result['idField'] = '';
            } else {
              delete result['idField'];
            }
            return result;
          } else
            return json;
        }
        static toGRPC(obj, helper) {
          if (obj == null) {
            return null;
          } else {
            const grpc = {};
            if (obj['itemField'] != null) {
              grpc['itemField'] = obj['itemField'];
            }
            if (obj['idField'] != null) {
              grpc['idField'] = obj['idField'];
            }
            return grpc;
          }
        }
        static fromGRPC(grpc, helper) {
          if (grpc == null) {
            return null;
          } else {
            const result = new $root.wix.api.RestoreFromTrashbinMethodOptions();
            if (grpc['itemField'] != null) {
              result['itemField'] = grpc['itemField'];
            } else {
              result['itemField'] = '';
            }
            if (grpc['idField'] != null) {
              result['idField'] = grpc['idField'];
            } else {
              result['idField'] = '';
            }
            return result;
          }
        }
      }
      __builtIn.Object.defineProperty(RestoreFromTrashbinMethodOptions.prototype, '__proto', {
        value: pbjs => {
          return $root.__lookup(pbjs)('wix.api.RestoreFromTrashbinMethodOptions');
        },
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(RestoreFromTrashbinMethodOptions.prototype, '__fqn__', {
        value: 'wix.api.RestoreFromTrashbinMethodOptions',
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(RestoreFromTrashbinMethodOptions.prototype, '__options__', {
        value: $root.__options,
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(RestoreFromTrashbinMethodOptions.prototype, '__root__', {
        value: $root,
        enumerable: false,
        configurable: false
      });
      return RestoreFromTrashbinMethodOptions;
    }());;
    _api.RemoveFromTrashbinMethodOptions = (function () {
      class RemoveFromTrashbinMethodOptions {
        constructor(props) {
          this.idField = props && props.idField;
        }
        static toJSON(obj, helper, withDefaults) {
          if (obj == null) {
            return null;
          } else {
            const json = {};
            if (obj['idField'] != null) {
              json['idField'] = obj['idField'];
            } else if (withDefaults) {
              json['idField'] = '';
            }
            return json;
          }
        }
        static fromJSON(json, helper, withDefaults) {
          if (typeof json === 'object' && !Array.isArray(json)) {
            const result = new $root.wix.api.RemoveFromTrashbinMethodOptions();
            if (json['idField'] != null) {
              result['idField'] = json['idField'];
            } else if (withDefaults !== false) {
              result['idField'] = '';
            } else {
              delete result['idField'];
            }
            return result;
          } else
            return json;
        }
        static toGRPC(obj, helper) {
          if (obj == null) {
            return null;
          } else {
            const grpc = {};
            if (obj['idField'] != null) {
              grpc['idField'] = obj['idField'];
            }
            return grpc;
          }
        }
        static fromGRPC(grpc, helper) {
          if (grpc == null) {
            return null;
          } else {
            const result = new $root.wix.api.RemoveFromTrashbinMethodOptions();
            if (grpc['idField'] != null) {
              result['idField'] = grpc['idField'];
            } else {
              result['idField'] = '';
            }
            return result;
          }
        }
      }
      __builtIn.Object.defineProperty(RemoveFromTrashbinMethodOptions.prototype, '__proto', {
        value: pbjs => {
          return $root.__lookup(pbjs)('wix.api.RemoveFromTrashbinMethodOptions');
        },
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(RemoveFromTrashbinMethodOptions.prototype, '__fqn__', {
        value: 'wix.api.RemoveFromTrashbinMethodOptions',
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(RemoveFromTrashbinMethodOptions.prototype, '__options__', {
        value: $root.__options,
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(RemoveFromTrashbinMethodOptions.prototype, '__root__', {
        value: $root,
        enumerable: false,
        configurable: false
      });
      return RemoveFromTrashbinMethodOptions;
    }());;
    _api.Wql = (function () {
      class Wql {
        constructor(props) {
          this.operatorFieldSupport = props && props.operatorFieldSupport;
        }
        static toJSON(obj, helper, withDefaults) {
          if (obj == null) {
            return null;
          } else {
            const json = {};
            if (obj['operatorFieldSupport'] != null) {
              json['operatorFieldSupport'] = obj['operatorFieldSupport'].map(e => {
                return $root.wix.api.Wql.OperatorFieldSupport.toJSON(e, helper, withDefaults);
              });
            } else if (withDefaults) {
              json['operatorFieldSupport'] = [];
            }
            return json;
          }
        }
        static fromJSON(json, helper, withDefaults) {
          if (typeof json === 'object' && !Array.isArray(json)) {
            const result = new $root.wix.api.Wql();
            if (json['operatorFieldSupport'] != null) {
              result['operatorFieldSupport'] = Array.isArray(json['operatorFieldSupport']) ? json['operatorFieldSupport'].map(e => {
                return $root.wix.api.Wql.OperatorFieldSupport.fromJSON(e, helper);
              }) : json['operatorFieldSupport'];
            } else if (withDefaults !== false) {
              result['operatorFieldSupport'] = [];
            } else {
              delete result['operatorFieldSupport'];
            }
            return result;
          } else
            return json;
        }
        static toGRPC(obj, helper) {
          if (obj == null) {
            return null;
          } else {
            const grpc = {};
            if (obj['operatorFieldSupport'] != null) {
              grpc['operatorFieldSupport'] = obj['operatorFieldSupport'].map(e => {
                return $root.wix.api.Wql.OperatorFieldSupport.toGRPC(e, helper);
              });
            }
            return grpc;
          }
        }
        static fromGRPC(grpc, helper) {
          if (grpc == null) {
            return null;
          } else {
            const result = new $root.wix.api.Wql();
            if (grpc['operatorFieldSupport'] != null) {
              result['operatorFieldSupport'] = grpc['operatorFieldSupport'].map(e => {
                return $root.wix.api.Wql.OperatorFieldSupport.fromGRPC(e, helper);
              });
            } else {
              result['operatorFieldSupport'] = [];
            }
            return result;
          }
        }
      }
      Wql.Operator = {
        'ALL_APPLICABLE_OPERATORS': 0,
        0: 'ALL_APPLICABLE_OPERATORS',
        'EQ': 1,
        1: 'EQ',
        'GT': 2,
        2: 'GT',
        'GTE': 3,
        3: 'GTE',
        'IN': 4,
        4: 'IN',
        'LT': 5,
        5: 'LT',
        'LTE': 6,
        6: 'LTE',
        'NE': 7,
        7: 'NE',
        'NIN': 8,
        8: 'NIN',
        'BEGINS': 9,
        9: 'BEGINS',
        'EXISTS': 10,
        10: 'EXISTS',
        'ALL': 11,
        11: 'ALL',
        'ANY': 12,
        12: 'ANY',
        'EMPTY': 13,
        13: 'EMPTY'
      };
      Wql.Sort = {
        'NONE': 0,
        0: 'NONE',
        'ASC': 1,
        1: 'ASC',
        'DESC': 2,
        2: 'DESC',
        'BOTH': 3,
        3: 'BOTH'
      };
      Wql.RequiredFields = (function () {
        class RequiredFields {
          constructor(props) {
            this.field = props && props.field;
          }
          static toJSON(obj, helper, withDefaults) {
            if (obj == null) {
              return null;
            } else {
              const json = {};
              if (obj['field'] != null) {
                json['field'] = obj['field'].map(e => {
                  return e;
                });
              } else if (withDefaults) {
                json['field'] = [];
              }
              return json;
            }
          }
          static fromJSON(json, helper, withDefaults) {
            if (typeof json === 'object' && !Array.isArray(json)) {
              const result = new $root.wix.api.Wql.RequiredFields();
              if (json['field'] != null) {
                result['field'] = Array.isArray(json['field']) ? json['field'].map(e => {
                  return e;
                }) : json['field'];
              } else if (withDefaults !== false) {
                result['field'] = [];
              } else {
                delete result['field'];
              }
              return result;
            } else
              return json;
          }
          static toGRPC(obj, helper) {
            if (obj == null) {
              return null;
            } else {
              const grpc = {};
              if (obj['field'] != null) {
                grpc['field'] = obj['field'].map(e => {
                  return e;
                });
              }
              return grpc;
            }
          }
          static fromGRPC(grpc, helper) {
            if (grpc == null) {
              return null;
            } else {
              const result = new $root.wix.api.Wql.RequiredFields();
              if (grpc['field'] != null) {
                result['field'] = grpc['field'].map(e => {
                  return e;
                });
              } else {
                result['field'] = [];
              }
              return result;
            }
          }
        }
        __builtIn.Object.defineProperty(RequiredFields.prototype, '__proto', {
          value: pbjs => {
            return $root.__lookup(pbjs)('wix.api.Wql.RequiredFields');
          },
          enumerable: false,
          configurable: false
        });
        __builtIn.Object.defineProperty(RequiredFields.prototype, '__fqn__', {
          value: 'wix.api.Wql.RequiredFields',
          enumerable: false,
          configurable: false
        });
        __builtIn.Object.defineProperty(RequiredFields.prototype, '__options__', {
          value: $root.__options,
          enumerable: false,
          configurable: false
        });
        __builtIn.Object.defineProperty(RequiredFields.prototype, '__root__', {
          value: $root,
          enumerable: false,
          configurable: false
        });
        return RequiredFields;
      }());;
      Wql.OperatorFieldSupport = (function () {
        class OperatorFieldSupport {
          constructor(props) {
            this.operator = props && props.operator;
            this.glob = props && props.glob;
            this.sort = props && props.sort;
            this.requiredFields = props && props.requiredFields;
          }
          static toJSON(obj, helper, withDefaults) {
            if (obj == null) {
              return null;
            } else {
              const json = {};
              if (obj['operator'] != null) {
                json['operator'] = obj['operator'].map(e => {
                  return $root.wix.api.Wql.Operator[e];
                });
              } else if (withDefaults) {
                json['operator'] = [];
              }
              if (obj['glob'] != null) {
                json['glob'] = obj['glob'];
              } else if (withDefaults) {
                json['glob'] = '';
              }
              if (obj['sort'] != null) {
                json['sort'] = $root.wix.api.Wql.Sort[obj['sort']];
              } else if (withDefaults) {
                json['sort'] = 0;
              }
              if (obj['requiredFields'] != null) {
                json['requiredFields'] = obj['requiredFields'].map(e => {
                  return $root.wix.api.Wql.RequiredFields.toJSON(e, helper, withDefaults);
                });
              } else if (withDefaults) {
                json['requiredFields'] = [];
              }
              return json;
            }
          }
          static fromJSON(json, helper, withDefaults) {
            if (typeof json === 'object' && !Array.isArray(json)) {
              const result = new $root.wix.api.Wql.OperatorFieldSupport();
              if (json['operator'] != null) {
                result['operator'] = Array.isArray(json['operator']) ? json['operator'].map(e => {
                  return typeof e === 'string' ? $root.wix.api.Wql.Operator[e] : e;
                }) : json['operator'];
              } else if (withDefaults !== false) {
                result['operator'] = [];
              } else {
                delete result['operator'];
              }
              if (json['glob'] != null) {
                result['glob'] = json['glob'];
              } else if (withDefaults !== false) {
                result['glob'] = '';
              } else {
                delete result['glob'];
              }
              if (json['sort'] != null) {
                result['sort'] = typeof json['sort'] === 'string' ? $root.wix.api.Wql.Sort[json['sort']] : json['sort'];
              } else if (withDefaults !== false) {
                result['sort'] = 0;
              } else {
                delete result['sort'];
              }
              if (json['requiredFields'] != null) {
                result['requiredFields'] = Array.isArray(json['requiredFields']) ? json['requiredFields'].map(e => {
                  return $root.wix.api.Wql.RequiredFields.fromJSON(e, helper);
                }) : json['requiredFields'];
              } else if (withDefaults !== false) {
                result['requiredFields'] = [];
              } else {
                delete result['requiredFields'];
              }
              return result;
            } else
              return json;
          }
          static toGRPC(obj, helper) {
            if (obj == null) {
              return null;
            } else {
              const grpc = {};
              if (obj['operator'] != null) {
                grpc['operator'] = obj['operator'].map(e => {
                  return e;
                });
              }
              if (obj['glob'] != null) {
                grpc['glob'] = obj['glob'];
              }
              if (obj['sort'] != null) {
                grpc['sort'] = obj['sort'];
              }
              if (obj['requiredFields'] != null) {
                grpc['requiredFields'] = obj['requiredFields'].map(e => {
                  return $root.wix.api.Wql.RequiredFields.toGRPC(e, helper);
                });
              }
              return grpc;
            }
          }
          static fromGRPC(grpc, helper) {
            if (grpc == null) {
              return null;
            } else {
              const result = new $root.wix.api.Wql.OperatorFieldSupport();
              if (grpc['operator'] != null) {
                result['operator'] = grpc['operator'].map(e => {
                  return e;
                });
              } else {
                result['operator'] = [];
              }
              if (grpc['glob'] != null) {
                result['glob'] = grpc['glob'];
              } else {
                result['glob'] = '';
              }
              if (grpc['sort'] != null) {
                result['sort'] = grpc['sort'];
              } else {
                result['sort'] = 0;
              }
              if (grpc['requiredFields'] != null) {
                result['requiredFields'] = grpc['requiredFields'].map(e => {
                  return $root.wix.api.Wql.RequiredFields.fromGRPC(e, helper);
                });
              } else {
                result['requiredFields'] = [];
              }
              return result;
            }
          }
        }
        __builtIn.Object.defineProperty(OperatorFieldSupport.prototype, '__proto', {
          value: pbjs => {
            return $root.__lookup(pbjs)('wix.api.Wql.OperatorFieldSupport');
          },
          enumerable: false,
          configurable: false
        });
        __builtIn.Object.defineProperty(OperatorFieldSupport.prototype, '__fqn__', {
          value: 'wix.api.Wql.OperatorFieldSupport',
          enumerable: false,
          configurable: false
        });
        __builtIn.Object.defineProperty(OperatorFieldSupport.prototype, '__options__', {
          value: $root.__options,
          enumerable: false,
          configurable: false
        });
        __builtIn.Object.defineProperty(OperatorFieldSupport.prototype, '__root__', {
          value: $root,
          enumerable: false,
          configurable: false
        });
        return OperatorFieldSupport;
      }());;
      Wql.Operator = {
        'ALL_APPLICABLE_OPERATORS': 0,
        0: 'ALL_APPLICABLE_OPERATORS',
        'EQ': 1,
        1: 'EQ',
        'GT': 2,
        2: 'GT',
        'GTE': 3,
        3: 'GTE',
        'IN': 4,
        4: 'IN',
        'LT': 5,
        5: 'LT',
        'LTE': 6,
        6: 'LTE',
        'NE': 7,
        7: 'NE',
        'NIN': 8,
        8: 'NIN',
        'BEGINS': 9,
        9: 'BEGINS',
        'EXISTS': 10,
        10: 'EXISTS',
        'ALL': 11,
        11: 'ALL',
        'ANY': 12,
        12: 'ANY',
        'EMPTY': 13,
        13: 'EMPTY'
      };
      Wql.Sort = {
        'NONE': 0,
        0: 'NONE',
        'ASC': 1,
        1: 'ASC',
        'DESC': 2,
        2: 'DESC',
        'BOTH': 3,
        3: 'BOTH'
      };
      Wql.RequiredFields = (function () {
        class RequiredFields {
          constructor(props) {
            this.field = props && props.field;
          }
          static toJSON(obj, helper, withDefaults) {
            if (obj == null) {
              return null;
            } else {
              const json = {};
              if (obj['field'] != null) {
                json['field'] = obj['field'].map(e => {
                  return e;
                });
              } else if (withDefaults) {
                json['field'] = [];
              }
              return json;
            }
          }
          static fromJSON(json, helper, withDefaults) {
            if (typeof json === 'object' && !Array.isArray(json)) {
              const result = new $root.wix.api.Wql.RequiredFields();
              if (json['field'] != null) {
                result['field'] = Array.isArray(json['field']) ? json['field'].map(e => {
                  return e;
                }) : json['field'];
              } else if (withDefaults !== false) {
                result['field'] = [];
              } else {
                delete result['field'];
              }
              return result;
            } else
              return json;
          }
          static toGRPC(obj, helper) {
            if (obj == null) {
              return null;
            } else {
              const grpc = {};
              if (obj['field'] != null) {
                grpc['field'] = obj['field'].map(e => {
                  return e;
                });
              }
              return grpc;
            }
          }
          static fromGRPC(grpc, helper) {
            if (grpc == null) {
              return null;
            } else {
              const result = new $root.wix.api.Wql.RequiredFields();
              if (grpc['field'] != null) {
                result['field'] = grpc['field'].map(e => {
                  return e;
                });
              } else {
                result['field'] = [];
              }
              return result;
            }
          }
        }
        __builtIn.Object.defineProperty(RequiredFields.prototype, '__proto', {
          value: pbjs => {
            return $root.__lookup(pbjs)('wix.api.Wql.RequiredFields');
          },
          enumerable: false,
          configurable: false
        });
        __builtIn.Object.defineProperty(RequiredFields.prototype, '__fqn__', {
          value: 'wix.api.Wql.RequiredFields',
          enumerable: false,
          configurable: false
        });
        __builtIn.Object.defineProperty(RequiredFields.prototype, '__options__', {
          value: $root.__options,
          enumerable: false,
          configurable: false
        });
        __builtIn.Object.defineProperty(RequiredFields.prototype, '__root__', {
          value: $root,
          enumerable: false,
          configurable: false
        });
        return RequiredFields;
      }());;
      Wql.OperatorFieldSupport = (function () {
        class OperatorFieldSupport {
          constructor(props) {
            this.operator = props && props.operator;
            this.glob = props && props.glob;
            this.sort = props && props.sort;
            this.requiredFields = props && props.requiredFields;
          }
          static toJSON(obj, helper, withDefaults) {
            if (obj == null) {
              return null;
            } else {
              const json = {};
              if (obj['operator'] != null) {
                json['operator'] = obj['operator'].map(e => {
                  return $root.wix.api.Wql.Operator[e];
                });
              } else if (withDefaults) {
                json['operator'] = [];
              }
              if (obj['glob'] != null) {
                json['glob'] = obj['glob'];
              } else if (withDefaults) {
                json['glob'] = '';
              }
              if (obj['sort'] != null) {
                json['sort'] = $root.wix.api.Wql.Sort[obj['sort']];
              } else if (withDefaults) {
                json['sort'] = 0;
              }
              if (obj['requiredFields'] != null) {
                json['requiredFields'] = obj['requiredFields'].map(e => {
                  return $root.wix.api.Wql.RequiredFields.toJSON(e, helper, withDefaults);
                });
              } else if (withDefaults) {
                json['requiredFields'] = [];
              }
              return json;
            }
          }
          static fromJSON(json, helper, withDefaults) {
            if (typeof json === 'object' && !Array.isArray(json)) {
              const result = new $root.wix.api.Wql.OperatorFieldSupport();
              if (json['operator'] != null) {
                result['operator'] = Array.isArray(json['operator']) ? json['operator'].map(e => {
                  return typeof e === 'string' ? $root.wix.api.Wql.Operator[e] : e;
                }) : json['operator'];
              } else if (withDefaults !== false) {
                result['operator'] = [];
              } else {
                delete result['operator'];
              }
              if (json['glob'] != null) {
                result['glob'] = json['glob'];
              } else if (withDefaults !== false) {
                result['glob'] = '';
              } else {
                delete result['glob'];
              }
              if (json['sort'] != null) {
                result['sort'] = typeof json['sort'] === 'string' ? $root.wix.api.Wql.Sort[json['sort']] : json['sort'];
              } else if (withDefaults !== false) {
                result['sort'] = 0;
              } else {
                delete result['sort'];
              }
              if (json['requiredFields'] != null) {
                result['requiredFields'] = Array.isArray(json['requiredFields']) ? json['requiredFields'].map(e => {
                  return $root.wix.api.Wql.RequiredFields.fromJSON(e, helper);
                }) : json['requiredFields'];
              } else if (withDefaults !== false) {
                result['requiredFields'] = [];
              } else {
                delete result['requiredFields'];
              }
              return result;
            } else
              return json;
          }
          static toGRPC(obj, helper) {
            if (obj == null) {
              return null;
            } else {
              const grpc = {};
              if (obj['operator'] != null) {
                grpc['operator'] = obj['operator'].map(e => {
                  return e;
                });
              }
              if (obj['glob'] != null) {
                grpc['glob'] = obj['glob'];
              }
              if (obj['sort'] != null) {
                grpc['sort'] = obj['sort'];
              }
              if (obj['requiredFields'] != null) {
                grpc['requiredFields'] = obj['requiredFields'].map(e => {
                  return $root.wix.api.Wql.RequiredFields.toGRPC(e, helper);
                });
              }
              return grpc;
            }
          }
          static fromGRPC(grpc, helper) {
            if (grpc == null) {
              return null;
            } else {
              const result = new $root.wix.api.Wql.OperatorFieldSupport();
              if (grpc['operator'] != null) {
                result['operator'] = grpc['operator'].map(e => {
                  return e;
                });
              } else {
                result['operator'] = [];
              }
              if (grpc['glob'] != null) {
                result['glob'] = grpc['glob'];
              } else {
                result['glob'] = '';
              }
              if (grpc['sort'] != null) {
                result['sort'] = grpc['sort'];
              } else {
                result['sort'] = 0;
              }
              if (grpc['requiredFields'] != null) {
                result['requiredFields'] = grpc['requiredFields'].map(e => {
                  return $root.wix.api.Wql.RequiredFields.fromGRPC(e, helper);
                });
              } else {
                result['requiredFields'] = [];
              }
              return result;
            }
          }
        }
        __builtIn.Object.defineProperty(OperatorFieldSupport.prototype, '__proto', {
          value: pbjs => {
            return $root.__lookup(pbjs)('wix.api.Wql.OperatorFieldSupport');
          },
          enumerable: false,
          configurable: false
        });
        __builtIn.Object.defineProperty(OperatorFieldSupport.prototype, '__fqn__', {
          value: 'wix.api.Wql.OperatorFieldSupport',
          enumerable: false,
          configurable: false
        });
        __builtIn.Object.defineProperty(OperatorFieldSupport.prototype, '__options__', {
          value: $root.__options,
          enumerable: false,
          configurable: false
        });
        __builtIn.Object.defineProperty(OperatorFieldSupport.prototype, '__root__', {
          value: $root,
          enumerable: false,
          configurable: false
        });
        return OperatorFieldSupport;
      }());;
      __builtIn.Object.defineProperty(Wql.prototype, '__proto', {
        value: pbjs => {
          return $root.__lookup(pbjs)('wix.api.Wql');
        },
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(Wql.prototype, '__fqn__', {
        value: 'wix.api.Wql',
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(Wql.prototype, '__options__', {
        value: $root.__options,
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(Wql.prototype, '__root__', {
        value: $root,
        enumerable: false,
        configurable: false
      });
      return Wql;
    }());;
    _api.Hookable = (function () {
      class Hookable {
        constructor(props) {
        }
        static toJSON(obj, helper, withDefaults) {
          if (obj == null) {
            return null;
          } else {
            const json = {};
            return json;
          }
        }
        static fromJSON(json, helper, withDefaults) {
          if (typeof json === 'object' && !Array.isArray(json)) {
            const result = new $root.wix.api.Hookable();
            return result;
          } else
            return json;
        }
        static toGRPC(obj, helper) {
          if (obj == null) {
            return null;
          } else {
            const grpc = {};
            return grpc;
          }
        }
        static fromGRPC(grpc, helper) {
          if (grpc == null) {
            return null;
          } else {
            const result = new $root.wix.api.Hookable();
            return result;
          }
        }
      }
      __builtIn.Object.defineProperty(Hookable.prototype, '__proto', {
        value: pbjs => {
          return $root.__lookup(pbjs)('wix.api.Hookable');
        },
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(Hookable.prototype, '__fqn__', {
        value: 'wix.api.Hookable',
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(Hookable.prototype, '__options__', {
        value: $root.__options,
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(Hookable.prototype, '__root__', {
        value: $root,
        enumerable: false,
        configurable: false
      });
      return Hookable;
    }());;
    _api.Translatable = (function () {
      class Translatable {
        constructor(props) {
          this.name = props && props.name;
          this.hidden = props && props.hidden;
          this.grouping = props && props.grouping;
          this.type = props && props.type;
        }
        static toJSON(obj, helper, withDefaults) {
          if (obj == null) {
            return null;
          } else {
            const json = {};
            if (obj['name'] != null) {
              json['name'] = obj['name'];
            } else if (withDefaults) {
              json['name'] = '';
            }
            if (obj['hidden'] != null) {
              json['hidden'] = obj['hidden'];
            } else if (withDefaults) {
              json['hidden'] = false;
            }
            if (obj['grouping'] != null) {
              json['grouping'] = obj['grouping'];
            } else if (withDefaults) {
              json['grouping'] = '';
            }
            if (obj['type'] != null) {
              json['type'] = $root.wix.api.Translatable.Type[obj['type']];
            } else if (withDefaults) {
              json['type'] = 0;
            }
            return json;
          }
        }
        static fromJSON(json, helper, withDefaults) {
          if (typeof json === 'object' && !Array.isArray(json)) {
            const result = new $root.wix.api.Translatable();
            if (json['name'] != null) {
              result['name'] = json['name'];
            } else if (withDefaults !== false) {
              result['name'] = '';
            } else {
              delete result['name'];
            }
            if (json['hidden'] != null) {
              result['hidden'] = json['hidden'];
            } else if (withDefaults !== false) {
              result['hidden'] = false;
            } else {
              delete result['hidden'];
            }
            if (json['grouping'] != null) {
              result['grouping'] = json['grouping'];
            } else if (withDefaults !== false) {
              result['grouping'] = '';
            } else {
              delete result['grouping'];
            }
            if (json['type'] != null) {
              result['type'] = typeof json['type'] === 'string' ? $root.wix.api.Translatable.Type[json['type']] : json['type'];
            } else if (withDefaults !== false) {
              result['type'] = 0;
            } else {
              delete result['type'];
            }
            return result;
          } else
            return json;
        }
        static toGRPC(obj, helper) {
          if (obj == null) {
            return null;
          } else {
            const grpc = {};
            if (obj['name'] != null) {
              grpc['name'] = obj['name'];
            }
            if (obj['hidden'] != null) {
              grpc['hidden'] = obj['hidden'];
            }
            if (obj['grouping'] != null) {
              grpc['grouping'] = obj['grouping'];
            }
            if (obj['type'] != null) {
              grpc['type'] = obj['type'];
            }
            return grpc;
          }
        }
        static fromGRPC(grpc, helper) {
          if (grpc == null) {
            return null;
          } else {
            const result = new $root.wix.api.Translatable();
            if (grpc['name'] != null) {
              result['name'] = grpc['name'];
            } else {
              result['name'] = '';
            }
            if (grpc['hidden'] != null) {
              result['hidden'] = grpc['hidden'];
            } else {
              result['hidden'] = false;
            }
            if (grpc['grouping'] != null) {
              result['grouping'] = grpc['grouping'];
            } else {
              result['grouping'] = '';
            }
            if (grpc['type'] != null) {
              result['type'] = grpc['type'];
            } else {
              result['type'] = 0;
            }
            return result;
          }
        }
      }
      Translatable.Type = {
        'UNDEFINED_TYPE': 0,
        0: 'UNDEFINED_TYPE',
        'SHORT_TEXT': 1,
        1: 'SHORT_TEXT',
        'LONG_TEXT': 2,
        2: 'LONG_TEXT',
        'RICH_TEXT': 3,
        3: 'RICH_TEXT',
        'RICH_CONTENT_EDITOR': 4,
        4: 'RICH_CONTENT_EDITOR',
        'SELECTION': 5,
        5: 'SELECTION',
        'MULTI_SELECTION': 6,
        6: 'MULTI_SELECTION',
        'DOCUMENT': 7,
        7: 'DOCUMENT',
        'IMAGE': 8,
        8: 'IMAGE',
        'VIDEO': 9,
        9: 'VIDEO'
      };
      Translatable.Type = {
        'UNDEFINED_TYPE': 0,
        0: 'UNDEFINED_TYPE',
        'SHORT_TEXT': 1,
        1: 'SHORT_TEXT',
        'LONG_TEXT': 2,
        2: 'LONG_TEXT',
        'RICH_TEXT': 3,
        3: 'RICH_TEXT',
        'RICH_CONTENT_EDITOR': 4,
        4: 'RICH_CONTENT_EDITOR',
        'SELECTION': 5,
        5: 'SELECTION',
        'MULTI_SELECTION': 6,
        6: 'MULTI_SELECTION',
        'DOCUMENT': 7,
        7: 'DOCUMENT',
        'IMAGE': 8,
        8: 'IMAGE',
        'VIDEO': 9,
        9: 'VIDEO'
      };
      __builtIn.Object.defineProperty(Translatable.prototype, '__proto', {
        value: pbjs => {
          return $root.__lookup(pbjs)('wix.api.Translatable');
        },
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(Translatable.prototype, '__fqn__', {
        value: 'wix.api.Translatable',
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(Translatable.prototype, '__options__', {
        value: $root.__options,
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(Translatable.prototype, '__root__', {
        value: $root,
        enumerable: false,
        configurable: false
      });
      return Translatable;
    }());;
    _api.ServiceAppendix = (function () {
      class ServiceAppendix {
        constructor(props) {
          this.type = props && props.type;
          this.path = props && props.path;
        }
        static toJSON(obj, helper, withDefaults) {
          if (obj == null) {
            return null;
          } else {
            const json = {};
            if (obj['type'] != null) {
              json['type'] = $root.wix.api.ServiceAppendix.Type[obj['type']];
            } else if (withDefaults) {
              json['type'] = 0;
            }
            if (obj['path'] != null) {
              json['path'] = obj['path'];
            } else if (withDefaults) {
              json['path'] = '';
            }
            return json;
          }
        }
        static fromJSON(json, helper, withDefaults) {
          if (typeof json === 'object' && !Array.isArray(json)) {
            const result = new $root.wix.api.ServiceAppendix();
            if (json['type'] != null) {
              result['type'] = typeof json['type'] === 'string' ? $root.wix.api.ServiceAppendix.Type[json['type']] : json['type'];
            } else if (withDefaults !== false) {
              result['type'] = 0;
            } else {
              delete result['type'];
            }
            if (json['path'] != null) {
              result['path'] = json['path'];
            } else if (withDefaults !== false) {
              result['path'] = '';
            } else {
              delete result['path'];
            }
            return result;
          } else
            return json;
        }
        static toGRPC(obj, helper) {
          if (obj == null) {
            return null;
          } else {
            const grpc = {};
            if (obj['type'] != null) {
              grpc['type'] = obj['type'];
            }
            if (obj['path'] != null) {
              grpc['path'] = obj['path'];
            }
            return grpc;
          }
        }
        static fromGRPC(grpc, helper) {
          if (grpc == null) {
            return null;
          } else {
            const result = new $root.wix.api.ServiceAppendix();
            if (grpc['type'] != null) {
              result['type'] = grpc['type'];
            } else {
              result['type'] = 0;
            }
            if (grpc['path'] != null) {
              result['path'] = grpc['path'];
            } else {
              result['path'] = '';
            }
            return result;
          }
        }
      }
      ServiceAppendix.Type = {
        'UNKNOWN_APPENDIX_TYPE': 0,
        0: 'UNKNOWN_APPENDIX_TYPE',
        'NILE': 1,
        1: 'NILE',
        'MESSAGE_BUS': 2,
        2: 'MESSAGE_BUS'
      };
      ServiceAppendix.Type = {
        'UNKNOWN_APPENDIX_TYPE': 0,
        0: 'UNKNOWN_APPENDIX_TYPE',
        'NILE': 1,
        1: 'NILE',
        'MESSAGE_BUS': 2,
        2: 'MESSAGE_BUS'
      };
      __builtIn.Object.defineProperty(ServiceAppendix.prototype, '__proto', {
        value: pbjs => {
          return $root.__lookup(pbjs)('wix.api.ServiceAppendix');
        },
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(ServiceAppendix.prototype, '__fqn__', {
        value: 'wix.api.ServiceAppendix',
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(ServiceAppendix.prototype, '__options__', {
        value: $root.__options,
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(ServiceAppendix.prototype, '__root__', {
        value: $root,
        enumerable: false,
        configurable: false
      });
      return ServiceAppendix;
    }());;
    _api.Exposure = {
      'PRIVATE': 0,
      0: 'PRIVATE',
      'INTERNAL': 1,
      1: 'INTERNAL',
      'PUBLIC': 2,
      2: 'PUBLIC'
    };
    _api.Maturity = {
      'ALPHA': 0,
      0: 'ALPHA',
      'BETA': 1,
      1: 'BETA',
      'IA': 2,
      2: 'IA',
      'GA': 3,
      3: 'GA',
      'NOT_IMPLEMENTED': 4,
      4: 'NOT_IMPLEMENTED'
    };
    _api.Error = (function () {
      class Error {
        constructor(props) {
          this.httpCode = props && props.httpCode;
          this.applicationCode = props && props.applicationCode;
          this.data = props && props.data;
        }
        static toJSON(obj, helper, withDefaults) {
          if (obj == null) {
            return null;
          } else {
            const json = {};
            if (obj['httpCode'] != null) {
              json['httpCode'] = $root.wix.api.StatusCodes.HttpStatusCode[obj['httpCode']];
            } else if (withDefaults) {
              json['httpCode'] = 0;
            }
            if (obj['applicationCode'] != null) {
              json['applicationCode'] = obj['applicationCode'];
            } else if (withDefaults) {
              json['applicationCode'] = '';
            }
            if (obj['data'] != null) {
              json['data'] = obj['data'];
            } else if (withDefaults) {
              json['data'] = '';
            }
            return json;
          }
        }
        static fromJSON(json, helper, withDefaults) {
          if (typeof json === 'object' && !Array.isArray(json)) {
            const result = new $root.wix.api.Error();
            if (json['httpCode'] != null) {
              result['httpCode'] = typeof json['httpCode'] === 'string' ? $root.wix.api.StatusCodes.HttpStatusCode[json['httpCode']] : json['httpCode'];
            } else if (withDefaults !== false) {
              result['httpCode'] = 0;
            } else {
              delete result['httpCode'];
            }
            if (json['applicationCode'] != null) {
              result['applicationCode'] = json['applicationCode'];
            } else if (withDefaults !== false) {
              result['applicationCode'] = '';
            } else {
              delete result['applicationCode'];
            }
            if (json['data'] != null) {
              result['data'] = json['data'];
            } else if (withDefaults !== false) {
              result['data'] = '';
            } else {
              delete result['data'];
            }
            return result;
          } else
            return json;
        }
        static toGRPC(obj, helper) {
          if (obj == null) {
            return null;
          } else {
            const grpc = {};
            if (obj['httpCode'] != null) {
              grpc['httpCode'] = obj['httpCode'];
            }
            if (obj['applicationCode'] != null) {
              grpc['applicationCode'] = obj['applicationCode'];
            }
            if (obj['data'] != null) {
              grpc['data'] = obj['data'];
            }
            return grpc;
          }
        }
        static fromGRPC(grpc, helper) {
          if (grpc == null) {
            return null;
          } else {
            const result = new $root.wix.api.Error();
            if (grpc['httpCode'] != null) {
              result['httpCode'] = grpc['httpCode'];
            } else {
              result['httpCode'] = 0;
            }
            if (grpc['applicationCode'] != null) {
              result['applicationCode'] = grpc['applicationCode'];
            } else {
              result['applicationCode'] = '';
            }
            if (grpc['data'] != null) {
              result['data'] = grpc['data'];
            } else {
              result['data'] = '';
            }
            return result;
          }
        }
      }
      __builtIn.Object.defineProperty(Error.prototype, '__proto', {
        value: pbjs => {
          return $root.__lookup(pbjs)('wix.api.Error');
        },
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(Error.prototype, '__fqn__', {
        value: 'wix.api.Error',
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(Error.prototype, '__options__', {
        value: $root.__options,
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(Error.prototype, '__root__', {
        value: $root,
        enumerable: false,
        configurable: false
      });
      return Error;
    }());;
    _api.CustomValidationError = (function () {
      class CustomValidationError {
        constructor(props) {
          this.ruleName = props && props.ruleName;
          this.data = props && props.data;
        }
        static toJSON(obj, helper, withDefaults) {
          if (obj == null) {
            return null;
          } else {
            const json = {};
            if (obj['ruleName'] != null) {
              json['ruleName'] = obj['ruleName'];
            } else if (withDefaults) {
              json['ruleName'] = '';
            }
            if (obj['data'] != null) {
              json['data'] = obj['data'];
            } else if (withDefaults) {
              json['data'] = '';
            }
            return json;
          }
        }
        static fromJSON(json, helper, withDefaults) {
          if (typeof json === 'object' && !Array.isArray(json)) {
            const result = new $root.wix.api.CustomValidationError();
            if (json['ruleName'] != null) {
              result['ruleName'] = json['ruleName'];
            } else if (withDefaults !== false) {
              result['ruleName'] = '';
            } else {
              delete result['ruleName'];
            }
            if (json['data'] != null) {
              result['data'] = json['data'];
            } else if (withDefaults !== false) {
              result['data'] = '';
            } else {
              delete result['data'];
            }
            return result;
          } else
            return json;
        }
        static toGRPC(obj, helper) {
          if (obj == null) {
            return null;
          } else {
            const grpc = {};
            if (obj['ruleName'] != null) {
              grpc['ruleName'] = obj['ruleName'];
            }
            if (obj['data'] != null) {
              grpc['data'] = obj['data'];
            }
            return grpc;
          }
        }
        static fromGRPC(grpc, helper) {
          if (grpc == null) {
            return null;
          } else {
            const result = new $root.wix.api.CustomValidationError();
            if (grpc['ruleName'] != null) {
              result['ruleName'] = grpc['ruleName'];
            } else {
              result['ruleName'] = '';
            }
            if (grpc['data'] != null) {
              result['data'] = grpc['data'];
            } else {
              result['data'] = '';
            }
            return result;
          }
        }
      }
      __builtIn.Object.defineProperty(CustomValidationError.prototype, '__proto', {
        value: pbjs => {
          return $root.__lookup(pbjs)('wix.api.CustomValidationError');
        },
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(CustomValidationError.prototype, '__fqn__', {
        value: 'wix.api.CustomValidationError',
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(CustomValidationError.prototype, '__options__', {
        value: $root.__options,
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(CustomValidationError.prototype, '__root__', {
        value: $root,
        enumerable: false,
        configurable: false
      });
      return CustomValidationError;
    }());;
    _api.InheritCrudErrors = (function () {
      class InheritCrudErrors {
        constructor(props) {
          this.method = props && props.method;
        }
        static toJSON(obj, helper, withDefaults) {
          if (obj == null) {
            return null;
          } else {
            const json = {};
            if (obj['method'] != null) {
              json['method'] = $root.wix.api.Crud.Method[obj['method']];
            } else if (withDefaults) {
              json['method'] = 0;
            }
            return json;
          }
        }
        static fromJSON(json, helper, withDefaults) {
          if (typeof json === 'object' && !Array.isArray(json)) {
            const result = new $root.wix.api.InheritCrudErrors();
            if (json['method'] != null) {
              result['method'] = typeof json['method'] === 'string' ? $root.wix.api.Crud.Method[json['method']] : json['method'];
            } else if (withDefaults !== false) {
              result['method'] = 0;
            } else {
              delete result['method'];
            }
            return result;
          } else
            return json;
        }
        static toGRPC(obj, helper) {
          if (obj == null) {
            return null;
          } else {
            const grpc = {};
            if (obj['method'] != null) {
              grpc['method'] = obj['method'];
            }
            return grpc;
          }
        }
        static fromGRPC(grpc, helper) {
          if (grpc == null) {
            return null;
          } else {
            const result = new $root.wix.api.InheritCrudErrors();
            if (grpc['method'] != null) {
              result['method'] = grpc['method'];
            } else {
              result['method'] = 0;
            }
            return result;
          }
        }
      }
      __builtIn.Object.defineProperty(InheritCrudErrors.prototype, '__proto', {
        value: pbjs => {
          return $root.__lookup(pbjs)('wix.api.InheritCrudErrors');
        },
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(InheritCrudErrors.prototype, '__fqn__', {
        value: 'wix.api.InheritCrudErrors',
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(InheritCrudErrors.prototype, '__options__', {
        value: $root.__options,
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(InheritCrudErrors.prototype, '__root__', {
        value: $root,
        enumerable: false,
        configurable: false
      });
      return InheritCrudErrors;
    }());;
    _api.StatusCodes = (function () {
      class StatusCodes {
        constructor(props) {
        }
        static toJSON(obj, helper, withDefaults) {
          if (obj == null) {
            return null;
          } else {
            const json = {};
            return json;
          }
        }
        static fromJSON(json, helper, withDefaults) {
          if (typeof json === 'object' && !Array.isArray(json)) {
            const result = new $root.wix.api.StatusCodes();
            return result;
          } else
            return json;
        }
        static toGRPC(obj, helper) {
          if (obj == null) {
            return null;
          } else {
            const grpc = {};
            return grpc;
          }
        }
        static fromGRPC(grpc, helper) {
          if (grpc == null) {
            return null;
          } else {
            const result = new $root.wix.api.StatusCodes();
            return result;
          }
        }
      }
      StatusCodes.HttpStatusCode = {
        'OK': 0,
        0: 'OK',
        'UNAUTHENTICATED': 1,
        1: 'UNAUTHENTICATED',
        'PERMISSION_DENIED': 2,
        2: 'PERMISSION_DENIED',
        'INVALID_ARGUMENT': 3,
        3: 'INVALID_ARGUMENT',
        'NOT_FOUND': 4,
        4: 'NOT_FOUND',
        'INTERNAL': 5,
        5: 'INTERNAL',
        'UNAVAILABLE': 6,
        6: 'UNAVAILABLE',
        'RESOURCE_EXHAUSTED': 7,
        7: 'RESOURCE_EXHAUSTED',
        'CANCELED': 8,
        8: 'CANCELED',
        'ALREADY_EXISTS': 9,
        9: 'ALREADY_EXISTS',
        'FAILED_PRECONDITION': 10,
        10: 'FAILED_PRECONDITION'
      };
      StatusCodes.HttpStatusCode = {
        'OK': 0,
        0: 'OK',
        'UNAUTHENTICATED': 1,
        1: 'UNAUTHENTICATED',
        'PERMISSION_DENIED': 2,
        2: 'PERMISSION_DENIED',
        'INVALID_ARGUMENT': 3,
        3: 'INVALID_ARGUMENT',
        'NOT_FOUND': 4,
        4: 'NOT_FOUND',
        'INTERNAL': 5,
        5: 'INTERNAL',
        'UNAVAILABLE': 6,
        6: 'UNAVAILABLE',
        'RESOURCE_EXHAUSTED': 7,
        7: 'RESOURCE_EXHAUSTED',
        'CANCELED': 8,
        8: 'CANCELED',
        'ALREADY_EXISTS': 9,
        9: 'ALREADY_EXISTS',
        'FAILED_PRECONDITION': 10,
        10: 'FAILED_PRECONDITION'
      };
      __builtIn.Object.defineProperty(StatusCodes.prototype, '__proto', {
        value: pbjs => {
          return $root.__lookup(pbjs)('wix.api.StatusCodes');
        },
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(StatusCodes.prototype, '__fqn__', {
        value: 'wix.api.StatusCodes',
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(StatusCodes.prototype, '__options__', {
        value: $root.__options,
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(StatusCodes.prototype, '__root__', {
        value: $root,
        enumerable: false,
        configurable: false
      });
      return StatusCodes;
    }());;
    _api.Callback = (function () {
      class Callback {
        constructor(props) {
          this.topic = props && props.topic;
          this.segment = props && props.segment;
          this.payload = props && props.payload;
          this.permission = props && props.permission;
          this.eventType = props && props.eventType;
          this.exposure = props && props.exposure;
          this.maturity = props && props.maturity;
        }
        static toJSON(obj, helper, withDefaults) {
          if (obj == null) {
            return null;
          } else {
            const json = {};
            if (obj['topic'] != null) {
              json['topic'] = obj['topic'];
            } else if (withDefaults) {
              json['topic'] = '';
            }
            if (obj['segment'] != null) {
              json['segment'] = $root.wix.api.Segment.Segment[obj['segment']];
            } else if (withDefaults) {
              json['segment'] = 0;
            }
            if (obj['payload'] != null) {
              json['payload'] = obj['payload'];
            } else if (withDefaults) {
              json['payload'] = '';
            }
            if (obj['permission'] != null) {
              json['permission'] = obj['permission'];
            } else if (withDefaults) {
              json['permission'] = '';
            }
            if (obj['eventType'] != null) {
              json['eventType'] = $root.wix.api.Callback.EventType[obj['eventType']];
            } else if (withDefaults) {
              json['eventType'] = 0;
            }
            if (obj['exposure'] != null) {
              json['exposure'] = $root.wix.api.Exposure[obj['exposure']];
            } else if (withDefaults) {
              json['exposure'] = 0;
            }
            if (obj['maturity'] != null) {
              json['maturity'] = $root.wix.api.Maturity[obj['maturity']];
            } else if (withDefaults) {
              json['maturity'] = 0;
            }
            return json;
          }
        }
        static fromJSON(json, helper, withDefaults) {
          if (typeof json === 'object' && !Array.isArray(json)) {
            const result = new $root.wix.api.Callback();
            if (json['topic'] != null) {
              result['topic'] = json['topic'];
            } else if (withDefaults !== false) {
              result['topic'] = '';
            } else {
              delete result['topic'];
            }
            if (json['segment'] != null) {
              result['segment'] = typeof json['segment'] === 'string' ? $root.wix.api.Segment.Segment[json['segment']] : json['segment'];
            } else if (withDefaults !== false) {
              result['segment'] = 0;
            } else {
              delete result['segment'];
            }
            if (json['payload'] != null) {
              result['payload'] = json['payload'];
            } else if (withDefaults !== false) {
              result['payload'] = '';
            } else {
              delete result['payload'];
            }
            if (json['permission'] != null) {
              result['permission'] = json['permission'];
            } else if (withDefaults !== false) {
              result['permission'] = '';
            } else {
              delete result['permission'];
            }
            if (json['eventType'] != null) {
              result['eventType'] = typeof json['eventType'] === 'string' ? $root.wix.api.Callback.EventType[json['eventType']] : json['eventType'];
            } else if (withDefaults !== false) {
              result['eventType'] = 0;
            } else {
              delete result['eventType'];
            }
            if (json['exposure'] != null) {
              result['exposure'] = typeof json['exposure'] === 'string' ? $root.wix.api.Exposure[json['exposure']] : json['exposure'];
            } else if (withDefaults !== false) {
              result['exposure'] = 0;
            } else {
              delete result['exposure'];
            }
            if (json['maturity'] != null) {
              result['maturity'] = typeof json['maturity'] === 'string' ? $root.wix.api.Maturity[json['maturity']] : json['maturity'];
            } else if (withDefaults !== false) {
              result['maturity'] = 0;
            } else {
              delete result['maturity'];
            }
            return result;
          } else
            return json;
        }
        static toGRPC(obj, helper) {
          if (obj == null) {
            return null;
          } else {
            const grpc = {};
            if (obj['topic'] != null) {
              grpc['topic'] = obj['topic'];
            }
            if (obj['segment'] != null) {
              grpc['segment'] = obj['segment'];
            }
            if (obj['payload'] != null) {
              grpc['payload'] = obj['payload'];
            }
            if (obj['permission'] != null) {
              grpc['permission'] = obj['permission'];
            }
            if (obj['eventType'] != null) {
              grpc['eventType'] = obj['eventType'];
            }
            if (obj['exposure'] != null) {
              grpc['exposure'] = obj['exposure'];
            }
            if (obj['maturity'] != null) {
              grpc['maturity'] = obj['maturity'];
            }
            return grpc;
          }
        }
        static fromGRPC(grpc, helper) {
          if (grpc == null) {
            return null;
          } else {
            const result = new $root.wix.api.Callback();
            if (grpc['topic'] != null) {
              result['topic'] = grpc['topic'];
            } else {
              result['topic'] = '';
            }
            if (grpc['segment'] != null) {
              result['segment'] = grpc['segment'];
            } else {
              result['segment'] = 0;
            }
            if (grpc['payload'] != null) {
              result['payload'] = grpc['payload'];
            } else {
              result['payload'] = '';
            }
            if (grpc['permission'] != null) {
              result['permission'] = grpc['permission'];
            } else {
              result['permission'] = '';
            }
            if (grpc['eventType'] != null) {
              result['eventType'] = grpc['eventType'];
            } else {
              result['eventType'] = 0;
            }
            if (grpc['exposure'] != null) {
              result['exposure'] = grpc['exposure'];
            } else {
              result['exposure'] = 0;
            }
            if (grpc['maturity'] != null) {
              result['maturity'] = grpc['maturity'];
            } else {
              result['maturity'] = 0;
            }
            return result;
          }
        }
      }
      Callback.EventType = {
        'UNKNOWN': 0,
        0: 'UNKNOWN',
        'CREATED': 1,
        1: 'CREATED',
        'UPDATED': 2,
        2: 'UPDATED',
        'DELETED': 3,
        3: 'DELETED',
        'ACTION': 4,
        4: 'ACTION'
      };
      Callback.EventType = {
        'UNKNOWN': 0,
        0: 'UNKNOWN',
        'CREATED': 1,
        1: 'CREATED',
        'UPDATED': 2,
        2: 'UPDATED',
        'DELETED': 3,
        3: 'DELETED',
        'ACTION': 4,
        4: 'ACTION'
      };
      __builtIn.Object.defineProperty(Callback.prototype, '__proto', {
        value: pbjs => {
          return $root.__lookup(pbjs)('wix.api.Callback');
        },
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(Callback.prototype, '__fqn__', {
        value: 'wix.api.Callback',
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(Callback.prototype, '__options__', {
        value: $root.__options,
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(Callback.prototype, '__root__', {
        value: $root,
        enumerable: false,
        configurable: false
      });
      return Callback;
    }());;
    _api.CallbackDeprecation = (function () {
      class CallbackDeprecation {
        constructor(props) {
          this.replacedBy = props && props.replacedBy;
          this.targetRemovalDate = props && props.targetRemovalDate;
          this.eventType = props && props.eventType;
          this.customSlug = props && props.customSlug;
          this.payload = props && props.payload;
        }
        static toJSON(obj, helper, withDefaults) {
          if (obj == null) {
            return null;
          } else {
            const json = {};
            if (obj['replacedBy'] != null) {
              json['replacedBy'] = obj['replacedBy'];
            } else if (withDefaults) {
              json['replacedBy'] = '';
            }
            if (obj['targetRemovalDate'] != null) {
              json['targetRemovalDate'] = obj['targetRemovalDate'];
            } else if (withDefaults) {
              json['targetRemovalDate'] = '';
            }
            if (obj['eventType'] != null) {
              json['eventType'] = $root.wix.api.Callback.EventType[obj['eventType']];
            } else if (withDefaults) {
              json['eventType'] = 0;
            }
            if (obj['customSlug'] != null) {
              json['customSlug'] = obj['customSlug'];
            } else if (withDefaults) {
              json['customSlug'] = '';
            }
            if (obj['payload'] != null) {
              json['payload'] = obj['payload'];
            } else if (withDefaults) {
              json['payload'] = '';
            }
            return json;
          }
        }
        static fromJSON(json, helper, withDefaults) {
          if (typeof json === 'object' && !Array.isArray(json)) {
            const result = new $root.wix.api.CallbackDeprecation();
            if (json['replacedBy'] != null) {
              result['replacedBy'] = json['replacedBy'];
            } else if (withDefaults !== false) {
              result['replacedBy'] = '';
            } else {
              delete result['replacedBy'];
            }
            if (json['targetRemovalDate'] != null) {
              result['targetRemovalDate'] = json['targetRemovalDate'];
            } else if (withDefaults !== false) {
              result['targetRemovalDate'] = '';
            } else {
              delete result['targetRemovalDate'];
            }
            if (json['eventType'] != null) {
              result['eventType'] = typeof json['eventType'] === 'string' ? $root.wix.api.Callback.EventType[json['eventType']] : json['eventType'];
            } else if (withDefaults !== false) {
              result['eventType'] = 0;
            } else {
              delete result['eventType'];
            }
            if (json['customSlug'] != null) {
              result['customSlug'] = json['customSlug'];
            } else if (withDefaults !== false) {
              result['customSlug'] = '';
            } else {
              delete result['customSlug'];
            }
            if (json['payload'] != null) {
              result['payload'] = json['payload'];
            } else if (withDefaults !== false) {
              result['payload'] = '';
            } else {
              delete result['payload'];
            }
            return result;
          } else
            return json;
        }
        static toGRPC(obj, helper) {
          if (obj == null) {
            return null;
          } else {
            const grpc = {};
            if (obj['replacedBy'] != null) {
              grpc['replacedBy'] = obj['replacedBy'];
            }
            if (obj['targetRemovalDate'] != null) {
              grpc['targetRemovalDate'] = obj['targetRemovalDate'];
            }
            if (obj['eventType'] != null) {
              grpc['eventType'] = obj['eventType'];
            }
            if (obj['customSlug'] != null) {
              grpc['customSlug'] = obj['customSlug'];
            }
            if (obj['payload'] != null) {
              grpc['payload'] = obj['payload'];
            }
            return grpc;
          }
        }
        static fromGRPC(grpc, helper) {
          if (grpc == null) {
            return null;
          } else {
            const result = new $root.wix.api.CallbackDeprecation();
            if (grpc['replacedBy'] != null) {
              result['replacedBy'] = grpc['replacedBy'];
            } else {
              result['replacedBy'] = '';
            }
            if (grpc['targetRemovalDate'] != null) {
              result['targetRemovalDate'] = grpc['targetRemovalDate'];
            } else {
              result['targetRemovalDate'] = '';
            }
            if (grpc['eventType'] != null) {
              result['eventType'] = grpc['eventType'];
            } else {
              result['eventType'] = 0;
            }
            if (grpc['customSlug'] != null) {
              result['customSlug'] = grpc['customSlug'];
            } else {
              result['customSlug'] = '';
            }
            if (grpc['payload'] != null) {
              result['payload'] = grpc['payload'];
            } else {
              result['payload'] = '';
            }
            return result;
          }
        }
      }
      __builtIn.Object.defineProperty(CallbackDeprecation.prototype, '__proto', {
        value: pbjs => {
          return $root.__lookup(pbjs)('wix.api.CallbackDeprecation');
        },
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(CallbackDeprecation.prototype, '__fqn__', {
        value: 'wix.api.CallbackDeprecation',
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(CallbackDeprecation.prototype, '__options__', {
        value: $root.__options,
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(CallbackDeprecation.prototype, '__root__', {
        value: $root,
        enumerable: false,
        configurable: false
      });
      return CallbackDeprecation;
    }());;
    _api.Segment = (function () {
      class Segment {
        constructor(props) {
        }
        static toJSON(obj, helper, withDefaults) {
          if (obj == null) {
            return null;
          } else {
            const json = {};
            return json;
          }
        }
        static fromJSON(json, helper, withDefaults) {
          if (typeof json === 'object' && !Array.isArray(json)) {
            const result = new $root.wix.api.Segment();
            return result;
          } else
            return json;
        }
        static toGRPC(obj, helper) {
          if (obj == null) {
            return null;
          } else {
            const grpc = {};
            return grpc;
          }
        }
        static fromGRPC(grpc, helper) {
          if (grpc == null) {
            return null;
          } else {
            const result = new $root.wix.api.Segment();
            return result;
          }
        }
      }
      Segment.Segment = {
        'UNSPECIFIED': 0,
        0: 'UNSPECIFIED',
        'USERS': 1,
        1: 'USERS',
        'PUBLIC': 2,
        2: 'PUBLIC',
        'OTHERS': 3,
        3: 'OTHERS'
      };
      Segment.Segment = {
        'UNSPECIFIED': 0,
        0: 'UNSPECIFIED',
        'USERS': 1,
        1: 'USERS',
        'PUBLIC': 2,
        2: 'PUBLIC',
        'OTHERS': 3,
        3: 'OTHERS'
      };
      __builtIn.Object.defineProperty(Segment.prototype, '__proto', {
        value: pbjs => {
          return $root.__lookup(pbjs)('wix.api.Segment');
        },
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(Segment.prototype, '__fqn__', {
        value: 'wix.api.Segment',
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(Segment.prototype, '__options__', {
        value: $root.__options,
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(Segment.prototype, '__root__', {
        value: $root,
        enumerable: false,
        configurable: false
      });
      return Segment;
    }());;
    _api.RequestContext = (function () {
      class RequestContext {
        constructor(props) {
          this.aspects = props && props.aspects;
        }
        static toJSON(obj, helper, withDefaults) {
          if (obj == null) {
            return null;
          } else {
            const json = {};
            if (obj['aspects'] != null) {
              json['aspects'] = Object.entries(obj['aspects']).reduce((acc, [k, v]) => {
                acc[k] = v;
                return acc;
              }, {});
            } else if (withDefaults) {
              delete json['aspects'];
            }
            return json;
          }
        }
        static fromJSON(json, helper, withDefaults) {
          if (typeof json === 'object' && !Array.isArray(json)) {
            const result = new $root.wix.api.RequestContext();
            if (json['aspects'] != null) {
              result['aspects'] = Object.entries(json['aspects']).reduce((acc, [k, v]) => {
                acc[k] = v;
                return acc;
              }, {});
            } else if (withDefaults !== false) {
              delete result['aspects'];
            } else {
              delete result['aspects'];
            }
            return result;
          } else
            return json;
        }
        static toGRPC(obj, helper) {
          if (obj == null) {
            return null;
          } else {
            const grpc = {};
            if (obj['aspects'] != null) {
              grpc['aspects'] = Object.entries(obj['aspects']).reduce((acc, [k, v]) => {
                acc[k] = v;
                return acc;
              }, {});
            }
            return grpc;
          }
        }
        static fromGRPC(grpc, helper) {
          if (grpc == null) {
            return null;
          } else {
            const result = new $root.wix.api.RequestContext();
            if (grpc['aspects'] != null) {
              result['aspects'] = Object.entries(grpc['aspects']).reduce((acc, [k, v]) => {
                acc[k] = v;
                return acc;
              }, {});
            } else {
              delete result['aspects'];
            }
            return result;
          }
        }
      }
      __builtIn.Object.defineProperty(RequestContext.prototype, '__proto', {
        value: pbjs => {
          return $root.__lookup(pbjs)('wix.api.RequestContext');
        },
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(RequestContext.prototype, '__fqn__', {
        value: 'wix.api.RequestContext',
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(RequestContext.prototype, '__options__', {
        value: $root.__options,
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(RequestContext.prototype, '__root__', {
        value: $root,
        enumerable: false,
        configurable: false
      });
      return RequestContext;
    }());;
    _api.ResponseContext = (function () {
      class ResponseContext {
        constructor(props) {
          this.aspects = props && props.aspects;
        }
        static toJSON(obj, helper, withDefaults) {
          if (obj == null) {
            return null;
          } else {
            const json = {};
            if (obj['aspects'] != null) {
              json['aspects'] = obj['aspects'].map(e => {
                return $root.wix.api.ResponseContextEntry.toJSON(e, helper, withDefaults);
              });
            } else if (withDefaults) {
              json['aspects'] = [];
            }
            return json;
          }
        }
        static fromJSON(json, helper, withDefaults) {
          if (typeof json === 'object' && !Array.isArray(json)) {
            const result = new $root.wix.api.ResponseContext();
            if (json['aspects'] != null) {
              result['aspects'] = Array.isArray(json['aspects']) ? json['aspects'].map(e => {
                return $root.wix.api.ResponseContextEntry.fromJSON(e, helper);
              }) : json['aspects'];
            } else if (withDefaults !== false) {
              result['aspects'] = [];
            } else {
              delete result['aspects'];
            }
            return result;
          } else
            return json;
        }
        static toGRPC(obj, helper) {
          if (obj == null) {
            return null;
          } else {
            const grpc = {};
            if (obj['aspects'] != null) {
              grpc['aspects'] = obj['aspects'].map(e => {
                return $root.wix.api.ResponseContextEntry.toGRPC(e, helper);
              });
            }
            return grpc;
          }
        }
        static fromGRPC(grpc, helper) {
          if (grpc == null) {
            return null;
          } else {
            const result = new $root.wix.api.ResponseContext();
            if (grpc['aspects'] != null) {
              result['aspects'] = grpc['aspects'].map(e => {
                return $root.wix.api.ResponseContextEntry.fromGRPC(e, helper);
              });
            } else {
              result['aspects'] = [];
            }
            return result;
          }
        }
      }
      __builtIn.Object.defineProperty(ResponseContext.prototype, '__proto', {
        value: pbjs => {
          return $root.__lookup(pbjs)('wix.api.ResponseContext');
        },
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(ResponseContext.prototype, '__fqn__', {
        value: 'wix.api.ResponseContext',
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(ResponseContext.prototype, '__options__', {
        value: $root.__options,
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(ResponseContext.prototype, '__root__', {
        value: $root,
        enumerable: false,
        configurable: false
      });
      return ResponseContext;
    }());;
    _api.ResponseContextEntry = (function () {
      class ResponseContextEntry {
        constructor(props) {
          this.aspectEntry = props && props.aspectEntry;
        }
        static toJSON(obj, helper, withDefaults) {
          if (obj == null) {
            return null;
          } else {
            const json = {};
            if (obj['aspectEntry'] != null) {
              json['aspectEntry'] = Object.entries(obj['aspectEntry']).reduce((acc, [k, v]) => {
                acc[k] = v;
                return acc;
              }, {});
            } else if (withDefaults) {
              delete json['aspectEntry'];
            }
            return json;
          }
        }
        static fromJSON(json, helper, withDefaults) {
          if (typeof json === 'object' && !Array.isArray(json)) {
            const result = new $root.wix.api.ResponseContextEntry();
            if (json['aspectEntry'] != null) {
              result['aspectEntry'] = Object.entries(json['aspectEntry']).reduce((acc, [k, v]) => {
                acc[k] = v;
                return acc;
              }, {});
            } else if (withDefaults !== false) {
              delete result['aspectEntry'];
            } else {
              delete result['aspectEntry'];
            }
            return result;
          } else
            return json;
        }
        static toGRPC(obj, helper) {
          if (obj == null) {
            return null;
          } else {
            const grpc = {};
            if (obj['aspectEntry'] != null) {
              grpc['aspectEntry'] = Object.entries(obj['aspectEntry']).reduce((acc, [k, v]) => {
                acc[k] = v;
                return acc;
              }, {});
            }
            return grpc;
          }
        }
        static fromGRPC(grpc, helper) {
          if (grpc == null) {
            return null;
          } else {
            const result = new $root.wix.api.ResponseContextEntry();
            if (grpc['aspectEntry'] != null) {
              result['aspectEntry'] = Object.entries(grpc['aspectEntry']).reduce((acc, [k, v]) => {
                acc[k] = v;
                return acc;
              }, {});
            } else {
              delete result['aspectEntry'];
            }
            return result;
          }
        }
      }
      __builtIn.Object.defineProperty(ResponseContextEntry.prototype, '__proto', {
        value: pbjs => {
          return $root.__lookup(pbjs)('wix.api.ResponseContextEntry');
        },
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(ResponseContextEntry.prototype, '__fqn__', {
        value: 'wix.api.ResponseContextEntry',
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(ResponseContextEntry.prototype, '__options__', {
        value: $root.__options,
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(ResponseContextEntry.prototype, '__root__', {
        value: $root,
        enumerable: false,
        configurable: false
      });
      return ResponseContextEntry;
    }());;
    _api.ServiceEntity = (function () {
      class ServiceEntity {
        constructor(props) {
          this.message = props && props.message;
          this.namespace = props && props.namespace;
        }
        static toJSON(obj, helper, withDefaults) {
          if (obj == null) {
            return null;
          } else {
            const json = {};
            if (obj['message'] != null) {
              json['message'] = obj['message'];
            } else if (withDefaults) {
              json['message'] = '';
            }
            if (obj['namespace'] != null) {
              json['namespace'] = obj['namespace'];
            } else if (withDefaults) {
              json['namespace'] = '';
            }
            return json;
          }
        }
        static fromJSON(json, helper, withDefaults) {
          if (typeof json === 'object' && !Array.isArray(json)) {
            const result = new $root.wix.api.ServiceEntity();
            if (json['message'] != null) {
              result['message'] = json['message'];
            } else if (withDefaults !== false) {
              result['message'] = '';
            } else {
              delete result['message'];
            }
            if (json['namespace'] != null) {
              result['namespace'] = json['namespace'];
            } else if (withDefaults !== false) {
              result['namespace'] = '';
            } else {
              delete result['namespace'];
            }
            return result;
          } else
            return json;
        }
        static toGRPC(obj, helper) {
          if (obj == null) {
            return null;
          } else {
            const grpc = {};
            if (obj['message'] != null) {
              grpc['message'] = obj['message'];
            }
            if (obj['namespace'] != null) {
              grpc['namespace'] = obj['namespace'];
            }
            return grpc;
          }
        }
        static fromGRPC(grpc, helper) {
          if (grpc == null) {
            return null;
          } else {
            const result = new $root.wix.api.ServiceEntity();
            if (grpc['message'] != null) {
              result['message'] = grpc['message'];
            } else {
              result['message'] = '';
            }
            if (grpc['namespace'] != null) {
              result['namespace'] = grpc['namespace'];
            } else {
              result['namespace'] = '';
            }
            return result;
          }
        }
      }
      __builtIn.Object.defineProperty(ServiceEntity.prototype, '__proto', {
        value: pbjs => {
          return $root.__lookup(pbjs)('wix.api.ServiceEntity');
        },
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(ServiceEntity.prototype, '__fqn__', {
        value: 'wix.api.ServiceEntity',
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(ServiceEntity.prototype, '__options__', {
        value: $root.__options,
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(ServiceEntity.prototype, '__root__', {
        value: $root,
        enumerable: false,
        configurable: false
      });
      return ServiceEntity;
    }());;
    _api.Entity = (function () {
      class Entity {
        constructor(props) {
          this.fqdn = props && props.fqdn;
          this.exposure = props && props.exposure;
          this.appendixFiles = props && props.appendixFiles;
          this.oldFqdnForBackwardsCompatibility = props && props.oldFqdnForBackwardsCompatibility;
          this.segment = props && props.segment;
          this.implements = props && props.implements;
          this.extensible = props && props.extensible;
          this.trashbin = props && props.trashbin;
          this.plural = props && props.plural;
          this.domainEventsReadPermission = props && props.domainEventsReadPermission;
          this.appDefId = props && props.appDefId;
        }
        static toJSON(obj, helper, withDefaults) {
          if (obj == null) {
            return null;
          } else {
            const json = {};
            if (obj['fqdn'] != null) {
              json['fqdn'] = obj['fqdn'];
            } else if (withDefaults) {
              json['fqdn'] = '';
            }
            if (obj['exposure'] != null) {
              json['exposure'] = $root.wix.api.Exposure[obj['exposure']];
            } else if (withDefaults) {
              json['exposure'] = 0;
            }
            if (obj['appendixFiles'] != null) {
              json['appendixFiles'] = obj['appendixFiles'].map(e => {
                return $root.wix.api.MessageAppendix.toJSON(e, helper, withDefaults);
              });
            } else if (withDefaults) {
              json['appendixFiles'] = [];
            }
            if (obj['oldFqdnForBackwardsCompatibility'] != null) {
              json['oldFqdnForBackwardsCompatibility'] = obj['oldFqdnForBackwardsCompatibility'];
            } else if (withDefaults) {
              json['oldFqdnForBackwardsCompatibility'] = '';
            }
            if (obj['segment'] != null) {
              json['segment'] = $root.wix.api.Segment.Segment[obj['segment']];
            } else if (withDefaults) {
              json['segment'] = 0;
            }
            if (obj['implements'] != null) {
              json['implements'] = obj['implements'].map(e => {
                return e;
              });
            } else if (withDefaults) {
              json['implements'] = [];
            }
            if (obj['extensible'] != null) {
              json['extensible'] = $root.wix.api.Extensible.toJSON(obj['extensible'], helper, withDefaults);
            } else if (withDefaults) {
              delete json['extensible'];
            }
            if (obj['trashbin'] != null) {
              json['trashbin'] = obj['trashbin'];
            } else if (withDefaults) {
              json['trashbin'] = false;
            }
            if (obj['plural'] != null) {
              json['plural'] = obj['plural'];
            } else if (withDefaults) {
              json['plural'] = '';
            }
            if (obj['domainEventsReadPermission'] != null) {
              json['domainEventsReadPermission'] = obj['domainEventsReadPermission'];
            } else if (withDefaults) {
              json['domainEventsReadPermission'] = '';
            }
            if (obj['appDefId'] != null) {
              json['appDefId'] = obj['appDefId'];
            } else if (withDefaults) {
              json['appDefId'] = '';
            }
            return json;
          }
        }
        static fromJSON(json, helper, withDefaults) {
          if (typeof json === 'object' && !Array.isArray(json)) {
            const result = new $root.wix.api.Entity();
            if (json['fqdn'] != null) {
              result['fqdn'] = json['fqdn'];
            } else if (withDefaults !== false) {
              result['fqdn'] = '';
            } else {
              delete result['fqdn'];
            }
            if (json['exposure'] != null) {
              result['exposure'] = typeof json['exposure'] === 'string' ? $root.wix.api.Exposure[json['exposure']] : json['exposure'];
            } else if (withDefaults !== false) {
              result['exposure'] = 0;
            } else {
              delete result['exposure'];
            }
            if (json['appendixFiles'] != null) {
              result['appendixFiles'] = Array.isArray(json['appendixFiles']) ? json['appendixFiles'].map(e => {
                return $root.wix.api.MessageAppendix.fromJSON(e, helper);
              }) : json['appendixFiles'];
            } else if (withDefaults !== false) {
              result['appendixFiles'] = [];
            } else {
              delete result['appendixFiles'];
            }
            if (json['oldFqdnForBackwardsCompatibility'] != null) {
              result['oldFqdnForBackwardsCompatibility'] = json['oldFqdnForBackwardsCompatibility'];
            } else if (withDefaults !== false) {
              result['oldFqdnForBackwardsCompatibility'] = '';
            } else {
              delete result['oldFqdnForBackwardsCompatibility'];
            }
            if (json['segment'] != null) {
              result['segment'] = typeof json['segment'] === 'string' ? $root.wix.api.Segment.Segment[json['segment']] : json['segment'];
            } else if (withDefaults !== false) {
              result['segment'] = 0;
            } else {
              delete result['segment'];
            }
            if (json['implements'] != null) {
              result['implements'] = Array.isArray(json['implements']) ? json['implements'].map(e => {
                return e;
              }) : json['implements'];
            } else if (withDefaults !== false) {
              result['implements'] = [];
            } else {
              delete result['implements'];
            }
            if (json['extensible'] != null) {
              result['extensible'] = $root.wix.api.Extensible.fromJSON(json['extensible'], helper);
            } else if (withDefaults !== false) {
              delete result['extensible'];
            } else {
              delete result['extensible'];
            }
            if (json['trashbin'] != null) {
              result['trashbin'] = json['trashbin'];
            } else if (withDefaults !== false) {
              result['trashbin'] = false;
            } else {
              delete result['trashbin'];
            }
            if (json['plural'] != null) {
              result['plural'] = json['plural'];
            } else if (withDefaults !== false) {
              result['plural'] = '';
            } else {
              delete result['plural'];
            }
            if (json['domainEventsReadPermission'] != null) {
              result['domainEventsReadPermission'] = json['domainEventsReadPermission'];
            } else if (withDefaults !== false) {
              result['domainEventsReadPermission'] = '';
            } else {
              delete result['domainEventsReadPermission'];
            }
            if (json['appDefId'] != null) {
              result['appDefId'] = json['appDefId'];
            } else if (withDefaults !== false) {
              result['appDefId'] = '';
            } else {
              delete result['appDefId'];
            }
            return result;
          } else
            return json;
        }
        static toGRPC(obj, helper) {
          if (obj == null) {
            return null;
          } else {
            const grpc = {};
            if (obj['fqdn'] != null) {
              grpc['fqdn'] = obj['fqdn'];
            }
            if (obj['exposure'] != null) {
              grpc['exposure'] = obj['exposure'];
            }
            if (obj['appendixFiles'] != null) {
              grpc['appendixFiles'] = obj['appendixFiles'].map(e => {
                return $root.wix.api.MessageAppendix.toGRPC(e, helper);
              });
            }
            if (obj['oldFqdnForBackwardsCompatibility'] != null) {
              grpc['oldFqdnForBackwardsCompatibility'] = obj['oldFqdnForBackwardsCompatibility'];
            }
            if (obj['segment'] != null) {
              grpc['segment'] = obj['segment'];
            }
            if (obj['implements'] != null) {
              grpc['implements'] = obj['implements'].map(e => {
                return e;
              });
            }
            if (obj['extensible'] != null) {
              grpc['extensible'] = $root.wix.api.Extensible.toGRPC(obj['extensible'], helper);
            }
            if (obj['trashbin'] != null) {
              grpc['trashbin'] = obj['trashbin'];
            }
            if (obj['plural'] != null) {
              grpc['plural'] = obj['plural'];
            }
            if (obj['domainEventsReadPermission'] != null) {
              grpc['domainEventsReadPermission'] = obj['domainEventsReadPermission'];
            }
            if (obj['appDefId'] != null) {
              grpc['appDefId'] = obj['appDefId'];
            }
            return grpc;
          }
        }
        static fromGRPC(grpc, helper) {
          if (grpc == null) {
            return null;
          } else {
            const result = new $root.wix.api.Entity();
            if (grpc['fqdn'] != null) {
              result['fqdn'] = grpc['fqdn'];
            } else {
              result['fqdn'] = '';
            }
            if (grpc['exposure'] != null) {
              result['exposure'] = grpc['exposure'];
            } else {
              result['exposure'] = 0;
            }
            if (grpc['appendixFiles'] != null) {
              result['appendixFiles'] = grpc['appendixFiles'].map(e => {
                return $root.wix.api.MessageAppendix.fromGRPC(e, helper);
              });
            } else {
              result['appendixFiles'] = [];
            }
            if (grpc['oldFqdnForBackwardsCompatibility'] != null) {
              result['oldFqdnForBackwardsCompatibility'] = grpc['oldFqdnForBackwardsCompatibility'];
            } else {
              result['oldFqdnForBackwardsCompatibility'] = '';
            }
            if (grpc['segment'] != null) {
              result['segment'] = grpc['segment'];
            } else {
              result['segment'] = 0;
            }
            if (grpc['implements'] != null) {
              result['implements'] = grpc['implements'].map(e => {
                return e;
              });
            } else {
              result['implements'] = [];
            }
            if (grpc['extensible'] != null) {
              result['extensible'] = $root.wix.api.Extensible.fromGRPC(grpc['extensible'], helper);
            } else {
              delete result['extensible'];
            }
            if (grpc['trashbin'] != null) {
              result['trashbin'] = grpc['trashbin'];
            } else {
              result['trashbin'] = false;
            }
            if (grpc['plural'] != null) {
              result['plural'] = grpc['plural'];
            } else {
              result['plural'] = '';
            }
            if (grpc['domainEventsReadPermission'] != null) {
              result['domainEventsReadPermission'] = grpc['domainEventsReadPermission'];
            } else {
              result['domainEventsReadPermission'] = '';
            }
            if (grpc['appDefId'] != null) {
              result['appDefId'] = grpc['appDefId'];
            } else {
              result['appDefId'] = '';
            }
            return result;
          }
        }
      }
      __builtIn.Object.defineProperty(Entity.prototype, '__proto', {
        value: pbjs => {
          return $root.__lookup(pbjs)('wix.api.Entity');
        },
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(Entity.prototype, '__fqn__', {
        value: 'wix.api.Entity',
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(Entity.prototype, '__options__', {
        value: $root.__options,
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(Entity.prototype, '__root__', {
        value: $root,
        enumerable: false,
        configurable: false
      });
      return Entity;
    }());;
    _api.Extensible = (function () {
      class Extensible {
        constructor(props) {
          this.nestedExtensionFieldPath = props && props.nestedExtensionFieldPath;
        }
        static toJSON(obj, helper, withDefaults) {
          if (obj == null) {
            return null;
          } else {
            const json = {};
            if (obj['nestedExtensionFieldPath'] != null) {
              json['nestedExtensionFieldPath'] = obj['nestedExtensionFieldPath'];
            } else if (withDefaults) {
              json['nestedExtensionFieldPath'] = '';
            }
            return json;
          }
        }
        static fromJSON(json, helper, withDefaults) {
          if (typeof json === 'object' && !Array.isArray(json)) {
            const result = new $root.wix.api.Extensible();
            if (json['nestedExtensionFieldPath'] != null) {
              result['nestedExtensionFieldPath'] = json['nestedExtensionFieldPath'];
            } else if (withDefaults !== false) {
              result['nestedExtensionFieldPath'] = '';
            } else {
              delete result['nestedExtensionFieldPath'];
            }
            return result;
          } else
            return json;
        }
        static toGRPC(obj, helper) {
          if (obj == null) {
            return null;
          } else {
            const grpc = {};
            if (obj['nestedExtensionFieldPath'] != null) {
              grpc['nestedExtensionFieldPath'] = obj['nestedExtensionFieldPath'];
            }
            return grpc;
          }
        }
        static fromGRPC(grpc, helper) {
          if (grpc == null) {
            return null;
          } else {
            const result = new $root.wix.api.Extensible();
            if (grpc['nestedExtensionFieldPath'] != null) {
              result['nestedExtensionFieldPath'] = grpc['nestedExtensionFieldPath'];
            } else {
              result['nestedExtensionFieldPath'] = '';
            }
            return result;
          }
        }
      }
      __builtIn.Object.defineProperty(Extensible.prototype, '__proto', {
        value: pbjs => {
          return $root.__lookup(pbjs)('wix.api.Extensible');
        },
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(Extensible.prototype, '__fqn__', {
        value: 'wix.api.Extensible',
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(Extensible.prototype, '__options__', {
        value: $root.__options,
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(Extensible.prototype, '__root__', {
        value: $root,
        enumerable: false,
        configurable: false
      });
      return Extensible;
    }());;
    _api.MessageAppendix = (function () {
      class MessageAppendix {
        constructor(props) {
          this.type = props && props.type;
          this.path = props && props.path;
        }
        static toJSON(obj, helper, withDefaults) {
          if (obj == null) {
            return null;
          } else {
            const json = {};
            if (obj['type'] != null) {
              json['type'] = $root.wix.api.MessageAppendix.Type[obj['type']];
            } else if (withDefaults) {
              json['type'] = 0;
            }
            if (obj['path'] != null) {
              json['path'] = obj['path'];
            } else if (withDefaults) {
              json['path'] = '';
            }
            return json;
          }
        }
        static fromJSON(json, helper, withDefaults) {
          if (typeof json === 'object' && !Array.isArray(json)) {
            const result = new $root.wix.api.MessageAppendix();
            if (json['type'] != null) {
              result['type'] = typeof json['type'] === 'string' ? $root.wix.api.MessageAppendix.Type[json['type']] : json['type'];
            } else if (withDefaults !== false) {
              result['type'] = 0;
            } else {
              delete result['type'];
            }
            if (json['path'] != null) {
              result['path'] = json['path'];
            } else if (withDefaults !== false) {
              result['path'] = '';
            } else {
              delete result['path'];
            }
            return result;
          } else
            return json;
        }
        static toGRPC(obj, helper) {
          if (obj == null) {
            return null;
          } else {
            const grpc = {};
            if (obj['type'] != null) {
              grpc['type'] = obj['type'];
            }
            if (obj['path'] != null) {
              grpc['path'] = obj['path'];
            }
            return grpc;
          }
        }
        static fromGRPC(grpc, helper) {
          if (grpc == null) {
            return null;
          } else {
            const result = new $root.wix.api.MessageAppendix();
            if (grpc['type'] != null) {
              result['type'] = grpc['type'];
            } else {
              result['type'] = 0;
            }
            if (grpc['path'] != null) {
              result['path'] = grpc['path'];
            } else {
              result['path'] = '';
            }
            return result;
          }
        }
      }
      MessageAppendix.Type = {
        'UNKNOWN_APPENDIX_TYPE': 0,
        0: 'UNKNOWN_APPENDIX_TYPE',
        'AUTO_VELO': 1,
        1: 'AUTO_VELO',
        'DOCS_CONF': 2,
        2: 'DOCS_CONF',
        'MULTILINGUAL': 3,
        3: 'MULTILINGUAL'
      };
      MessageAppendix.Type = {
        'UNKNOWN_APPENDIX_TYPE': 0,
        0: 'UNKNOWN_APPENDIX_TYPE',
        'AUTO_VELO': 1,
        1: 'AUTO_VELO',
        'DOCS_CONF': 2,
        2: 'DOCS_CONF',
        'MULTILINGUAL': 3,
        3: 'MULTILINGUAL'
      };
      __builtIn.Object.defineProperty(MessageAppendix.prototype, '__proto', {
        value: pbjs => {
          return $root.__lookup(pbjs)('wix.api.MessageAppendix');
        },
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(MessageAppendix.prototype, '__fqn__', {
        value: 'wix.api.MessageAppendix',
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(MessageAppendix.prototype, '__options__', {
        value: $root.__options,
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(MessageAppendix.prototype, '__root__', {
        value: $root,
        enumerable: false,
        configurable: false
      });
      return MessageAppendix;
    }());;
    _api.Details = (function () {
      class Details {
        constructor(props) {
          this.applicationError = props && props.applicationError;
          this.validationError = props && props.validationError;
          this.tracing = props && props.tracing;
        }
        static toJSON(obj, helper, withDefaults) {
          if (obj == null) {
            return null;
          } else {
            const json = {};
            if (obj['applicationError'] != null) {
              json['applicationError'] = $root.wix.api.ApplicationError.toJSON(obj['applicationError'], helper, withDefaults);
            } else if (withDefaults) {
              delete json['applicationError'];
            }
            if (obj['validationError'] != null) {
              json['validationError'] = $root.wix.api.ValidationError.toJSON(obj['validationError'], helper, withDefaults);
            } else if (withDefaults) {
              delete json['validationError'];
            }
            if (obj['tracing'] != null) {
              json['tracing'] = Object.entries(obj['tracing']).reduce((acc, [k, v]) => {
                acc[k] = v;
                return acc;
              }, {});
            } else if (withDefaults) {
              delete json['tracing'];
            }
            return json;
          }
        }
        static fromJSON(json, helper, withDefaults) {
          if (typeof json === 'object' && !Array.isArray(json)) {
            const result = new $root.wix.api.Details();
            if (json['applicationError'] != null) {
              result['applicationError'] = $root.wix.api.ApplicationError.fromJSON(json['applicationError'], helper);
            } else if (withDefaults !== false) {
              delete result['applicationError'];
            } else {
              delete result['applicationError'];
            }
            if (json['validationError'] != null) {
              result['validationError'] = $root.wix.api.ValidationError.fromJSON(json['validationError'], helper);
            } else if (withDefaults !== false) {
              delete result['validationError'];
            } else {
              delete result['validationError'];
            }
            if (json['tracing'] != null) {
              result['tracing'] = Object.entries(json['tracing']).reduce((acc, [k, v]) => {
                acc[k] = v;
                return acc;
              }, {});
            } else if (withDefaults !== false) {
              delete result['tracing'];
            } else {
              delete result['tracing'];
            }
            return result;
          } else
            return json;
        }
        static toGRPC(obj, helper) {
          if (obj == null) {
            return null;
          } else {
            const grpc = {};
            if (obj['applicationError'] != null) {
              grpc['applicationError'] = $root.wix.api.ApplicationError.toGRPC(obj['applicationError'], helper);
            }
            if (obj['validationError'] != null) {
              grpc['validationError'] = $root.wix.api.ValidationError.toGRPC(obj['validationError'], helper);
            }
            if (obj['tracing'] != null) {
              grpc['tracing'] = Object.entries(obj['tracing']).reduce((acc, [k, v]) => {
                acc[k] = v;
                return acc;
              }, {});
            }
            return grpc;
          }
        }
        static fromGRPC(grpc, helper) {
          if (grpc == null) {
            return null;
          } else {
            const result = new $root.wix.api.Details();
            if (grpc['applicationError'] != null) {
              result['applicationError'] = $root.wix.api.ApplicationError.fromGRPC(grpc['applicationError'], helper);
            } else {
              delete result['applicationError'];
            }
            if (grpc['validationError'] != null) {
              result['validationError'] = $root.wix.api.ValidationError.fromGRPC(grpc['validationError'], helper);
            } else {
              delete result['validationError'];
            }
            if (grpc['tracing'] != null) {
              result['tracing'] = Object.entries(grpc['tracing']).reduce((acc, [k, v]) => {
                acc[k] = v;
                return acc;
              }, {});
            } else {
              delete result['tracing'];
            }
            return result;
          }
        }
      }
      __builtIn.Object.defineProperty(Details.prototype, '__proto', {
        value: pbjs => {
          return $root.__lookup(pbjs)('wix.api.Details');
        },
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(Details.prototype, '__fqn__', {
        value: 'wix.api.Details',
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(Details.prototype, '__options__', {
        value: $root.__options,
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(Details.prototype, '__root__', {
        value: $root,
        enumerable: false,
        configurable: false
      });
      return Details;
    }());;
    _api.ApplicationError = (function () {
      class ApplicationError {
        constructor(props) {
          this.code = props && props.code;
          this.description = props && props.description;
          this.data = props && props.data;
        }
        static toJSON(obj, helper, withDefaults) {
          if (obj == null) {
            return null;
          } else {
            const json = {};
            if (obj['code'] != null) {
              json['code'] = obj['code'];
            } else if (withDefaults) {
              json['code'] = '';
            }
            if (obj['description'] != null) {
              json['description'] = obj['description'];
            } else if (withDefaults) {
              json['description'] = '';
            }
            if (obj['data'] != null) {
              json['data'] = $root.google.protobuf.Struct.toJSON(obj['data'], helper, withDefaults);
            } else if (withDefaults) {
              delete json['data'];
            }
            return json;
          }
        }
        static fromJSON(json, helper, withDefaults) {
          if (typeof json === 'object' && !Array.isArray(json)) {
            const result = new $root.wix.api.ApplicationError();
            if (json['code'] != null) {
              result['code'] = json['code'];
            } else if (withDefaults !== false) {
              result['code'] = '';
            } else {
              delete result['code'];
            }
            if (json['description'] != null) {
              result['description'] = json['description'];
            } else if (withDefaults !== false) {
              result['description'] = '';
            } else {
              delete result['description'];
            }
            if (json['data'] != null) {
              result['data'] = $root.google.protobuf.Struct.fromJSON(json['data'], helper);
            } else if (withDefaults !== false) {
              delete result['data'];
            } else {
              delete result['data'];
            }
            return result;
          } else
            return json;
        }
        static toGRPC(obj, helper) {
          if (obj == null) {
            return null;
          } else {
            const grpc = {};
            if (obj['code'] != null) {
              grpc['code'] = obj['code'];
            }
            if (obj['description'] != null) {
              grpc['description'] = obj['description'];
            }
            if (obj['data'] != null) {
              grpc['data'] = $root.google.protobuf.Struct.toGRPC(obj['data'], helper);
            }
            return grpc;
          }
        }
        static fromGRPC(grpc, helper) {
          if (grpc == null) {
            return null;
          } else {
            const result = new $root.wix.api.ApplicationError();
            if (grpc['code'] != null) {
              result['code'] = grpc['code'];
            } else {
              result['code'] = '';
            }
            if (grpc['description'] != null) {
              result['description'] = grpc['description'];
            } else {
              result['description'] = '';
            }
            if (grpc['data'] != null) {
              result['data'] = $root.google.protobuf.Struct.fromGRPC(grpc['data'], helper);
            } else {
              delete result['data'];
            }
            return result;
          }
        }
      }
      __builtIn.Object.defineProperty(ApplicationError.prototype, '__proto', {
        value: pbjs => {
          return $root.__lookup(pbjs)('wix.api.ApplicationError');
        },
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(ApplicationError.prototype, '__fqn__', {
        value: 'wix.api.ApplicationError',
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(ApplicationError.prototype, '__options__', {
        value: $root.__options,
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(ApplicationError.prototype, '__root__', {
        value: $root,
        enumerable: false,
        configurable: false
      });
      return ApplicationError;
    }());;
    _api.ValidationError = (function () {
      class ValidationError {
        constructor(props) {
          this.fieldViolations = props && props.fieldViolations;
        }
        static toJSON(obj, helper, withDefaults) {
          if (obj == null) {
            return null;
          } else {
            const json = {};
            if (obj['fieldViolations'] != null) {
              json['fieldViolations'] = obj['fieldViolations'].map(e => {
                return $root.wix.api.ValidationError.FieldViolation.toJSON(e, helper, withDefaults);
              });
            } else if (withDefaults) {
              json['fieldViolations'] = [];
            }
            return json;
          }
        }
        static fromJSON(json, helper, withDefaults) {
          if (typeof json === 'object' && !Array.isArray(json)) {
            const result = new $root.wix.api.ValidationError();
            if (json['fieldViolations'] != null) {
              result['fieldViolations'] = Array.isArray(json['fieldViolations']) ? json['fieldViolations'].map(e => {
                return $root.wix.api.ValidationError.FieldViolation.fromJSON(e, helper);
              }) : json['fieldViolations'];
            } else if (withDefaults !== false) {
              result['fieldViolations'] = [];
            } else {
              delete result['fieldViolations'];
            }
            return result;
          } else
            return json;
        }
        static toGRPC(obj, helper) {
          if (obj == null) {
            return null;
          } else {
            const grpc = {};
            if (obj['fieldViolations'] != null) {
              grpc['fieldViolations'] = obj['fieldViolations'].map(e => {
                return $root.wix.api.ValidationError.FieldViolation.toGRPC(e, helper);
              });
            }
            return grpc;
          }
        }
        static fromGRPC(grpc, helper) {
          if (grpc == null) {
            return null;
          } else {
            const result = new $root.wix.api.ValidationError();
            if (grpc['fieldViolations'] != null) {
              result['fieldViolations'] = grpc['fieldViolations'].map(e => {
                return $root.wix.api.ValidationError.FieldViolation.fromGRPC(e, helper);
              });
            } else {
              result['fieldViolations'] = [];
            }
            return result;
          }
        }
      }
      ValidationError.RuleType = {
        'VALIDATION': 0,
        0: 'VALIDATION',
        'OTHER': 1,
        1: 'OTHER',
        'MAX': 2,
        2: 'MAX',
        'MIN': 3,
        3: 'MIN',
        'MAX_LENGTH': 4,
        4: 'MAX_LENGTH',
        'MIN_LENGTH': 5,
        5: 'MIN_LENGTH',
        'MAX_SIZE': 6,
        6: 'MAX_SIZE',
        'MIN_SIZE': 7,
        7: 'MIN_SIZE',
        'FORMAT': 8,
        8: 'FORMAT',
        'DECIMAL_LTE': 9,
        9: 'DECIMAL_LTE',
        'DECIMAL_GTE': 10,
        10: 'DECIMAL_GTE',
        'DECIMAL_LT': 11,
        11: 'DECIMAL_LT',
        'DECIMAL_GT': 12,
        12: 'DECIMAL_GT',
        'DECIMAL_MAX_SCALE': 13,
        13: 'DECIMAL_MAX_SCALE',
        'INVALID_ENUM_VALUE': 14,
        14: 'INVALID_ENUM_VALUE',
        'REQUIRED_FIELD': 15,
        15: 'REQUIRED_FIELD'
      };
      ValidationError.FieldViolation = (function () {
        class FieldViolation {
          constructor(props) {
            this.field = props && props.field;
            this.description = props && props.description;
            this.violatedRule = props && props.violatedRule;
            this.ruleName = props && props.ruleName;
            this.data = props && props.data;
          }
          static toJSON(obj, helper, withDefaults) {
            if (obj == null) {
              return null;
            } else {
              const json = {};
              if (obj['field'] != null) {
                json['field'] = obj['field'];
              } else if (withDefaults) {
                json['field'] = '';
              }
              if (obj['description'] != null) {
                json['description'] = obj['description'];
              } else if (withDefaults) {
                json['description'] = '';
              }
              if (obj['violatedRule'] != null) {
                json['violatedRule'] = $root.wix.api.ValidationError.RuleType[obj['violatedRule']];
              } else if (withDefaults) {
                json['violatedRule'] = 0;
              }
              if (obj['ruleName'] != null) {
                json['ruleName'] = $root.google.protobuf.StringValue.toJSON(obj['ruleName'], helper, withDefaults);
              } else if (withDefaults) {
                delete json['ruleName'];
              }
              if (obj['data'] != null) {
                json['data'] = $root.google.protobuf.Struct.toJSON(obj['data'], helper, withDefaults);
              } else if (withDefaults) {
                delete json['data'];
              }
              return json;
            }
          }
          static fromJSON(json, helper, withDefaults) {
            if (typeof json === 'object' && !Array.isArray(json)) {
              const result = new $root.wix.api.ValidationError.FieldViolation();
              if (json['field'] != null) {
                result['field'] = json['field'];
              } else if (withDefaults !== false) {
                result['field'] = '';
              } else {
                delete result['field'];
              }
              if (json['description'] != null) {
                result['description'] = json['description'];
              } else if (withDefaults !== false) {
                result['description'] = '';
              } else {
                delete result['description'];
              }
              if (json['violatedRule'] != null) {
                result['violatedRule'] = typeof json['violatedRule'] === 'string' ? $root.wix.api.ValidationError.RuleType[json['violatedRule']] : json['violatedRule'];
              } else if (withDefaults !== false) {
                result['violatedRule'] = 0;
              } else {
                delete result['violatedRule'];
              }
              if (json['ruleName'] != null) {
                result['ruleName'] = $root.google.protobuf.StringValue.fromJSON(json['ruleName'], helper);
              } else if (withDefaults !== false) {
                delete result['ruleName'];
              } else {
                delete result['ruleName'];
              }
              if (json['data'] != null) {
                result['data'] = $root.google.protobuf.Struct.fromJSON(json['data'], helper);
              } else if (withDefaults !== false) {
                delete result['data'];
              } else {
                delete result['data'];
              }
              return result;
            } else
              return json;
          }
          static toGRPC(obj, helper) {
            if (obj == null) {
              return null;
            } else {
              const grpc = {};
              if (obj['field'] != null) {
                grpc['field'] = obj['field'];
              }
              if (obj['description'] != null) {
                grpc['description'] = obj['description'];
              }
              if (obj['violatedRule'] != null) {
                grpc['violatedRule'] = obj['violatedRule'];
              }
              if (obj['ruleName'] != null) {
                grpc['ruleName'] = $root.google.protobuf.StringValue.toGRPC(obj['ruleName'], helper);
              }
              if (obj['data'] != null) {
                grpc['data'] = $root.google.protobuf.Struct.toGRPC(obj['data'], helper);
              }
              return grpc;
            }
          }
          static fromGRPC(grpc, helper) {
            if (grpc == null) {
              return null;
            } else {
              const result = new $root.wix.api.ValidationError.FieldViolation();
              if (grpc['field'] != null) {
                result['field'] = grpc['field'];
              } else {
                result['field'] = '';
              }
              if (grpc['description'] != null) {
                result['description'] = grpc['description'];
              } else {
                result['description'] = '';
              }
              if (grpc['violatedRule'] != null) {
                result['violatedRule'] = grpc['violatedRule'];
              } else {
                result['violatedRule'] = 0;
              }
              if (grpc['ruleName'] != null) {
                result['ruleName'] = $root.google.protobuf.StringValue.fromGRPC(grpc['ruleName'], helper);
              } else {
                delete result['ruleName'];
              }
              if (grpc['data'] != null) {
                result['data'] = $root.google.protobuf.Struct.fromGRPC(grpc['data'], helper);
              } else {
                delete result['data'];
              }
              return result;
            }
          }
        }
        __builtIn.Object.defineProperty(FieldViolation.prototype, '__proto', {
          value: pbjs => {
            return $root.__lookup(pbjs)('wix.api.ValidationError.FieldViolation');
          },
          enumerable: false,
          configurable: false
        });
        __builtIn.Object.defineProperty(FieldViolation.prototype, '__fqn__', {
          value: 'wix.api.ValidationError.FieldViolation',
          enumerable: false,
          configurable: false
        });
        __builtIn.Object.defineProperty(FieldViolation.prototype, '__options__', {
          value: $root.__options,
          enumerable: false,
          configurable: false
        });
        __builtIn.Object.defineProperty(FieldViolation.prototype, '__root__', {
          value: $root,
          enumerable: false,
          configurable: false
        });
        return FieldViolation;
      }());;
      ValidationError.RuleType = {
        'VALIDATION': 0,
        0: 'VALIDATION',
        'OTHER': 1,
        1: 'OTHER',
        'MAX': 2,
        2: 'MAX',
        'MIN': 3,
        3: 'MIN',
        'MAX_LENGTH': 4,
        4: 'MAX_LENGTH',
        'MIN_LENGTH': 5,
        5: 'MIN_LENGTH',
        'MAX_SIZE': 6,
        6: 'MAX_SIZE',
        'MIN_SIZE': 7,
        7: 'MIN_SIZE',
        'FORMAT': 8,
        8: 'FORMAT',
        'DECIMAL_LTE': 9,
        9: 'DECIMAL_LTE',
        'DECIMAL_GTE': 10,
        10: 'DECIMAL_GTE',
        'DECIMAL_LT': 11,
        11: 'DECIMAL_LT',
        'DECIMAL_GT': 12,
        12: 'DECIMAL_GT',
        'DECIMAL_MAX_SCALE': 13,
        13: 'DECIMAL_MAX_SCALE',
        'INVALID_ENUM_VALUE': 14,
        14: 'INVALID_ENUM_VALUE',
        'REQUIRED_FIELD': 15,
        15: 'REQUIRED_FIELD'
      };
      ValidationError.FieldViolation = (function () {
        class FieldViolation {
          constructor(props) {
            this.field = props && props.field;
            this.description = props && props.description;
            this.violatedRule = props && props.violatedRule;
            this.ruleName = props && props.ruleName;
            this.data = props && props.data;
          }
          static toJSON(obj, helper, withDefaults) {
            if (obj == null) {
              return null;
            } else {
              const json = {};
              if (obj['field'] != null) {
                json['field'] = obj['field'];
              } else if (withDefaults) {
                json['field'] = '';
              }
              if (obj['description'] != null) {
                json['description'] = obj['description'];
              } else if (withDefaults) {
                json['description'] = '';
              }
              if (obj['violatedRule'] != null) {
                json['violatedRule'] = $root.wix.api.ValidationError.RuleType[obj['violatedRule']];
              } else if (withDefaults) {
                json['violatedRule'] = 0;
              }
              if (obj['ruleName'] != null) {
                json['ruleName'] = $root.google.protobuf.StringValue.toJSON(obj['ruleName'], helper, withDefaults);
              } else if (withDefaults) {
                delete json['ruleName'];
              }
              if (obj['data'] != null) {
                json['data'] = $root.google.protobuf.Struct.toJSON(obj['data'], helper, withDefaults);
              } else if (withDefaults) {
                delete json['data'];
              }
              return json;
            }
          }
          static fromJSON(json, helper, withDefaults) {
            if (typeof json === 'object' && !Array.isArray(json)) {
              const result = new $root.wix.api.ValidationError.FieldViolation();
              if (json['field'] != null) {
                result['field'] = json['field'];
              } else if (withDefaults !== false) {
                result['field'] = '';
              } else {
                delete result['field'];
              }
              if (json['description'] != null) {
                result['description'] = json['description'];
              } else if (withDefaults !== false) {
                result['description'] = '';
              } else {
                delete result['description'];
              }
              if (json['violatedRule'] != null) {
                result['violatedRule'] = typeof json['violatedRule'] === 'string' ? $root.wix.api.ValidationError.RuleType[json['violatedRule']] : json['violatedRule'];
              } else if (withDefaults !== false) {
                result['violatedRule'] = 0;
              } else {
                delete result['violatedRule'];
              }
              if (json['ruleName'] != null) {
                result['ruleName'] = $root.google.protobuf.StringValue.fromJSON(json['ruleName'], helper);
              } else if (withDefaults !== false) {
                delete result['ruleName'];
              } else {
                delete result['ruleName'];
              }
              if (json['data'] != null) {
                result['data'] = $root.google.protobuf.Struct.fromJSON(json['data'], helper);
              } else if (withDefaults !== false) {
                delete result['data'];
              } else {
                delete result['data'];
              }
              return result;
            } else
              return json;
          }
          static toGRPC(obj, helper) {
            if (obj == null) {
              return null;
            } else {
              const grpc = {};
              if (obj['field'] != null) {
                grpc['field'] = obj['field'];
              }
              if (obj['description'] != null) {
                grpc['description'] = obj['description'];
              }
              if (obj['violatedRule'] != null) {
                grpc['violatedRule'] = obj['violatedRule'];
              }
              if (obj['ruleName'] != null) {
                grpc['ruleName'] = $root.google.protobuf.StringValue.toGRPC(obj['ruleName'], helper);
              }
              if (obj['data'] != null) {
                grpc['data'] = $root.google.protobuf.Struct.toGRPC(obj['data'], helper);
              }
              return grpc;
            }
          }
          static fromGRPC(grpc, helper) {
            if (grpc == null) {
              return null;
            } else {
              const result = new $root.wix.api.ValidationError.FieldViolation();
              if (grpc['field'] != null) {
                result['field'] = grpc['field'];
              } else {
                result['field'] = '';
              }
              if (grpc['description'] != null) {
                result['description'] = grpc['description'];
              } else {
                result['description'] = '';
              }
              if (grpc['violatedRule'] != null) {
                result['violatedRule'] = grpc['violatedRule'];
              } else {
                result['violatedRule'] = 0;
              }
              if (grpc['ruleName'] != null) {
                result['ruleName'] = $root.google.protobuf.StringValue.fromGRPC(grpc['ruleName'], helper);
              } else {
                delete result['ruleName'];
              }
              if (grpc['data'] != null) {
                result['data'] = $root.google.protobuf.Struct.fromGRPC(grpc['data'], helper);
              } else {
                delete result['data'];
              }
              return result;
            }
          }
        }
        __builtIn.Object.defineProperty(FieldViolation.prototype, '__proto', {
          value: pbjs => {
            return $root.__lookup(pbjs)('wix.api.ValidationError.FieldViolation');
          },
          enumerable: false,
          configurable: false
        });
        __builtIn.Object.defineProperty(FieldViolation.prototype, '__fqn__', {
          value: 'wix.api.ValidationError.FieldViolation',
          enumerable: false,
          configurable: false
        });
        __builtIn.Object.defineProperty(FieldViolation.prototype, '__options__', {
          value: $root.__options,
          enumerable: false,
          configurable: false
        });
        __builtIn.Object.defineProperty(FieldViolation.prototype, '__root__', {
          value: $root,
          enumerable: false,
          configurable: false
        });
        return FieldViolation;
      }());;
      __builtIn.Object.defineProperty(ValidationError.prototype, '__proto', {
        value: pbjs => {
          return $root.__lookup(pbjs)('wix.api.ValidationError');
        },
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(ValidationError.prototype, '__fqn__', {
        value: 'wix.api.ValidationError',
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(ValidationError.prototype, '__options__', {
        value: $root.__options,
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(ValidationError.prototype, '__root__', {
        value: $root,
        enumerable: false,
        configurable: false
      });
      return ValidationError;
    }());;
    _api.LimitRuleInt32DataPayload = (function () {
      class LimitRuleInt32DataPayload {
        constructor(props) {
          this.threshold = props && props.threshold;
        }
        static toJSON(obj, helper, withDefaults) {
          if (obj == null) {
            return null;
          } else {
            const json = {};
            if (obj['threshold'] != null) {
              json['threshold'] = obj['threshold'];
            } else if (withDefaults) {
              json['threshold'] = 0;
            }
            return json;
          }
        }
        static fromJSON(json, helper, withDefaults) {
          if (typeof json === 'object' && !Array.isArray(json)) {
            const result = new $root.wix.api.LimitRuleInt32DataPayload();
            if (json['threshold'] != null) {
              result['threshold'] = json['threshold'];
            } else if (withDefaults !== false) {
              result['threshold'] = 0;
            } else {
              delete result['threshold'];
            }
            return result;
          } else
            return json;
        }
        static toGRPC(obj, helper) {
          if (obj == null) {
            return null;
          } else {
            const grpc = {};
            if (obj['threshold'] != null) {
              grpc['threshold'] = obj['threshold'];
            }
            return grpc;
          }
        }
        static fromGRPC(grpc, helper) {
          if (grpc == null) {
            return null;
          } else {
            const result = new $root.wix.api.LimitRuleInt32DataPayload();
            if (grpc['threshold'] != null) {
              result['threshold'] = grpc['threshold'];
            } else {
              result['threshold'] = 0;
            }
            return result;
          }
        }
      }
      __builtIn.Object.defineProperty(LimitRuleInt32DataPayload.prototype, '__proto', {
        value: pbjs => {
          return $root.__lookup(pbjs)('wix.api.LimitRuleInt32DataPayload');
        },
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(LimitRuleInt32DataPayload.prototype, '__fqn__', {
        value: 'wix.api.LimitRuleInt32DataPayload',
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(LimitRuleInt32DataPayload.prototype, '__options__', {
        value: $root.__options,
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(LimitRuleInt32DataPayload.prototype, '__root__', {
        value: $root,
        enumerable: false,
        configurable: false
      });
      return LimitRuleInt32DataPayload;
    }());;
    _api.LimitRuleDoubleDataPayload = (function () {
      class LimitRuleDoubleDataPayload {
        constructor(props) {
          this.threshold = props && props.threshold;
        }
        static toJSON(obj, helper, withDefaults) {
          if (obj == null) {
            return null;
          } else {
            const json = {};
            if (obj['threshold'] != null) {
              json['threshold'] = obj['threshold'] == null ? obj['threshold'] : isNaN(obj['threshold']) ? 'NaN' : isFinite(obj['threshold']) ? obj['threshold'] : obj['threshold'].toString();
            } else if (withDefaults) {
              json['threshold'] = 0;
            }
            return json;
          }
        }
        static fromJSON(json, helper, withDefaults) {
          if (typeof json === 'object' && !Array.isArray(json)) {
            const result = new $root.wix.api.LimitRuleDoubleDataPayload();
            if (json['threshold'] != null) {
              result['threshold'] = json['threshold'] === 'NaN' ? NaN : json['threshold'] === 'Infinity' ? Infinity : json['threshold'] === '-Infinity' ? -Infinity : json['threshold'];
            } else if (withDefaults !== false) {
              result['threshold'] = 0;
            } else {
              delete result['threshold'];
            }
            return result;
          } else
            return json;
        }
        static toGRPC(obj, helper) {
          if (obj == null) {
            return null;
          } else {
            const grpc = {};
            if (obj['threshold'] != null) {
              grpc['threshold'] = obj['threshold'];
            }
            return grpc;
          }
        }
        static fromGRPC(grpc, helper) {
          if (grpc == null) {
            return null;
          } else {
            const result = new $root.wix.api.LimitRuleDoubleDataPayload();
            if (grpc['threshold'] != null) {
              result['threshold'] = grpc['threshold'];
            } else {
              result['threshold'] = 0;
            }
            return result;
          }
        }
      }
      __builtIn.Object.defineProperty(LimitRuleDoubleDataPayload.prototype, '__proto', {
        value: pbjs => {
          return $root.__lookup(pbjs)('wix.api.LimitRuleDoubleDataPayload');
        },
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(LimitRuleDoubleDataPayload.prototype, '__fqn__', {
        value: 'wix.api.LimitRuleDoubleDataPayload',
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(LimitRuleDoubleDataPayload.prototype, '__options__', {
        value: $root.__options,
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(LimitRuleDoubleDataPayload.prototype, '__root__', {
        value: $root,
        enumerable: false,
        configurable: false
      });
      return LimitRuleDoubleDataPayload;
    }());;
    _api.LimitRuleStringDataPayload = (function () {
      class LimitRuleStringDataPayload {
        constructor(props) {
          this.threshold = props && props.threshold;
        }
        static toJSON(obj, helper, withDefaults) {
          if (obj == null) {
            return null;
          } else {
            const json = {};
            if (obj['threshold'] != null) {
              json['threshold'] = obj['threshold'];
            } else if (withDefaults) {
              json['threshold'] = '';
            }
            return json;
          }
        }
        static fromJSON(json, helper, withDefaults) {
          if (typeof json === 'object' && !Array.isArray(json)) {
            const result = new $root.wix.api.LimitRuleStringDataPayload();
            if (json['threshold'] != null) {
              result['threshold'] = json['threshold'];
            } else if (withDefaults !== false) {
              result['threshold'] = '';
            } else {
              delete result['threshold'];
            }
            return result;
          } else
            return json;
        }
        static toGRPC(obj, helper) {
          if (obj == null) {
            return null;
          } else {
            const grpc = {};
            if (obj['threshold'] != null) {
              grpc['threshold'] = obj['threshold'];
            }
            return grpc;
          }
        }
        static fromGRPC(grpc, helper) {
          if (grpc == null) {
            return null;
          } else {
            const result = new $root.wix.api.LimitRuleStringDataPayload();
            if (grpc['threshold'] != null) {
              result['threshold'] = grpc['threshold'];
            } else {
              result['threshold'] = '';
            }
            return result;
          }
        }
      }
      __builtIn.Object.defineProperty(LimitRuleStringDataPayload.prototype, '__proto', {
        value: pbjs => {
          return $root.__lookup(pbjs)('wix.api.LimitRuleStringDataPayload');
        },
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(LimitRuleStringDataPayload.prototype, '__fqn__', {
        value: 'wix.api.LimitRuleStringDataPayload',
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(LimitRuleStringDataPayload.prototype, '__options__', {
        value: $root.__options,
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(LimitRuleStringDataPayload.prototype, '__root__', {
        value: $root,
        enumerable: false,
        configurable: false
      });
      return LimitRuleStringDataPayload;
    }());;
    _api.FormatRuleDataPayload = (function () {
      class FormatRuleDataPayload {
        constructor(props) {
          this.type = props && props.type;
        }
        static toJSON(obj, helper, withDefaults) {
          if (obj == null) {
            return null;
          } else {
            const json = {};
            if (obj['type'] != null) {
              json['type'] = obj['type'];
            } else if (withDefaults) {
              json['type'] = '';
            }
            return json;
          }
        }
        static fromJSON(json, helper, withDefaults) {
          if (typeof json === 'object' && !Array.isArray(json)) {
            const result = new $root.wix.api.FormatRuleDataPayload();
            if (json['type'] != null) {
              result['type'] = json['type'];
            } else if (withDefaults !== false) {
              result['type'] = '';
            } else {
              delete result['type'];
            }
            return result;
          } else
            return json;
        }
        static toGRPC(obj, helper) {
          if (obj == null) {
            return null;
          } else {
            const grpc = {};
            if (obj['type'] != null) {
              grpc['type'] = obj['type'];
            }
            return grpc;
          }
        }
        static fromGRPC(grpc, helper) {
          if (grpc == null) {
            return null;
          } else {
            const result = new $root.wix.api.FormatRuleDataPayload();
            if (grpc['type'] != null) {
              result['type'] = grpc['type'];
            } else {
              result['type'] = '';
            }
            return result;
          }
        }
      }
      __builtIn.Object.defineProperty(FormatRuleDataPayload.prototype, '__proto', {
        value: pbjs => {
          return $root.__lookup(pbjs)('wix.api.FormatRuleDataPayload');
        },
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(FormatRuleDataPayload.prototype, '__fqn__', {
        value: 'wix.api.FormatRuleDataPayload',
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(FormatRuleDataPayload.prototype, '__options__', {
        value: $root.__options,
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(FormatRuleDataPayload.prototype, '__root__', {
        value: $root,
        enumerable: false,
        configurable: false
      });
      return FormatRuleDataPayload;
    }());;
    _api.EnumRuleDataPayload = (function () {
      class EnumRuleDataPayload {
        constructor(props) {
          this.supported = props && props.supported;
        }
        static toJSON(obj, helper, withDefaults) {
          if (obj == null) {
            return null;
          } else {
            const json = {};
            if (obj['supported'] != null) {
              json['supported'] = obj['supported'].map(e => {
                return e;
              });
            } else if (withDefaults) {
              json['supported'] = [];
            }
            return json;
          }
        }
        static fromJSON(json, helper, withDefaults) {
          if (typeof json === 'object' && !Array.isArray(json)) {
            const result = new $root.wix.api.EnumRuleDataPayload();
            if (json['supported'] != null) {
              result['supported'] = Array.isArray(json['supported']) ? json['supported'].map(e => {
                return e;
              }) : json['supported'];
            } else if (withDefaults !== false) {
              result['supported'] = [];
            } else {
              delete result['supported'];
            }
            return result;
          } else
            return json;
        }
        static toGRPC(obj, helper) {
          if (obj == null) {
            return null;
          } else {
            const grpc = {};
            if (obj['supported'] != null) {
              grpc['supported'] = obj['supported'].map(e => {
                return e;
              });
            }
            return grpc;
          }
        }
        static fromGRPC(grpc, helper) {
          if (grpc == null) {
            return null;
          } else {
            const result = new $root.wix.api.EnumRuleDataPayload();
            if (grpc['supported'] != null) {
              result['supported'] = grpc['supported'].map(e => {
                return e;
              });
            } else {
              result['supported'] = [];
            }
            return result;
          }
        }
      }
      __builtIn.Object.defineProperty(EnumRuleDataPayload.prototype, '__proto', {
        value: pbjs => {
          return $root.__lookup(pbjs)('wix.api.EnumRuleDataPayload');
        },
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(EnumRuleDataPayload.prototype, '__fqn__', {
        value: 'wix.api.EnumRuleDataPayload',
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(EnumRuleDataPayload.prototype, '__options__', {
        value: $root.__options,
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(EnumRuleDataPayload.prototype, '__root__', {
        value: $root,
        enumerable: false,
        configurable: false
      });
      return EnumRuleDataPayload;
    }());;
    _api.PermissionRule = (function () {
      class PermissionRule {
        constructor(props) {
          this.name = props && props.name;
          this.type = props && props.type;
        }
        static toJSON(obj, helper, withDefaults) {
          if (obj == null) {
            return null;
          } else {
            const json = {};
            if (obj['name'] != null) {
              json['name'] = obj['name'];
            } else if (withDefaults) {
              json['name'] = '';
            }
            if (obj['type'] != null) {
              json['type'] = $root.wix.api.PermissionType[obj['type']];
            } else if (withDefaults) {
              json['type'] = 0;
            }
            return json;
          }
        }
        static fromJSON(json, helper, withDefaults) {
          if (typeof json === 'object' && !Array.isArray(json)) {
            const result = new $root.wix.api.PermissionRule();
            if (json['name'] != null) {
              result['name'] = json['name'];
            } else if (withDefaults !== false) {
              result['name'] = '';
            } else {
              delete result['name'];
            }
            if (json['type'] != null) {
              result['type'] = typeof json['type'] === 'string' ? $root.wix.api.PermissionType[json['type']] : json['type'];
            } else if (withDefaults !== false) {
              result['type'] = 0;
            } else {
              delete result['type'];
            }
            return result;
          } else
            return json;
        }
        static toGRPC(obj, helper) {
          if (obj == null) {
            return null;
          } else {
            const grpc = {};
            if (obj['name'] != null) {
              grpc['name'] = obj['name'];
            }
            if (obj['type'] != null) {
              grpc['type'] = obj['type'];
            }
            return grpc;
          }
        }
        static fromGRPC(grpc, helper) {
          if (grpc == null) {
            return null;
          } else {
            const result = new $root.wix.api.PermissionRule();
            if (grpc['name'] != null) {
              result['name'] = grpc['name'];
            } else {
              result['name'] = '';
            }
            if (grpc['type'] != null) {
              result['type'] = grpc['type'];
            } else {
              result['type'] = 0;
            }
            return result;
          }
        }
      }
      __builtIn.Object.defineProperty(PermissionRule.prototype, '__proto', {
        value: pbjs => {
          return $root.__lookup(pbjs)('wix.api.PermissionRule');
        },
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(PermissionRule.prototype, '__fqn__', {
        value: 'wix.api.PermissionRule',
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(PermissionRule.prototype, '__options__', {
        value: $root.__options,
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(PermissionRule.prototype, '__root__', {
        value: $root,
        enumerable: false,
        configurable: false
      });
      return PermissionRule;
    }());;
    _api.PermissionType = {
      'AUTO': 0,
      0: 'AUTO',
      'MANUAL': 1,
      1: 'MANUAL'
    };
    _api.Sla = (function () {
      class Sla {
        constructor(props) {
          this.responseTimeMs = props && props.responseTimeMs;
        }
        static toJSON(obj, helper, withDefaults) {
          if (obj == null) {
            return null;
          } else {
            const json = {};
            if (obj['responseTimeMs'] != null) {
              json['responseTimeMs'] = obj['responseTimeMs'];
            } else if (withDefaults) {
              json['responseTimeMs'] = 0;
            }
            return json;
          }
        }
        static fromJSON(json, helper, withDefaults) {
          if (typeof json === 'object' && !Array.isArray(json)) {
            const result = new $root.wix.api.Sla();
            if (json['responseTimeMs'] != null) {
              result['responseTimeMs'] = json['responseTimeMs'];
            } else if (withDefaults !== false) {
              result['responseTimeMs'] = 0;
            } else {
              delete result['responseTimeMs'];
            }
            return result;
          } else
            return json;
        }
        static toGRPC(obj, helper) {
          if (obj == null) {
            return null;
          } else {
            const grpc = {};
            if (obj['responseTimeMs'] != null) {
              grpc['responseTimeMs'] = obj['responseTimeMs'];
            }
            return grpc;
          }
        }
        static fromGRPC(grpc, helper) {
          if (grpc == null) {
            return null;
          } else {
            const result = new $root.wix.api.Sla();
            if (grpc['responseTimeMs'] != null) {
              result['responseTimeMs'] = grpc['responseTimeMs'];
            } else {
              result['responseTimeMs'] = 0;
            }
            return result;
          }
        }
      }
      __builtIn.Object.defineProperty(Sla.prototype, '__proto', {
        value: pbjs => {
          return $root.__lookup(pbjs)('wix.api.Sla');
        },
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(Sla.prototype, '__fqn__', {
        value: 'wix.api.Sla',
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(Sla.prototype, '__options__', {
        value: $root.__options,
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(Sla.prototype, '__root__', {
        value: $root,
        enumerable: false,
        configurable: false
      });
      return Sla;
    }());;
    _api.Subscription = (function () {
      class Subscription {
        constructor(props) {
          this.topic = props && props.topic;
          this.segment = props && props.segment;
          this.batch = props && props.batch;
          this.entity = props && props.entity;
          this.consumeMode = props && props.consumeMode;
        }
        static toJSON(obj, helper, withDefaults) {
          if (obj == null) {
            return null;
          } else {
            const json = {};
            if (obj['topic'] != null) {
              json['topic'] = obj['topic'];
            } else if (withDefaults) {
              json['topic'] = '';
            }
            if (obj['segment'] != null) {
              json['segment'] = $root.wix.api.Segment.Segment[obj['segment']];
            } else if (withDefaults) {
              json['segment'] = 0;
            }
            if (obj['batch'] != null) {
              json['batch'] = obj['batch'];
            } else if (withDefaults) {
              json['batch'] = false;
            }
            if (obj['entity'] != null) {
              json['entity'] = obj['entity'];
            } else if (withDefaults) {
              json['entity'] = '';
            }
            if (obj['consumeMode'] != null) {
              json['consumeMode'] = $root.wix.api.MessageConsumeMode[obj['consumeMode']];
            } else if (withDefaults) {
              json['consumeMode'] = 0;
            }
            return json;
          }
        }
        static fromJSON(json, helper, withDefaults) {
          if (typeof json === 'object' && !Array.isArray(json)) {
            const result = new $root.wix.api.Subscription();
            if (json['topic'] != null) {
              result['topic'] = json['topic'];
            } else if (withDefaults !== false) {
              result['topic'] = '';
            } else {
              delete result['topic'];
            }
            if (json['segment'] != null) {
              result['segment'] = typeof json['segment'] === 'string' ? $root.wix.api.Segment.Segment[json['segment']] : json['segment'];
            } else if (withDefaults !== false) {
              result['segment'] = 0;
            } else {
              delete result['segment'];
            }
            if (json['batch'] != null) {
              result['batch'] = json['batch'];
            } else if (withDefaults !== false) {
              result['batch'] = false;
            } else {
              delete result['batch'];
            }
            if (json['entity'] != null) {
              result['entity'] = json['entity'];
            } else if (withDefaults !== false) {
              result['entity'] = '';
            } else {
              delete result['entity'];
            }
            if (json['consumeMode'] != null) {
              result['consumeMode'] = typeof json['consumeMode'] === 'string' ? $root.wix.api.MessageConsumeMode[json['consumeMode']] : json['consumeMode'];
            } else if (withDefaults !== false) {
              result['consumeMode'] = 0;
            } else {
              delete result['consumeMode'];
            }
            return result;
          } else
            return json;
        }
        static toGRPC(obj, helper) {
          if (obj == null) {
            return null;
          } else {
            const grpc = {};
            if (obj['topic'] != null) {
              grpc['topic'] = obj['topic'];
            }
            if (obj['segment'] != null) {
              grpc['segment'] = obj['segment'];
            }
            if (obj['batch'] != null) {
              grpc['batch'] = obj['batch'];
            }
            if (obj['entity'] != null) {
              grpc['entity'] = obj['entity'];
            }
            if (obj['consumeMode'] != null) {
              grpc['consumeMode'] = obj['consumeMode'];
            }
            return grpc;
          }
        }
        static fromGRPC(grpc, helper) {
          if (grpc == null) {
            return null;
          } else {
            const result = new $root.wix.api.Subscription();
            if (grpc['topic'] != null) {
              result['topic'] = grpc['topic'];
            } else {
              result['topic'] = '';
            }
            if (grpc['segment'] != null) {
              result['segment'] = grpc['segment'];
            } else {
              result['segment'] = 0;
            }
            if (grpc['batch'] != null) {
              result['batch'] = grpc['batch'];
            } else {
              result['batch'] = false;
            }
            if (grpc['entity'] != null) {
              result['entity'] = grpc['entity'];
            } else {
              result['entity'] = '';
            }
            if (grpc['consumeMode'] != null) {
              result['consumeMode'] = grpc['consumeMode'];
            } else {
              result['consumeMode'] = 0;
            }
            return result;
          }
        }
      }
      __builtIn.Object.defineProperty(Subscription.prototype, '__proto', {
        value: pbjs => {
          return $root.__lookup(pbjs)('wix.api.Subscription');
        },
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(Subscription.prototype, '__fqn__', {
        value: 'wix.api.Subscription',
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(Subscription.prototype, '__options__', {
        value: $root.__options,
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(Subscription.prototype, '__root__', {
        value: $root,
        enumerable: false,
        configurable: false
      });
      return Subscription;
    }());;
    _api.MessageConsumeMode = {
      'SINGLE_MESSAGE': 0,
      0: 'SINGLE_MESSAGE',
      'BATCH_MESSAGES': 1,
      1: 'BATCH_MESSAGES',
      'LEGACY_BATCH_MESSAGES': 2,
      2: 'LEGACY_BATCH_MESSAGES'
    };
    _api.DecimalValueOptions = (function () {
      class DecimalValueOptions {
        constructor(props) {
          this.lte = props && props.lte;
          this.gte = props && props.gte;
          this.lt = props && props.lt;
          this.gt = props && props.gt;
          this.maxScale = props && props.maxScale;
        }
        static toJSON(obj, helper, withDefaults) {
          if (obj == null) {
            return null;
          } else {
            const json = {};
            if (obj['lte'] != null) {
              json['lte'] = obj['lte'];
            } else if (withDefaults) {
              json['lte'] = '';
            }
            if (obj['gte'] != null) {
              json['gte'] = obj['gte'];
            } else if (withDefaults) {
              json['gte'] = '';
            }
            if (obj['lt'] != null) {
              json['lt'] = obj['lt'];
            } else if (withDefaults) {
              json['lt'] = '';
            }
            if (obj['gt'] != null) {
              json['gt'] = obj['gt'];
            } else if (withDefaults) {
              json['gt'] = '';
            }
            if (obj['maxScale'] != null) {
              json['maxScale'] = obj['maxScale'];
            } else if (withDefaults) {
              json['maxScale'] = 0;
            }
            return json;
          }
        }
        static fromJSON(json, helper, withDefaults) {
          if (typeof json === 'object' && !Array.isArray(json)) {
            const result = new $root.wix.api.DecimalValueOptions();
            if (json['lte'] != null) {
              result['lte'] = json['lte'];
            } else if (withDefaults !== false) {
              result['lte'] = '';
            } else {
              delete result['lte'];
            }
            if (json['gte'] != null) {
              result['gte'] = json['gte'];
            } else if (withDefaults !== false) {
              result['gte'] = '';
            } else {
              delete result['gte'];
            }
            if (json['lt'] != null) {
              result['lt'] = json['lt'];
            } else if (withDefaults !== false) {
              result['lt'] = '';
            } else {
              delete result['lt'];
            }
            if (json['gt'] != null) {
              result['gt'] = json['gt'];
            } else if (withDefaults !== false) {
              result['gt'] = '';
            } else {
              delete result['gt'];
            }
            if (json['maxScale'] != null) {
              result['maxScale'] = json['maxScale'];
            } else if (withDefaults !== false) {
              result['maxScale'] = 0;
            } else {
              delete result['maxScale'];
            }
            return result;
          } else
            return json;
        }
        static toGRPC(obj, helper) {
          if (obj == null) {
            return null;
          } else {
            const grpc = {};
            if (obj['lte'] != null) {
              grpc['lte'] = obj['lte'];
            }
            if (obj['gte'] != null) {
              grpc['gte'] = obj['gte'];
            }
            if (obj['lt'] != null) {
              grpc['lt'] = obj['lt'];
            }
            if (obj['gt'] != null) {
              grpc['gt'] = obj['gt'];
            }
            if (obj['maxScale'] != null) {
              grpc['maxScale'] = obj['maxScale'];
            }
            return grpc;
          }
        }
        static fromGRPC(grpc, helper) {
          if (grpc == null) {
            return null;
          } else {
            const result = new $root.wix.api.DecimalValueOptions();
            if (grpc['lte'] != null) {
              result['lte'] = grpc['lte'];
            } else {
              result['lte'] = '';
            }
            if (grpc['gte'] != null) {
              result['gte'] = grpc['gte'];
            } else {
              result['gte'] = '';
            }
            if (grpc['lt'] != null) {
              result['lt'] = grpc['lt'];
            } else {
              result['lt'] = '';
            }
            if (grpc['gt'] != null) {
              result['gt'] = grpc['gt'];
            } else {
              result['gt'] = '';
            }
            if (grpc['maxScale'] != null) {
              result['maxScale'] = grpc['maxScale'];
            } else {
              result['maxScale'] = 0;
            }
            return result;
          }
        }
      }
      __builtIn.Object.defineProperty(DecimalValueOptions.prototype, '__proto', {
        value: pbjs => {
          return $root.__lookup(pbjs)('wix.api.DecimalValueOptions');
        },
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(DecimalValueOptions.prototype, '__fqn__', {
        value: 'wix.api.DecimalValueOptions',
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(DecimalValueOptions.prototype, '__options__', {
        value: $root.__options,
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(DecimalValueOptions.prototype, '__root__', {
        value: $root,
        enumerable: false,
        configurable: false
      });
      return DecimalValueOptions;
    }());;
    _api.Format = {
      'EMAIL': 0,
      0: 'EMAIL',
      'HOSTNAME': 1,
      1: 'HOSTNAME',
      'IPV4': 2,
      2: 'IPV4',
      'IPV6': 3,
      3: 'IPV6',
      'URI': 4,
      4: 'URI',
      'WEB_URL': 5,
      5: 'WEB_URL',
      'PHONE': 7,
      7: 'PHONE',
      'CREDIT_CARD': 8,
      8: 'CREDIT_CARD',
      'GUID': 9,
      9: 'GUID',
      'COUNTRY': 10,
      10: 'COUNTRY',
      'LANGUAGE': 11,
      11: 'LANGUAGE',
      'DECIMAL_VALUE': 12,
      12: 'DECIMAL_VALUE',
      'CURRENCY': 13,
      13: 'CURRENCY',
      'LANGUAGE_TAG': 14,
      14: 'LANGUAGE_TAG',
      'COLOR_HEX': 15,
      15: 'COLOR_HEX',
      'LOCAL_DATE': 16,
      16: 'LOCAL_DATE',
      'LOCAL_TIME': 17,
      17: 'LOCAL_TIME',
      'LOCAL_DATE_TIME': 18,
      18: 'LOCAL_DATE_TIME'
    };
    return _api;
  }());;
  _wix.graphql = (function () {
    const _graphql = {};
    return _graphql;
  }());;
  _wix.http = (function () {
    const _http = {};
    _http.InferFieldmask = (function () {
      class InferFieldmask {
        constructor(props) {
          this.from = props && props.from;
          this.fieldmask = props && props.fieldmask;
        }
        static toJSON(obj, helper, withDefaults) {
          if (obj == null) {
            return null;
          } else {
            const json = {};
            if (obj['from'] != null) {
              json['from'] = obj['from'];
            } else if (withDefaults) {
              json['from'] = '';
            }
            if (obj['fieldmask'] != null) {
              json['fieldmask'] = obj['fieldmask'];
            } else if (withDefaults) {
              json['fieldmask'] = '';
            }
            return json;
          }
        }
        static fromJSON(json, helper, withDefaults) {
          if (typeof json === 'object' && !Array.isArray(json)) {
            const result = new $root.wix.http.InferFieldmask();
            if (json['from'] != null) {
              result['from'] = json['from'];
            } else if (withDefaults !== false) {
              result['from'] = '';
            } else {
              delete result['from'];
            }
            if (json['fieldmask'] != null) {
              result['fieldmask'] = json['fieldmask'];
            } else if (withDefaults !== false) {
              result['fieldmask'] = '';
            } else {
              delete result['fieldmask'];
            }
            return result;
          } else
            return json;
        }
        static toGRPC(obj, helper) {
          if (obj == null) {
            return null;
          } else {
            const grpc = {};
            if (obj['from'] != null) {
              grpc['from'] = obj['from'];
            }
            if (obj['fieldmask'] != null) {
              grpc['fieldmask'] = obj['fieldmask'];
            }
            return grpc;
          }
        }
        static fromGRPC(grpc, helper) {
          if (grpc == null) {
            return null;
          } else {
            const result = new $root.wix.http.InferFieldmask();
            if (grpc['from'] != null) {
              result['from'] = grpc['from'];
            } else {
              result['from'] = '';
            }
            if (grpc['fieldmask'] != null) {
              result['fieldmask'] = grpc['fieldmask'];
            } else {
              result['fieldmask'] = '';
            }
            return result;
          }
        }
      }
      __builtIn.Object.defineProperty(InferFieldmask.prototype, '__proto', {
        value: pbjs => {
          return $root.__lookup(pbjs)('wix.http.InferFieldmask');
        },
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(InferFieldmask.prototype, '__fqn__', {
        value: 'wix.http.InferFieldmask',
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(InferFieldmask.prototype, '__options__', {
        value: $root.__options,
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(InferFieldmask.prototype, '__root__', {
        value: $root,
        enumerable: false,
        configurable: false
      });
      return InferFieldmask;
    }());;
    return _http;
  }());;
  _wix.sdk = (function () {
    const _sdk = {};
    _sdk.Signature = (function () {
      class Signature {
        constructor(props) {
          this.params = props && props.params;
        }
        static toJSON(obj, helper, withDefaults) {
          if (obj == null) {
            return null;
          } else {
            const json = {};
            if (obj['params'] != null) {
              json['params'] = obj['params'].map(e => {
                return e;
              });
            } else if (withDefaults) {
              json['params'] = [];
            }
            return json;
          }
        }
        static fromJSON(json, helper, withDefaults) {
          if (typeof json === 'object' && !Array.isArray(json)) {
            const result = new $root.wix.sdk.Signature();
            if (json['params'] != null) {
              result['params'] = Array.isArray(json['params']) ? json['params'].map(e => {
                return e;
              }) : json['params'];
            } else if (withDefaults !== false) {
              result['params'] = [];
            } else {
              delete result['params'];
            }
            return result;
          } else
            return json;
        }
        static toGRPC(obj, helper) {
          if (obj == null) {
            return null;
          } else {
            const grpc = {};
            if (obj['params'] != null) {
              grpc['params'] = obj['params'].map(e => {
                return e;
              });
            }
            return grpc;
          }
        }
        static fromGRPC(grpc, helper) {
          if (grpc == null) {
            return null;
          } else {
            const result = new $root.wix.sdk.Signature();
            if (grpc['params'] != null) {
              result['params'] = grpc['params'].map(e => {
                return e;
              });
            } else {
              result['params'] = [];
            }
            return result;
          }
        }
      }
      __builtIn.Object.defineProperty(Signature.prototype, '__proto', {
        value: pbjs => {
          return $root.__lookup(pbjs)('wix.sdk.Signature');
        },
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(Signature.prototype, '__fqn__', {
        value: 'wix.sdk.Signature',
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(Signature.prototype, '__options__', {
        value: $root.__options,
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(Signature.prototype, '__root__', {
        value: $root,
        enumerable: false,
        configurable: false
      });
      return Signature;
    }());;
    return _sdk;
  }());;
  _wix.spi = (function () {
    const _spi = {};
    _spi.Service = (function () {
      class Service {
        constructor(props) {
          this.spiIdentifier = props && props.spiIdentifier;
          this.configMessage = props && props.configMessage;
          this.hostService = props && props.hostService;
          this.businessManagerUrl = props && props.businessManagerUrl;
          this.fqdn = props && props.fqdn;
        }
        static toJSON(obj, helper, withDefaults) {
          if (obj == null) {
            return null;
          } else {
            const json = {};
            if (obj['spiIdentifier'] != null) {
              json['spiIdentifier'] = obj['spiIdentifier'];
            } else if (withDefaults) {
              json['spiIdentifier'] = '';
            }
            if (obj['configMessage'] != null) {
              json['configMessage'] = obj['configMessage'];
            } else if (withDefaults) {
              json['configMessage'] = '';
            }
            if (obj['hostService'] != null) {
              json['hostService'] = obj['hostService'];
            } else if (withDefaults) {
              json['hostService'] = '';
            }
            if (obj['businessManagerUrl'] != null) {
              json['businessManagerUrl'] = obj['businessManagerUrl'];
            } else if (withDefaults) {
              json['businessManagerUrl'] = '';
            }
            if (obj['fqdn'] != null) {
              json['fqdn'] = obj['fqdn'];
            } else if (withDefaults) {
              json['fqdn'] = '';
            }
            return json;
          }
        }
        static fromJSON(json, helper, withDefaults) {
          if (typeof json === 'object' && !Array.isArray(json)) {
            const result = new $root.wix.spi.Service();
            if (json['spiIdentifier'] != null) {
              result['spiIdentifier'] = json['spiIdentifier'];
            } else if (withDefaults !== false) {
              result['spiIdentifier'] = '';
            } else {
              delete result['spiIdentifier'];
            }
            if (json['configMessage'] != null) {
              result['configMessage'] = json['configMessage'];
            } else if (withDefaults !== false) {
              result['configMessage'] = '';
            } else {
              delete result['configMessage'];
            }
            if (json['hostService'] != null) {
              result['hostService'] = json['hostService'];
            } else if (withDefaults !== false) {
              result['hostService'] = '';
            } else {
              delete result['hostService'];
            }
            if (json['businessManagerUrl'] != null) {
              result['businessManagerUrl'] = json['businessManagerUrl'];
            } else if (withDefaults !== false) {
              result['businessManagerUrl'] = '';
            } else {
              delete result['businessManagerUrl'];
            }
            if (json['fqdn'] != null) {
              result['fqdn'] = json['fqdn'];
            } else if (withDefaults !== false) {
              result['fqdn'] = '';
            } else {
              delete result['fqdn'];
            }
            return result;
          } else
            return json;
        }
        static toGRPC(obj, helper) {
          if (obj == null) {
            return null;
          } else {
            const grpc = {};
            if (obj['spiIdentifier'] != null) {
              grpc['spiIdentifier'] = obj['spiIdentifier'];
            }
            if (obj['configMessage'] != null) {
              grpc['configMessage'] = obj['configMessage'];
            }
            if (obj['hostService'] != null) {
              grpc['hostService'] = obj['hostService'];
            }
            if (obj['businessManagerUrl'] != null) {
              grpc['businessManagerUrl'] = obj['businessManagerUrl'];
            }
            if (obj['fqdn'] != null) {
              grpc['fqdn'] = obj['fqdn'];
            }
            return grpc;
          }
        }
        static fromGRPC(grpc, helper) {
          if (grpc == null) {
            return null;
          } else {
            const result = new $root.wix.spi.Service();
            if (grpc['spiIdentifier'] != null) {
              result['spiIdentifier'] = grpc['spiIdentifier'];
            } else {
              result['spiIdentifier'] = '';
            }
            if (grpc['configMessage'] != null) {
              result['configMessage'] = grpc['configMessage'];
            } else {
              result['configMessage'] = '';
            }
            if (grpc['hostService'] != null) {
              result['hostService'] = grpc['hostService'];
            } else {
              result['hostService'] = '';
            }
            if (grpc['businessManagerUrl'] != null) {
              result['businessManagerUrl'] = grpc['businessManagerUrl'];
            } else {
              result['businessManagerUrl'] = '';
            }
            if (grpc['fqdn'] != null) {
              result['fqdn'] = grpc['fqdn'];
            } else {
              result['fqdn'] = '';
            }
            return result;
          }
        }
      }
      __builtIn.Object.defineProperty(Service.prototype, '__proto', {
        value: pbjs => {
          return $root.__lookup(pbjs)('wix.spi.Service');
        },
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(Service.prototype, '__fqn__', {
        value: 'wix.spi.Service',
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(Service.prototype, '__options__', {
        value: $root.__options,
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(Service.prototype, '__root__', {
        value: $root,
        enumerable: false,
        configurable: false
      });
      return Service;
    }());;
    _spi.Error = (function () {
      class Error {
        constructor(props) {
          this.name = props && props.name;
          this.httpCode = props && props.httpCode;
          this.applicationCode = props && props.applicationCode;
          this.data = props && props.data;
        }
        static toJSON(obj, helper, withDefaults) {
          if (obj == null) {
            return null;
          } else {
            const json = {};
            if (obj['name'] != null) {
              json['name'] = obj['name'];
            } else if (withDefaults) {
              json['name'] = '';
            }
            if (obj['httpCode'] != null) {
              json['httpCode'] = $root.wix.spi.HttpStatusCode[obj['httpCode']];
            } else if (withDefaults) {
              json['httpCode'] = 0;
            }
            if (obj['applicationCode'] != null) {
              json['applicationCode'] = obj['applicationCode'];
            } else if (withDefaults) {
              json['applicationCode'] = '';
            }
            if (obj['data'] != null) {
              json['data'] = obj['data'];
            } else if (withDefaults) {
              json['data'] = '';
            }
            return json;
          }
        }
        static fromJSON(json, helper, withDefaults) {
          if (typeof json === 'object' && !Array.isArray(json)) {
            const result = new $root.wix.spi.Error();
            if (json['name'] != null) {
              result['name'] = json['name'];
            } else if (withDefaults !== false) {
              result['name'] = '';
            } else {
              delete result['name'];
            }
            if (json['httpCode'] != null) {
              result['httpCode'] = typeof json['httpCode'] === 'string' ? $root.wix.spi.HttpStatusCode[json['httpCode']] : json['httpCode'];
            } else if (withDefaults !== false) {
              result['httpCode'] = 0;
            } else {
              delete result['httpCode'];
            }
            if (json['applicationCode'] != null) {
              result['applicationCode'] = json['applicationCode'];
            } else if (withDefaults !== false) {
              result['applicationCode'] = '';
            } else {
              delete result['applicationCode'];
            }
            if (json['data'] != null) {
              result['data'] = json['data'];
            } else if (withDefaults !== false) {
              result['data'] = '';
            } else {
              delete result['data'];
            }
            return result;
          } else
            return json;
        }
        static toGRPC(obj, helper) {
          if (obj == null) {
            return null;
          } else {
            const grpc = {};
            if (obj['name'] != null) {
              grpc['name'] = obj['name'];
            }
            if (obj['httpCode'] != null) {
              grpc['httpCode'] = obj['httpCode'];
            }
            if (obj['applicationCode'] != null) {
              grpc['applicationCode'] = obj['applicationCode'];
            }
            if (obj['data'] != null) {
              grpc['data'] = obj['data'];
            }
            return grpc;
          }
        }
        static fromGRPC(grpc, helper) {
          if (grpc == null) {
            return null;
          } else {
            const result = new $root.wix.spi.Error();
            if (grpc['name'] != null) {
              result['name'] = grpc['name'];
            } else {
              result['name'] = '';
            }
            if (grpc['httpCode'] != null) {
              result['httpCode'] = grpc['httpCode'];
            } else {
              result['httpCode'] = 0;
            }
            if (grpc['applicationCode'] != null) {
              result['applicationCode'] = grpc['applicationCode'];
            } else {
              result['applicationCode'] = '';
            }
            if (grpc['data'] != null) {
              result['data'] = grpc['data'];
            } else {
              result['data'] = '';
            }
            return result;
          }
        }
      }
      __builtIn.Object.defineProperty(Error.prototype, '__proto', {
        value: pbjs => {
          return $root.__lookup(pbjs)('wix.spi.Error');
        },
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(Error.prototype, '__fqn__', {
        value: 'wix.spi.Error',
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(Error.prototype, '__options__', {
        value: $root.__options,
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(Error.prototype, '__root__', {
        value: $root,
        enumerable: false,
        configurable: false
      });
      return Error;
    }());;
    _spi.Event = (function () {
      class Event {
        constructor(props) {
          this.methodName = props && props.methodName;
        }
        static toJSON(obj, helper, withDefaults) {
          if (obj == null) {
            return null;
          } else {
            const json = {};
            if (obj['methodName'] != null) {
              json['methodName'] = obj['methodName'];
            } else if (withDefaults) {
              json['methodName'] = '';
            }
            return json;
          }
        }
        static fromJSON(json, helper, withDefaults) {
          if (typeof json === 'object' && !Array.isArray(json)) {
            const result = new $root.wix.spi.Event();
            if (json['methodName'] != null) {
              result['methodName'] = json['methodName'];
            } else if (withDefaults !== false) {
              result['methodName'] = '';
            } else {
              delete result['methodName'];
            }
            return result;
          } else
            return json;
        }
        static toGRPC(obj, helper) {
          if (obj == null) {
            return null;
          } else {
            const grpc = {};
            if (obj['methodName'] != null) {
              grpc['methodName'] = obj['methodName'];
            }
            return grpc;
          }
        }
        static fromGRPC(grpc, helper) {
          if (grpc == null) {
            return null;
          } else {
            const result = new $root.wix.spi.Event();
            if (grpc['methodName'] != null) {
              result['methodName'] = grpc['methodName'];
            } else {
              result['methodName'] = '';
            }
            return result;
          }
        }
      }
      __builtIn.Object.defineProperty(Event.prototype, '__proto', {
        value: pbjs => {
          return $root.__lookup(pbjs)('wix.spi.Event');
        },
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(Event.prototype, '__fqn__', {
        value: 'wix.spi.Event',
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(Event.prototype, '__options__', {
        value: $root.__options,
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(Event.prototype, '__root__', {
        value: $root,
        enumerable: false,
        configurable: false
      });
      return Event;
    }());;
    _spi.HttpStatusCode = {
      'UNKNOWN_ERROR': 0,
      0: 'UNKNOWN_ERROR',
      'UNAUTHENTICATED': 1,
      1: 'UNAUTHENTICATED',
      'INVALID_ARGUMENT': 3,
      3: 'INVALID_ARGUMENT',
      'INTERNAL': 5,
      5: 'INTERNAL',
      'RESOURCE_EXHAUSTED': 7,
      7: 'RESOURCE_EXHAUSTED',
      'CANCELED': 8,
      8: 'CANCELED',
      'NOT_FOUND': 4,
      4: 'NOT_FOUND',
      'ALREADY_EXISTS': 9,
      9: 'ALREADY_EXISTS',
      'FAILED_PRECONDITION': 10,
      10: 'FAILED_PRECONDITION'
    };
    return _spi;
  }());;
  return _wix;
}());;
$root.google = (function () {
  const _google = {};
  _google.protobuf = (function () {
    const _protobuf = {};
    _protobuf.FileDescriptorSet = (function () {
      class FileDescriptorSet {
        constructor(props) {
          this.file = props && props.file;
        }
        static toJSON(obj, helper, withDefaults) {
          if (obj == null) {
            return null;
          } else {
            const json = {};
            if (obj['file'] != null) {
              json['file'] = obj['file'].map(e => {
                return $root.google.protobuf.FileDescriptorProto.toJSON(e, helper, withDefaults);
              });
            } else if (withDefaults) {
              json['file'] = [];
            }
            return json;
          }
        }
        static fromJSON(json, helper, withDefaults) {
          if (typeof json === 'object' && !Array.isArray(json)) {
            const result = new $root.google.protobuf.FileDescriptorSet();
            if (json['file'] != null) {
              result['file'] = Array.isArray(json['file']) ? json['file'].map(e => {
                return $root.google.protobuf.FileDescriptorProto.fromJSON(e, helper);
              }) : json['file'];
            } else if (withDefaults !== false) {
              result['file'] = [];
            } else {
              delete result['file'];
            }
            return result;
          } else
            return json;
        }
        static toGRPC(obj, helper) {
          if (obj == null) {
            return null;
          } else {
            const grpc = {};
            if (obj['file'] != null) {
              grpc['file'] = obj['file'].map(e => {
                return $root.google.protobuf.FileDescriptorProto.toGRPC(e, helper);
              });
            }
            return grpc;
          }
        }
        static fromGRPC(grpc, helper) {
          if (grpc == null) {
            return null;
          } else {
            const result = new $root.google.protobuf.FileDescriptorSet();
            if (grpc['file'] != null) {
              result['file'] = grpc['file'].map(e => {
                return $root.google.protobuf.FileDescriptorProto.fromGRPC(e, helper);
              });
            } else {
              result['file'] = [];
            }
            return result;
          }
        }
      }
      __builtIn.Object.defineProperty(FileDescriptorSet.prototype, '__proto', {
        value: pbjs => {
          return $root.__lookup(pbjs)('google.protobuf.FileDescriptorSet');
        },
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(FileDescriptorSet.prototype, '__fqn__', {
        value: 'google.protobuf.FileDescriptorSet',
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(FileDescriptorSet.prototype, '__options__', {
        value: $root.__options,
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(FileDescriptorSet.prototype, '__root__', {
        value: $root,
        enumerable: false,
        configurable: false
      });
      return FileDescriptorSet;
    }());;
    _protobuf.FileDescriptorProto = (function () {
      class FileDescriptorProto {
        constructor(props) {
          this.name = props && props.name;
          this.package = props && props.package;
          this.dependency = props && props.dependency;
          this.publicDependency = props && props.publicDependency;
          this.weakDependency = props && props.weakDependency;
          this.messageType = props && props.messageType;
          this.enumType = props && props.enumType;
          this.service = props && props.service;
          this.extension = props && props.extension;
          this.options = props && props.options;
          this.sourceCodeInfo = props && props.sourceCodeInfo;
          this.syntax = props && props.syntax;
        }
        static toJSON(obj, helper, withDefaults) {
          if (obj == null) {
            return null;
          } else {
            const json = {};
            if (obj['name'] != null) {
              json['name'] = obj['name'];
            } else if (withDefaults) {
              json['name'] = '';
            }
            if (obj['package'] != null) {
              json['package'] = obj['package'];
            } else if (withDefaults) {
              json['package'] = '';
            }
            if (obj['dependency'] != null) {
              json['dependency'] = obj['dependency'].map(e => {
                return e;
              });
            } else if (withDefaults) {
              json['dependency'] = [];
            }
            if (obj['publicDependency'] != null) {
              json['publicDependency'] = obj['publicDependency'].map(e => {
                return e;
              });
            } else if (withDefaults) {
              json['publicDependency'] = [];
            }
            if (obj['weakDependency'] != null) {
              json['weakDependency'] = obj['weakDependency'].map(e => {
                return e;
              });
            } else if (withDefaults) {
              json['weakDependency'] = [];
            }
            if (obj['messageType'] != null) {
              json['messageType'] = obj['messageType'].map(e => {
                return $root.google.protobuf.DescriptorProto.toJSON(e, helper, withDefaults);
              });
            } else if (withDefaults) {
              json['messageType'] = [];
            }
            if (obj['enumType'] != null) {
              json['enumType'] = obj['enumType'].map(e => {
                return $root.google.protobuf.EnumDescriptorProto.toJSON(e, helper, withDefaults);
              });
            } else if (withDefaults) {
              json['enumType'] = [];
            }
            if (obj['service'] != null) {
              json['service'] = obj['service'].map(e => {
                return $root.google.protobuf.ServiceDescriptorProto.toJSON(e, helper, withDefaults);
              });
            } else if (withDefaults) {
              json['service'] = [];
            }
            if (obj['extension'] != null) {
              json['extension'] = obj['extension'].map(e => {
                return $root.google.protobuf.FieldDescriptorProto.toJSON(e, helper, withDefaults);
              });
            } else if (withDefaults) {
              json['extension'] = [];
            }
            if (obj['options'] != null) {
              json['options'] = $root.google.protobuf.FileOptions.toJSON(obj['options'], helper, withDefaults);
            } else if (withDefaults) {
              delete json['options'];
            }
            if (obj['sourceCodeInfo'] != null) {
              json['sourceCodeInfo'] = $root.google.protobuf.SourceCodeInfo.toJSON(obj['sourceCodeInfo'], helper, withDefaults);
            } else if (withDefaults) {
              delete json['sourceCodeInfo'];
            }
            if (obj['syntax'] != null) {
              json['syntax'] = obj['syntax'];
            } else if (withDefaults) {
              json['syntax'] = '';
            }
            return json;
          }
        }
        static fromJSON(json, helper, withDefaults) {
          if (typeof json === 'object' && !Array.isArray(json)) {
            const result = new $root.google.protobuf.FileDescriptorProto();
            if (json['name'] != null) {
              result['name'] = json['name'];
            } else if (withDefaults !== false) {
              result['name'] = '';
            } else {
              delete result['name'];
            }
            if (json['package'] != null) {
              result['package'] = json['package'];
            } else if (withDefaults !== false) {
              result['package'] = '';
            } else {
              delete result['package'];
            }
            if (json['dependency'] != null) {
              result['dependency'] = Array.isArray(json['dependency']) ? json['dependency'].map(e => {
                return e;
              }) : json['dependency'];
            } else if (withDefaults !== false) {
              result['dependency'] = [];
            } else {
              delete result['dependency'];
            }
            if (json['publicDependency'] != null) {
              result['publicDependency'] = Array.isArray(json['publicDependency']) ? json['publicDependency'].map(e => {
                return e;
              }) : json['publicDependency'];
            } else if (withDefaults !== false) {
              result['publicDependency'] = [];
            } else {
              delete result['publicDependency'];
            }
            if (json['weakDependency'] != null) {
              result['weakDependency'] = Array.isArray(json['weakDependency']) ? json['weakDependency'].map(e => {
                return e;
              }) : json['weakDependency'];
            } else if (withDefaults !== false) {
              result['weakDependency'] = [];
            } else {
              delete result['weakDependency'];
            }
            if (json['messageType'] != null) {
              result['messageType'] = Array.isArray(json['messageType']) ? json['messageType'].map(e => {
                return $root.google.protobuf.DescriptorProto.fromJSON(e, helper);
              }) : json['messageType'];
            } else if (withDefaults !== false) {
              result['messageType'] = [];
            } else {
              delete result['messageType'];
            }
            if (json['enumType'] != null) {
              result['enumType'] = Array.isArray(json['enumType']) ? json['enumType'].map(e => {
                return $root.google.protobuf.EnumDescriptorProto.fromJSON(e, helper);
              }) : json['enumType'];
            } else if (withDefaults !== false) {
              result['enumType'] = [];
            } else {
              delete result['enumType'];
            }
            if (json['service'] != null) {
              result['service'] = Array.isArray(json['service']) ? json['service'].map(e => {
                return $root.google.protobuf.ServiceDescriptorProto.fromJSON(e, helper);
              }) : json['service'];
            } else if (withDefaults !== false) {
              result['service'] = [];
            } else {
              delete result['service'];
            }
            if (json['extension'] != null) {
              result['extension'] = Array.isArray(json['extension']) ? json['extension'].map(e => {
                return $root.google.protobuf.FieldDescriptorProto.fromJSON(e, helper);
              }) : json['extension'];
            } else if (withDefaults !== false) {
              result['extension'] = [];
            } else {
              delete result['extension'];
            }
            if (json['options'] != null) {
              result['options'] = $root.google.protobuf.FileOptions.fromJSON(json['options'], helper);
            } else if (withDefaults !== false) {
              delete result['options'];
            } else {
              delete result['options'];
            }
            if (json['sourceCodeInfo'] != null) {
              result['sourceCodeInfo'] = $root.google.protobuf.SourceCodeInfo.fromJSON(json['sourceCodeInfo'], helper);
            } else if (withDefaults !== false) {
              delete result['sourceCodeInfo'];
            } else {
              delete result['sourceCodeInfo'];
            }
            if (json['syntax'] != null) {
              result['syntax'] = json['syntax'];
            } else if (withDefaults !== false) {
              result['syntax'] = '';
            } else {
              delete result['syntax'];
            }
            return result;
          } else
            return json;
        }
        static toGRPC(obj, helper) {
          if (obj == null) {
            return null;
          } else {
            const grpc = {};
            if (obj['name'] != null) {
              grpc['name'] = obj['name'];
            }
            if (obj['package'] != null) {
              grpc['package'] = obj['package'];
            }
            if (obj['dependency'] != null) {
              grpc['dependency'] = obj['dependency'].map(e => {
                return e;
              });
            }
            if (obj['publicDependency'] != null) {
              grpc['publicDependency'] = obj['publicDependency'].map(e => {
                return e;
              });
            }
            if (obj['weakDependency'] != null) {
              grpc['weakDependency'] = obj['weakDependency'].map(e => {
                return e;
              });
            }
            if (obj['messageType'] != null) {
              grpc['messageType'] = obj['messageType'].map(e => {
                return $root.google.protobuf.DescriptorProto.toGRPC(e, helper);
              });
            }
            if (obj['enumType'] != null) {
              grpc['enumType'] = obj['enumType'].map(e => {
                return $root.google.protobuf.EnumDescriptorProto.toGRPC(e, helper);
              });
            }
            if (obj['service'] != null) {
              grpc['service'] = obj['service'].map(e => {
                return $root.google.protobuf.ServiceDescriptorProto.toGRPC(e, helper);
              });
            }
            if (obj['extension'] != null) {
              grpc['extension'] = obj['extension'].map(e => {
                return $root.google.protobuf.FieldDescriptorProto.toGRPC(e, helper);
              });
            }
            if (obj['options'] != null) {
              grpc['options'] = $root.google.protobuf.FileOptions.toGRPC(obj['options'], helper);
            }
            if (obj['sourceCodeInfo'] != null) {
              grpc['sourceCodeInfo'] = $root.google.protobuf.SourceCodeInfo.toGRPC(obj['sourceCodeInfo'], helper);
            }
            if (obj['syntax'] != null) {
              grpc['syntax'] = obj['syntax'];
            }
            return grpc;
          }
        }
        static fromGRPC(grpc, helper) {
          if (grpc == null) {
            return null;
          } else {
            const result = new $root.google.protobuf.FileDescriptorProto();
            if (grpc['name'] != null) {
              result['name'] = grpc['name'];
            } else {
              result['name'] = '';
            }
            if (grpc['package'] != null) {
              result['package'] = grpc['package'];
            } else {
              result['package'] = '';
            }
            if (grpc['dependency'] != null) {
              result['dependency'] = grpc['dependency'].map(e => {
                return e;
              });
            } else {
              result['dependency'] = [];
            }
            if (grpc['publicDependency'] != null) {
              result['publicDependency'] = grpc['publicDependency'].map(e => {
                return e;
              });
            } else {
              result['publicDependency'] = [];
            }
            if (grpc['weakDependency'] != null) {
              result['weakDependency'] = grpc['weakDependency'].map(e => {
                return e;
              });
            } else {
              result['weakDependency'] = [];
            }
            if (grpc['messageType'] != null) {
              result['messageType'] = grpc['messageType'].map(e => {
                return $root.google.protobuf.DescriptorProto.fromGRPC(e, helper);
              });
            } else {
              result['messageType'] = [];
            }
            if (grpc['enumType'] != null) {
              result['enumType'] = grpc['enumType'].map(e => {
                return $root.google.protobuf.EnumDescriptorProto.fromGRPC(e, helper);
              });
            } else {
              result['enumType'] = [];
            }
            if (grpc['service'] != null) {
              result['service'] = grpc['service'].map(e => {
                return $root.google.protobuf.ServiceDescriptorProto.fromGRPC(e, helper);
              });
            } else {
              result['service'] = [];
            }
            if (grpc['extension'] != null) {
              result['extension'] = grpc['extension'].map(e => {
                return $root.google.protobuf.FieldDescriptorProto.fromGRPC(e, helper);
              });
            } else {
              result['extension'] = [];
            }
            if (grpc['options'] != null) {
              result['options'] = $root.google.protobuf.FileOptions.fromGRPC(grpc['options'], helper);
            } else {
              delete result['options'];
            }
            if (grpc['sourceCodeInfo'] != null) {
              result['sourceCodeInfo'] = $root.google.protobuf.SourceCodeInfo.fromGRPC(grpc['sourceCodeInfo'], helper);
            } else {
              delete result['sourceCodeInfo'];
            }
            if (grpc['syntax'] != null) {
              result['syntax'] = grpc['syntax'];
            } else {
              result['syntax'] = '';
            }
            return result;
          }
        }
      }
      __builtIn.Object.defineProperty(FileDescriptorProto.prototype, '__proto', {
        value: pbjs => {
          return $root.__lookup(pbjs)('google.protobuf.FileDescriptorProto');
        },
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(FileDescriptorProto.prototype, '__fqn__', {
        value: 'google.protobuf.FileDescriptorProto',
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(FileDescriptorProto.prototype, '__options__', {
        value: $root.__options,
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(FileDescriptorProto.prototype, '__root__', {
        value: $root,
        enumerable: false,
        configurable: false
      });
      return FileDescriptorProto;
    }());;
    _protobuf.DescriptorProto = (function () {
      class DescriptorProto {
        constructor(props) {
          this.name = props && props.name;
          this.field = props && props.field;
          this.extension = props && props.extension;
          this.nestedType = props && props.nestedType;
          this.enumType = props && props.enumType;
          this.extensionRange = props && props.extensionRange;
          this.oneofDecl = props && props.oneofDecl;
          this.options = props && props.options;
          this.reservedRange = props && props.reservedRange;
          this.reservedName = props && props.reservedName;
        }
        static toJSON(obj, helper, withDefaults) {
          if (obj == null) {
            return null;
          } else {
            const json = {};
            if (obj['name'] != null) {
              json['name'] = obj['name'];
            } else if (withDefaults) {
              json['name'] = '';
            }
            if (obj['field'] != null) {
              json['field'] = obj['field'].map(e => {
                return $root.google.protobuf.FieldDescriptorProto.toJSON(e, helper, withDefaults);
              });
            } else if (withDefaults) {
              json['field'] = [];
            }
            if (obj['extension'] != null) {
              json['extension'] = obj['extension'].map(e => {
                return $root.google.protobuf.FieldDescriptorProto.toJSON(e, helper, withDefaults);
              });
            } else if (withDefaults) {
              json['extension'] = [];
            }
            if (obj['nestedType'] != null) {
              json['nestedType'] = obj['nestedType'].map(e => {
                return $root.google.protobuf.DescriptorProto.toJSON(e, helper, withDefaults);
              });
            } else if (withDefaults) {
              json['nestedType'] = [];
            }
            if (obj['enumType'] != null) {
              json['enumType'] = obj['enumType'].map(e => {
                return $root.google.protobuf.EnumDescriptorProto.toJSON(e, helper, withDefaults);
              });
            } else if (withDefaults) {
              json['enumType'] = [];
            }
            if (obj['extensionRange'] != null) {
              json['extensionRange'] = obj['extensionRange'].map(e => {
                return $root.google.protobuf.DescriptorProto.ExtensionRange.toJSON(e, helper, withDefaults);
              });
            } else if (withDefaults) {
              json['extensionRange'] = [];
            }
            if (obj['oneofDecl'] != null) {
              json['oneofDecl'] = obj['oneofDecl'].map(e => {
                return $root.google.protobuf.OneofDescriptorProto.toJSON(e, helper, withDefaults);
              });
            } else if (withDefaults) {
              json['oneofDecl'] = [];
            }
            if (obj['options'] != null) {
              json['options'] = $root.google.protobuf.MessageOptions.toJSON(obj['options'], helper, withDefaults);
            } else if (withDefaults) {
              delete json['options'];
            }
            if (obj['reservedRange'] != null) {
              json['reservedRange'] = obj['reservedRange'].map(e => {
                return $root.google.protobuf.DescriptorProto.ReservedRange.toJSON(e, helper, withDefaults);
              });
            } else if (withDefaults) {
              json['reservedRange'] = [];
            }
            if (obj['reservedName'] != null) {
              json['reservedName'] = obj['reservedName'].map(e => {
                return e;
              });
            } else if (withDefaults) {
              json['reservedName'] = [];
            }
            return json;
          }
        }
        static fromJSON(json, helper, withDefaults) {
          if (typeof json === 'object' && !Array.isArray(json)) {
            const result = new $root.google.protobuf.DescriptorProto();
            if (json['name'] != null) {
              result['name'] = json['name'];
            } else if (withDefaults !== false) {
              result['name'] = '';
            } else {
              delete result['name'];
            }
            if (json['field'] != null) {
              result['field'] = Array.isArray(json['field']) ? json['field'].map(e => {
                return $root.google.protobuf.FieldDescriptorProto.fromJSON(e, helper);
              }) : json['field'];
            } else if (withDefaults !== false) {
              result['field'] = [];
            } else {
              delete result['field'];
            }
            if (json['extension'] != null) {
              result['extension'] = Array.isArray(json['extension']) ? json['extension'].map(e => {
                return $root.google.protobuf.FieldDescriptorProto.fromJSON(e, helper);
              }) : json['extension'];
            } else if (withDefaults !== false) {
              result['extension'] = [];
            } else {
              delete result['extension'];
            }
            if (json['nestedType'] != null) {
              result['nestedType'] = Array.isArray(json['nestedType']) ? json['nestedType'].map(e => {
                return $root.google.protobuf.DescriptorProto.fromJSON(e, helper);
              }) : json['nestedType'];
            } else if (withDefaults !== false) {
              result['nestedType'] = [];
            } else {
              delete result['nestedType'];
            }
            if (json['enumType'] != null) {
              result['enumType'] = Array.isArray(json['enumType']) ? json['enumType'].map(e => {
                return $root.google.protobuf.EnumDescriptorProto.fromJSON(e, helper);
              }) : json['enumType'];
            } else if (withDefaults !== false) {
              result['enumType'] = [];
            } else {
              delete result['enumType'];
            }
            if (json['extensionRange'] != null) {
              result['extensionRange'] = Array.isArray(json['extensionRange']) ? json['extensionRange'].map(e => {
                return $root.google.protobuf.DescriptorProto.ExtensionRange.fromJSON(e, helper);
              }) : json['extensionRange'];
            } else if (withDefaults !== false) {
              result['extensionRange'] = [];
            } else {
              delete result['extensionRange'];
            }
            if (json['oneofDecl'] != null) {
              result['oneofDecl'] = Array.isArray(json['oneofDecl']) ? json['oneofDecl'].map(e => {
                return $root.google.protobuf.OneofDescriptorProto.fromJSON(e, helper);
              }) : json['oneofDecl'];
            } else if (withDefaults !== false) {
              result['oneofDecl'] = [];
            } else {
              delete result['oneofDecl'];
            }
            if (json['options'] != null) {
              result['options'] = $root.google.protobuf.MessageOptions.fromJSON(json['options'], helper);
            } else if (withDefaults !== false) {
              delete result['options'];
            } else {
              delete result['options'];
            }
            if (json['reservedRange'] != null) {
              result['reservedRange'] = Array.isArray(json['reservedRange']) ? json['reservedRange'].map(e => {
                return $root.google.protobuf.DescriptorProto.ReservedRange.fromJSON(e, helper);
              }) : json['reservedRange'];
            } else if (withDefaults !== false) {
              result['reservedRange'] = [];
            } else {
              delete result['reservedRange'];
            }
            if (json['reservedName'] != null) {
              result['reservedName'] = Array.isArray(json['reservedName']) ? json['reservedName'].map(e => {
                return e;
              }) : json['reservedName'];
            } else if (withDefaults !== false) {
              result['reservedName'] = [];
            } else {
              delete result['reservedName'];
            }
            return result;
          } else
            return json;
        }
        static toGRPC(obj, helper) {
          if (obj == null) {
            return null;
          } else {
            const grpc = {};
            if (obj['name'] != null) {
              grpc['name'] = obj['name'];
            }
            if (obj['field'] != null) {
              grpc['field'] = obj['field'].map(e => {
                return $root.google.protobuf.FieldDescriptorProto.toGRPC(e, helper);
              });
            }
            if (obj['extension'] != null) {
              grpc['extension'] = obj['extension'].map(e => {
                return $root.google.protobuf.FieldDescriptorProto.toGRPC(e, helper);
              });
            }
            if (obj['nestedType'] != null) {
              grpc['nestedType'] = obj['nestedType'].map(e => {
                return $root.google.protobuf.DescriptorProto.toGRPC(e, helper);
              });
            }
            if (obj['enumType'] != null) {
              grpc['enumType'] = obj['enumType'].map(e => {
                return $root.google.protobuf.EnumDescriptorProto.toGRPC(e, helper);
              });
            }
            if (obj['extensionRange'] != null) {
              grpc['extensionRange'] = obj['extensionRange'].map(e => {
                return $root.google.protobuf.DescriptorProto.ExtensionRange.toGRPC(e, helper);
              });
            }
            if (obj['oneofDecl'] != null) {
              grpc['oneofDecl'] = obj['oneofDecl'].map(e => {
                return $root.google.protobuf.OneofDescriptorProto.toGRPC(e, helper);
              });
            }
            if (obj['options'] != null) {
              grpc['options'] = $root.google.protobuf.MessageOptions.toGRPC(obj['options'], helper);
            }
            if (obj['reservedRange'] != null) {
              grpc['reservedRange'] = obj['reservedRange'].map(e => {
                return $root.google.protobuf.DescriptorProto.ReservedRange.toGRPC(e, helper);
              });
            }
            if (obj['reservedName'] != null) {
              grpc['reservedName'] = obj['reservedName'].map(e => {
                return e;
              });
            }
            return grpc;
          }
        }
        static fromGRPC(grpc, helper) {
          if (grpc == null) {
            return null;
          } else {
            const result = new $root.google.protobuf.DescriptorProto();
            if (grpc['name'] != null) {
              result['name'] = grpc['name'];
            } else {
              result['name'] = '';
            }
            if (grpc['field'] != null) {
              result['field'] = grpc['field'].map(e => {
                return $root.google.protobuf.FieldDescriptorProto.fromGRPC(e, helper);
              });
            } else {
              result['field'] = [];
            }
            if (grpc['extension'] != null) {
              result['extension'] = grpc['extension'].map(e => {
                return $root.google.protobuf.FieldDescriptorProto.fromGRPC(e, helper);
              });
            } else {
              result['extension'] = [];
            }
            if (grpc['nestedType'] != null) {
              result['nestedType'] = grpc['nestedType'].map(e => {
                return $root.google.protobuf.DescriptorProto.fromGRPC(e, helper);
              });
            } else {
              result['nestedType'] = [];
            }
            if (grpc['enumType'] != null) {
              result['enumType'] = grpc['enumType'].map(e => {
                return $root.google.protobuf.EnumDescriptorProto.fromGRPC(e, helper);
              });
            } else {
              result['enumType'] = [];
            }
            if (grpc['extensionRange'] != null) {
              result['extensionRange'] = grpc['extensionRange'].map(e => {
                return $root.google.protobuf.DescriptorProto.ExtensionRange.fromGRPC(e, helper);
              });
            } else {
              result['extensionRange'] = [];
            }
            if (grpc['oneofDecl'] != null) {
              result['oneofDecl'] = grpc['oneofDecl'].map(e => {
                return $root.google.protobuf.OneofDescriptorProto.fromGRPC(e, helper);
              });
            } else {
              result['oneofDecl'] = [];
            }
            if (grpc['options'] != null) {
              result['options'] = $root.google.protobuf.MessageOptions.fromGRPC(grpc['options'], helper);
            } else {
              delete result['options'];
            }
            if (grpc['reservedRange'] != null) {
              result['reservedRange'] = grpc['reservedRange'].map(e => {
                return $root.google.protobuf.DescriptorProto.ReservedRange.fromGRPC(e, helper);
              });
            } else {
              result['reservedRange'] = [];
            }
            if (grpc['reservedName'] != null) {
              result['reservedName'] = grpc['reservedName'].map(e => {
                return e;
              });
            } else {
              result['reservedName'] = [];
            }
            return result;
          }
        }
      }
      DescriptorProto.ExtensionRange = (function () {
        class ExtensionRange {
          constructor(props) {
            this.start = props && props.start;
            this.end = props && props.end;
            this.options = props && props.options;
          }
          static toJSON(obj, helper, withDefaults) {
            if (obj == null) {
              return null;
            } else {
              const json = {};
              if (obj['start'] != null) {
                json['start'] = obj['start'];
              } else if (withDefaults) {
                json['start'] = 0;
              }
              if (obj['end'] != null) {
                json['end'] = obj['end'];
              } else if (withDefaults) {
                json['end'] = 0;
              }
              if (obj['options'] != null) {
                json['options'] = $root.google.protobuf.ExtensionRangeOptions.toJSON(obj['options'], helper, withDefaults);
              } else if (withDefaults) {
                delete json['options'];
              }
              return json;
            }
          }
          static fromJSON(json, helper, withDefaults) {
            if (typeof json === 'object' && !Array.isArray(json)) {
              const result = new $root.google.protobuf.DescriptorProto.ExtensionRange();
              if (json['start'] != null) {
                result['start'] = json['start'];
              } else if (withDefaults !== false) {
                result['start'] = 0;
              } else {
                delete result['start'];
              }
              if (json['end'] != null) {
                result['end'] = json['end'];
              } else if (withDefaults !== false) {
                result['end'] = 0;
              } else {
                delete result['end'];
              }
              if (json['options'] != null) {
                result['options'] = $root.google.protobuf.ExtensionRangeOptions.fromJSON(json['options'], helper);
              } else if (withDefaults !== false) {
                delete result['options'];
              } else {
                delete result['options'];
              }
              return result;
            } else
              return json;
          }
          static toGRPC(obj, helper) {
            if (obj == null) {
              return null;
            } else {
              const grpc = {};
              if (obj['start'] != null) {
                grpc['start'] = obj['start'];
              }
              if (obj['end'] != null) {
                grpc['end'] = obj['end'];
              }
              if (obj['options'] != null) {
                grpc['options'] = $root.google.protobuf.ExtensionRangeOptions.toGRPC(obj['options'], helper);
              }
              return grpc;
            }
          }
          static fromGRPC(grpc, helper) {
            if (grpc == null) {
              return null;
            } else {
              const result = new $root.google.protobuf.DescriptorProto.ExtensionRange();
              if (grpc['start'] != null) {
                result['start'] = grpc['start'];
              } else {
                result['start'] = 0;
              }
              if (grpc['end'] != null) {
                result['end'] = grpc['end'];
              } else {
                result['end'] = 0;
              }
              if (grpc['options'] != null) {
                result['options'] = $root.google.protobuf.ExtensionRangeOptions.fromGRPC(grpc['options'], helper);
              } else {
                delete result['options'];
              }
              return result;
            }
          }
        }
        __builtIn.Object.defineProperty(ExtensionRange.prototype, '__proto', {
          value: pbjs => {
            return $root.__lookup(pbjs)('google.protobuf.DescriptorProto.ExtensionRange');
          },
          enumerable: false,
          configurable: false
        });
        __builtIn.Object.defineProperty(ExtensionRange.prototype, '__fqn__', {
          value: 'google.protobuf.DescriptorProto.ExtensionRange',
          enumerable: false,
          configurable: false
        });
        __builtIn.Object.defineProperty(ExtensionRange.prototype, '__options__', {
          value: $root.__options,
          enumerable: false,
          configurable: false
        });
        __builtIn.Object.defineProperty(ExtensionRange.prototype, '__root__', {
          value: $root,
          enumerable: false,
          configurable: false
        });
        return ExtensionRange;
      }());;
      DescriptorProto.ReservedRange = (function () {
        class ReservedRange {
          constructor(props) {
            this.start = props && props.start;
            this.end = props && props.end;
          }
          static toJSON(obj, helper, withDefaults) {
            if (obj == null) {
              return null;
            } else {
              const json = {};
              if (obj['start'] != null) {
                json['start'] = obj['start'];
              } else if (withDefaults) {
                json['start'] = 0;
              }
              if (obj['end'] != null) {
                json['end'] = obj['end'];
              } else if (withDefaults) {
                json['end'] = 0;
              }
              return json;
            }
          }
          static fromJSON(json, helper, withDefaults) {
            if (typeof json === 'object' && !Array.isArray(json)) {
              const result = new $root.google.protobuf.DescriptorProto.ReservedRange();
              if (json['start'] != null) {
                result['start'] = json['start'];
              } else if (withDefaults !== false) {
                result['start'] = 0;
              } else {
                delete result['start'];
              }
              if (json['end'] != null) {
                result['end'] = json['end'];
              } else if (withDefaults !== false) {
                result['end'] = 0;
              } else {
                delete result['end'];
              }
              return result;
            } else
              return json;
          }
          static toGRPC(obj, helper) {
            if (obj == null) {
              return null;
            } else {
              const grpc = {};
              if (obj['start'] != null) {
                grpc['start'] = obj['start'];
              }
              if (obj['end'] != null) {
                grpc['end'] = obj['end'];
              }
              return grpc;
            }
          }
          static fromGRPC(grpc, helper) {
            if (grpc == null) {
              return null;
            } else {
              const result = new $root.google.protobuf.DescriptorProto.ReservedRange();
              if (grpc['start'] != null) {
                result['start'] = grpc['start'];
              } else {
                result['start'] = 0;
              }
              if (grpc['end'] != null) {
                result['end'] = grpc['end'];
              } else {
                result['end'] = 0;
              }
              return result;
            }
          }
        }
        __builtIn.Object.defineProperty(ReservedRange.prototype, '__proto', {
          value: pbjs => {
            return $root.__lookup(pbjs)('google.protobuf.DescriptorProto.ReservedRange');
          },
          enumerable: false,
          configurable: false
        });
        __builtIn.Object.defineProperty(ReservedRange.prototype, '__fqn__', {
          value: 'google.protobuf.DescriptorProto.ReservedRange',
          enumerable: false,
          configurable: false
        });
        __builtIn.Object.defineProperty(ReservedRange.prototype, '__options__', {
          value: $root.__options,
          enumerable: false,
          configurable: false
        });
        __builtIn.Object.defineProperty(ReservedRange.prototype, '__root__', {
          value: $root,
          enumerable: false,
          configurable: false
        });
        return ReservedRange;
      }());;
      DescriptorProto.ExtensionRange = (function () {
        class ExtensionRange {
          constructor(props) {
            this.start = props && props.start;
            this.end = props && props.end;
            this.options = props && props.options;
          }
          static toJSON(obj, helper, withDefaults) {
            if (obj == null) {
              return null;
            } else {
              const json = {};
              if (obj['start'] != null) {
                json['start'] = obj['start'];
              } else if (withDefaults) {
                json['start'] = 0;
              }
              if (obj['end'] != null) {
                json['end'] = obj['end'];
              } else if (withDefaults) {
                json['end'] = 0;
              }
              if (obj['options'] != null) {
                json['options'] = $root.google.protobuf.ExtensionRangeOptions.toJSON(obj['options'], helper, withDefaults);
              } else if (withDefaults) {
                delete json['options'];
              }
              return json;
            }
          }
          static fromJSON(json, helper, withDefaults) {
            if (typeof json === 'object' && !Array.isArray(json)) {
              const result = new $root.google.protobuf.DescriptorProto.ExtensionRange();
              if (json['start'] != null) {
                result['start'] = json['start'];
              } else if (withDefaults !== false) {
                result['start'] = 0;
              } else {
                delete result['start'];
              }
              if (json['end'] != null) {
                result['end'] = json['end'];
              } else if (withDefaults !== false) {
                result['end'] = 0;
              } else {
                delete result['end'];
              }
              if (json['options'] != null) {
                result['options'] = $root.google.protobuf.ExtensionRangeOptions.fromJSON(json['options'], helper);
              } else if (withDefaults !== false) {
                delete result['options'];
              } else {
                delete result['options'];
              }
              return result;
            } else
              return json;
          }
          static toGRPC(obj, helper) {
            if (obj == null) {
              return null;
            } else {
              const grpc = {};
              if (obj['start'] != null) {
                grpc['start'] = obj['start'];
              }
              if (obj['end'] != null) {
                grpc['end'] = obj['end'];
              }
              if (obj['options'] != null) {
                grpc['options'] = $root.google.protobuf.ExtensionRangeOptions.toGRPC(obj['options'], helper);
              }
              return grpc;
            }
          }
          static fromGRPC(grpc, helper) {
            if (grpc == null) {
              return null;
            } else {
              const result = new $root.google.protobuf.DescriptorProto.ExtensionRange();
              if (grpc['start'] != null) {
                result['start'] = grpc['start'];
              } else {
                result['start'] = 0;
              }
              if (grpc['end'] != null) {
                result['end'] = grpc['end'];
              } else {
                result['end'] = 0;
              }
              if (grpc['options'] != null) {
                result['options'] = $root.google.protobuf.ExtensionRangeOptions.fromGRPC(grpc['options'], helper);
              } else {
                delete result['options'];
              }
              return result;
            }
          }
        }
        __builtIn.Object.defineProperty(ExtensionRange.prototype, '__proto', {
          value: pbjs => {
            return $root.__lookup(pbjs)('google.protobuf.DescriptorProto.ExtensionRange');
          },
          enumerable: false,
          configurable: false
        });
        __builtIn.Object.defineProperty(ExtensionRange.prototype, '__fqn__', {
          value: 'google.protobuf.DescriptorProto.ExtensionRange',
          enumerable: false,
          configurable: false
        });
        __builtIn.Object.defineProperty(ExtensionRange.prototype, '__options__', {
          value: $root.__options,
          enumerable: false,
          configurable: false
        });
        __builtIn.Object.defineProperty(ExtensionRange.prototype, '__root__', {
          value: $root,
          enumerable: false,
          configurable: false
        });
        return ExtensionRange;
      }());;
      DescriptorProto.ReservedRange = (function () {
        class ReservedRange {
          constructor(props) {
            this.start = props && props.start;
            this.end = props && props.end;
          }
          static toJSON(obj, helper, withDefaults) {
            if (obj == null) {
              return null;
            } else {
              const json = {};
              if (obj['start'] != null) {
                json['start'] = obj['start'];
              } else if (withDefaults) {
                json['start'] = 0;
              }
              if (obj['end'] != null) {
                json['end'] = obj['end'];
              } else if (withDefaults) {
                json['end'] = 0;
              }
              return json;
            }
          }
          static fromJSON(json, helper, withDefaults) {
            if (typeof json === 'object' && !Array.isArray(json)) {
              const result = new $root.google.protobuf.DescriptorProto.ReservedRange();
              if (json['start'] != null) {
                result['start'] = json['start'];
              } else if (withDefaults !== false) {
                result['start'] = 0;
              } else {
                delete result['start'];
              }
              if (json['end'] != null) {
                result['end'] = json['end'];
              } else if (withDefaults !== false) {
                result['end'] = 0;
              } else {
                delete result['end'];
              }
              return result;
            } else
              return json;
          }
          static toGRPC(obj, helper) {
            if (obj == null) {
              return null;
            } else {
              const grpc = {};
              if (obj['start'] != null) {
                grpc['start'] = obj['start'];
              }
              if (obj['end'] != null) {
                grpc['end'] = obj['end'];
              }
              return grpc;
            }
          }
          static fromGRPC(grpc, helper) {
            if (grpc == null) {
              return null;
            } else {
              const result = new $root.google.protobuf.DescriptorProto.ReservedRange();
              if (grpc['start'] != null) {
                result['start'] = grpc['start'];
              } else {
                result['start'] = 0;
              }
              if (grpc['end'] != null) {
                result['end'] = grpc['end'];
              } else {
                result['end'] = 0;
              }
              return result;
            }
          }
        }
        __builtIn.Object.defineProperty(ReservedRange.prototype, '__proto', {
          value: pbjs => {
            return $root.__lookup(pbjs)('google.protobuf.DescriptorProto.ReservedRange');
          },
          enumerable: false,
          configurable: false
        });
        __builtIn.Object.defineProperty(ReservedRange.prototype, '__fqn__', {
          value: 'google.protobuf.DescriptorProto.ReservedRange',
          enumerable: false,
          configurable: false
        });
        __builtIn.Object.defineProperty(ReservedRange.prototype, '__options__', {
          value: $root.__options,
          enumerable: false,
          configurable: false
        });
        __builtIn.Object.defineProperty(ReservedRange.prototype, '__root__', {
          value: $root,
          enumerable: false,
          configurable: false
        });
        return ReservedRange;
      }());;
      __builtIn.Object.defineProperty(DescriptorProto.prototype, '__proto', {
        value: pbjs => {
          return $root.__lookup(pbjs)('google.protobuf.DescriptorProto');
        },
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(DescriptorProto.prototype, '__fqn__', {
        value: 'google.protobuf.DescriptorProto',
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(DescriptorProto.prototype, '__options__', {
        value: $root.__options,
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(DescriptorProto.prototype, '__root__', {
        value: $root,
        enumerable: false,
        configurable: false
      });
      return DescriptorProto;
    }());;
    _protobuf.ExtensionRangeOptions = (function () {
      class ExtensionRangeOptions {
        constructor(props) {
          this.uninterpretedOption = props && props.uninterpretedOption;
        }
        static toJSON(obj, helper, withDefaults) {
          if (obj == null) {
            return null;
          } else {
            const json = {};
            if (obj['uninterpretedOption'] != null) {
              json['uninterpretedOption'] = obj['uninterpretedOption'].map(e => {
                return $root.google.protobuf.UninterpretedOption.toJSON(e, helper, withDefaults);
              });
            } else if (withDefaults) {
              json['uninterpretedOption'] = [];
            }
            return json;
          }
        }
        static fromJSON(json, helper, withDefaults) {
          if (typeof json === 'object' && !Array.isArray(json)) {
            const result = new $root.google.protobuf.ExtensionRangeOptions();
            if (json['uninterpretedOption'] != null) {
              result['uninterpretedOption'] = Array.isArray(json['uninterpretedOption']) ? json['uninterpretedOption'].map(e => {
                return $root.google.protobuf.UninterpretedOption.fromJSON(e, helper);
              }) : json['uninterpretedOption'];
            } else if (withDefaults !== false) {
              result['uninterpretedOption'] = [];
            } else {
              delete result['uninterpretedOption'];
            }
            return result;
          } else
            return json;
        }
        static toGRPC(obj, helper) {
          if (obj == null) {
            return null;
          } else {
            const grpc = {};
            if (obj['uninterpretedOption'] != null) {
              grpc['uninterpretedOption'] = obj['uninterpretedOption'].map(e => {
                return $root.google.protobuf.UninterpretedOption.toGRPC(e, helper);
              });
            }
            return grpc;
          }
        }
        static fromGRPC(grpc, helper) {
          if (grpc == null) {
            return null;
          } else {
            const result = new $root.google.protobuf.ExtensionRangeOptions();
            if (grpc['uninterpretedOption'] != null) {
              result['uninterpretedOption'] = grpc['uninterpretedOption'].map(e => {
                return $root.google.protobuf.UninterpretedOption.fromGRPC(e, helper);
              });
            } else {
              result['uninterpretedOption'] = [];
            }
            return result;
          }
        }
      }
      __builtIn.Object.defineProperty(ExtensionRangeOptions.prototype, '__proto', {
        value: pbjs => {
          return $root.__lookup(pbjs)('google.protobuf.ExtensionRangeOptions');
        },
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(ExtensionRangeOptions.prototype, '__fqn__', {
        value: 'google.protobuf.ExtensionRangeOptions',
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(ExtensionRangeOptions.prototype, '__options__', {
        value: $root.__options,
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(ExtensionRangeOptions.prototype, '__root__', {
        value: $root,
        enumerable: false,
        configurable: false
      });
      return ExtensionRangeOptions;
    }());;
    _protobuf.FieldDescriptorProto = (function () {
      class FieldDescriptorProto {
        constructor(props) {
          this.name = props && props.name;
          this.number = props && props.number;
          this.label = props && props.label;
          this.type = props && props.type;
          this.typeName = props && props.typeName;
          this.extendee = props && props.extendee;
          this.defaultValue = props && props.defaultValue;
          this.oneofIndex = props && props.oneofIndex;
          this.jsonName = props && props.jsonName;
          this.options = props && props.options;
          this.proto3Optional = props && props.proto3Optional;
        }
        static toJSON(obj, helper, withDefaults) {
          if (obj == null) {
            return null;
          } else {
            const json = {};
            if (obj['name'] != null) {
              json['name'] = obj['name'];
            } else if (withDefaults) {
              json['name'] = '';
            }
            if (obj['number'] != null) {
              json['number'] = obj['number'];
            } else if (withDefaults) {
              json['number'] = 0;
            }
            if (obj['label'] != null) {
              json['label'] = $root.google.protobuf.FieldDescriptorProto.Label[obj['label']];
            } else if (withDefaults) {
              json['label'] = 1;
            }
            if (obj['type'] != null) {
              json['type'] = $root.google.protobuf.FieldDescriptorProto.Type[obj['type']];
            } else if (withDefaults) {
              json['type'] = 1;
            }
            if (obj['typeName'] != null) {
              json['typeName'] = obj['typeName'];
            } else if (withDefaults) {
              json['typeName'] = '';
            }
            if (obj['extendee'] != null) {
              json['extendee'] = obj['extendee'];
            } else if (withDefaults) {
              json['extendee'] = '';
            }
            if (obj['defaultValue'] != null) {
              json['defaultValue'] = obj['defaultValue'];
            } else if (withDefaults) {
              json['defaultValue'] = '';
            }
            if (obj['oneofIndex'] != null) {
              json['oneofIndex'] = obj['oneofIndex'];
            } else if (withDefaults) {
              json['oneofIndex'] = 0;
            }
            if (obj['jsonName'] != null) {
              json['jsonName'] = obj['jsonName'];
            } else if (withDefaults) {
              json['jsonName'] = '';
            }
            if (obj['options'] != null) {
              json['options'] = $root.google.protobuf.FieldOptions.toJSON(obj['options'], helper, withDefaults);
            } else if (withDefaults) {
              delete json['options'];
            }
            if (obj['proto3Optional'] != null) {
              json['proto3Optional'] = obj['proto3Optional'];
            } else if (withDefaults) {
              json['proto3Optional'] = false;
            }
            return json;
          }
        }
        static fromJSON(json, helper, withDefaults) {
          if (typeof json === 'object' && !Array.isArray(json)) {
            const result = new $root.google.protobuf.FieldDescriptorProto();
            if (json['name'] != null) {
              result['name'] = json['name'];
            } else if (withDefaults !== false) {
              result['name'] = '';
            } else {
              delete result['name'];
            }
            if (json['number'] != null) {
              result['number'] = json['number'];
            } else if (withDefaults !== false) {
              result['number'] = 0;
            } else {
              delete result['number'];
            }
            if (json['label'] != null) {
              result['label'] = typeof json['label'] === 'string' ? $root.google.protobuf.FieldDescriptorProto.Label[json['label']] : json['label'];
            } else if (withDefaults !== false) {
              result['label'] = 1;
            } else {
              delete result['label'];
            }
            if (json['type'] != null) {
              result['type'] = typeof json['type'] === 'string' ? $root.google.protobuf.FieldDescriptorProto.Type[json['type']] : json['type'];
            } else if (withDefaults !== false) {
              result['type'] = 1;
            } else {
              delete result['type'];
            }
            if (json['typeName'] != null) {
              result['typeName'] = json['typeName'];
            } else if (withDefaults !== false) {
              result['typeName'] = '';
            } else {
              delete result['typeName'];
            }
            if (json['extendee'] != null) {
              result['extendee'] = json['extendee'];
            } else if (withDefaults !== false) {
              result['extendee'] = '';
            } else {
              delete result['extendee'];
            }
            if (json['defaultValue'] != null) {
              result['defaultValue'] = json['defaultValue'];
            } else if (withDefaults !== false) {
              result['defaultValue'] = '';
            } else {
              delete result['defaultValue'];
            }
            if (json['oneofIndex'] != null) {
              result['oneofIndex'] = json['oneofIndex'];
            } else if (withDefaults !== false) {
              result['oneofIndex'] = 0;
            } else {
              delete result['oneofIndex'];
            }
            if (json['jsonName'] != null) {
              result['jsonName'] = json['jsonName'];
            } else if (withDefaults !== false) {
              result['jsonName'] = '';
            } else {
              delete result['jsonName'];
            }
            if (json['options'] != null) {
              result['options'] = $root.google.protobuf.FieldOptions.fromJSON(json['options'], helper);
            } else if (withDefaults !== false) {
              delete result['options'];
            } else {
              delete result['options'];
            }
            if (json['proto3Optional'] != null) {
              result['proto3Optional'] = json['proto3Optional'];
            } else if (withDefaults !== false) {
              result['proto3Optional'] = false;
            } else {
              delete result['proto3Optional'];
            }
            return result;
          } else
            return json;
        }
        static toGRPC(obj, helper) {
          if (obj == null) {
            return null;
          } else {
            const grpc = {};
            if (obj['name'] != null) {
              grpc['name'] = obj['name'];
            }
            if (obj['number'] != null) {
              grpc['number'] = obj['number'];
            }
            if (obj['label'] != null) {
              grpc['label'] = obj['label'];
            }
            if (obj['type'] != null) {
              grpc['type'] = obj['type'];
            }
            if (obj['typeName'] != null) {
              grpc['typeName'] = obj['typeName'];
            }
            if (obj['extendee'] != null) {
              grpc['extendee'] = obj['extendee'];
            }
            if (obj['defaultValue'] != null) {
              grpc['defaultValue'] = obj['defaultValue'];
            }
            if (obj['oneofIndex'] != null) {
              grpc['oneofIndex'] = obj['oneofIndex'];
            }
            if (obj['jsonName'] != null) {
              grpc['jsonName'] = obj['jsonName'];
            }
            if (obj['options'] != null) {
              grpc['options'] = $root.google.protobuf.FieldOptions.toGRPC(obj['options'], helper);
            }
            if (obj['proto3Optional'] != null) {
              grpc['proto3Optional'] = obj['proto3Optional'];
            }
            return grpc;
          }
        }
        static fromGRPC(grpc, helper) {
          if (grpc == null) {
            return null;
          } else {
            const result = new $root.google.protobuf.FieldDescriptorProto();
            if (grpc['name'] != null) {
              result['name'] = grpc['name'];
            } else {
              result['name'] = '';
            }
            if (grpc['number'] != null) {
              result['number'] = grpc['number'];
            } else {
              result['number'] = 0;
            }
            if (grpc['label'] != null) {
              result['label'] = grpc['label'];
            } else {
              result['label'] = 1;
            }
            if (grpc['type'] != null) {
              result['type'] = grpc['type'];
            } else {
              result['type'] = 1;
            }
            if (grpc['typeName'] != null) {
              result['typeName'] = grpc['typeName'];
            } else {
              result['typeName'] = '';
            }
            if (grpc['extendee'] != null) {
              result['extendee'] = grpc['extendee'];
            } else {
              result['extendee'] = '';
            }
            if (grpc['defaultValue'] != null) {
              result['defaultValue'] = grpc['defaultValue'];
            } else {
              result['defaultValue'] = '';
            }
            if (grpc['oneofIndex'] != null) {
              result['oneofIndex'] = grpc['oneofIndex'];
            } else {
              result['oneofIndex'] = 0;
            }
            if (grpc['jsonName'] != null) {
              result['jsonName'] = grpc['jsonName'];
            } else {
              result['jsonName'] = '';
            }
            if (grpc['options'] != null) {
              result['options'] = $root.google.protobuf.FieldOptions.fromGRPC(grpc['options'], helper);
            } else {
              delete result['options'];
            }
            if (grpc['proto3Optional'] != null) {
              result['proto3Optional'] = grpc['proto3Optional'];
            } else {
              result['proto3Optional'] = false;
            }
            return result;
          }
        }
      }
      FieldDescriptorProto.Type = {
        'TYPE_DOUBLE': 1,
        1: 'TYPE_DOUBLE',
        'TYPE_FLOAT': 2,
        2: 'TYPE_FLOAT',
        'TYPE_INT64': 3,
        3: 'TYPE_INT64',
        'TYPE_UINT64': 4,
        4: 'TYPE_UINT64',
        'TYPE_INT32': 5,
        5: 'TYPE_INT32',
        'TYPE_FIXED64': 6,
        6: 'TYPE_FIXED64',
        'TYPE_FIXED32': 7,
        7: 'TYPE_FIXED32',
        'TYPE_BOOL': 8,
        8: 'TYPE_BOOL',
        'TYPE_STRING': 9,
        9: 'TYPE_STRING',
        'TYPE_GROUP': 10,
        10: 'TYPE_GROUP',
        'TYPE_MESSAGE': 11,
        11: 'TYPE_MESSAGE',
        'TYPE_BYTES': 12,
        12: 'TYPE_BYTES',
        'TYPE_UINT32': 13,
        13: 'TYPE_UINT32',
        'TYPE_ENUM': 14,
        14: 'TYPE_ENUM',
        'TYPE_SFIXED32': 15,
        15: 'TYPE_SFIXED32',
        'TYPE_SFIXED64': 16,
        16: 'TYPE_SFIXED64',
        'TYPE_SINT32': 17,
        17: 'TYPE_SINT32',
        'TYPE_SINT64': 18,
        18: 'TYPE_SINT64'
      };
      FieldDescriptorProto.Label = {
        'LABEL_OPTIONAL': 1,
        1: 'LABEL_OPTIONAL',
        'LABEL_REQUIRED': 2,
        2: 'LABEL_REQUIRED',
        'LABEL_REPEATED': 3,
        3: 'LABEL_REPEATED'
      };
      FieldDescriptorProto.Type = {
        'TYPE_DOUBLE': 1,
        1: 'TYPE_DOUBLE',
        'TYPE_FLOAT': 2,
        2: 'TYPE_FLOAT',
        'TYPE_INT64': 3,
        3: 'TYPE_INT64',
        'TYPE_UINT64': 4,
        4: 'TYPE_UINT64',
        'TYPE_INT32': 5,
        5: 'TYPE_INT32',
        'TYPE_FIXED64': 6,
        6: 'TYPE_FIXED64',
        'TYPE_FIXED32': 7,
        7: 'TYPE_FIXED32',
        'TYPE_BOOL': 8,
        8: 'TYPE_BOOL',
        'TYPE_STRING': 9,
        9: 'TYPE_STRING',
        'TYPE_GROUP': 10,
        10: 'TYPE_GROUP',
        'TYPE_MESSAGE': 11,
        11: 'TYPE_MESSAGE',
        'TYPE_BYTES': 12,
        12: 'TYPE_BYTES',
        'TYPE_UINT32': 13,
        13: 'TYPE_UINT32',
        'TYPE_ENUM': 14,
        14: 'TYPE_ENUM',
        'TYPE_SFIXED32': 15,
        15: 'TYPE_SFIXED32',
        'TYPE_SFIXED64': 16,
        16: 'TYPE_SFIXED64',
        'TYPE_SINT32': 17,
        17: 'TYPE_SINT32',
        'TYPE_SINT64': 18,
        18: 'TYPE_SINT64'
      };
      FieldDescriptorProto.Label = {
        'LABEL_OPTIONAL': 1,
        1: 'LABEL_OPTIONAL',
        'LABEL_REQUIRED': 2,
        2: 'LABEL_REQUIRED',
        'LABEL_REPEATED': 3,
        3: 'LABEL_REPEATED'
      };
      __builtIn.Object.defineProperty(FieldDescriptorProto.prototype, '__proto', {
        value: pbjs => {
          return $root.__lookup(pbjs)('google.protobuf.FieldDescriptorProto');
        },
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(FieldDescriptorProto.prototype, '__fqn__', {
        value: 'google.protobuf.FieldDescriptorProto',
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(FieldDescriptorProto.prototype, '__options__', {
        value: $root.__options,
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(FieldDescriptorProto.prototype, '__root__', {
        value: $root,
        enumerable: false,
        configurable: false
      });
      return FieldDescriptorProto;
    }());;
    _protobuf.OneofDescriptorProto = (function () {
      class OneofDescriptorProto {
        constructor(props) {
          this.name = props && props.name;
          this.options = props && props.options;
        }
        static toJSON(obj, helper, withDefaults) {
          if (obj == null) {
            return null;
          } else {
            const json = {};
            if (obj['name'] != null) {
              json['name'] = obj['name'];
            } else if (withDefaults) {
              json['name'] = '';
            }
            if (obj['options'] != null) {
              json['options'] = $root.google.protobuf.OneofOptions.toJSON(obj['options'], helper, withDefaults);
            } else if (withDefaults) {
              delete json['options'];
            }
            return json;
          }
        }
        static fromJSON(json, helper, withDefaults) {
          if (typeof json === 'object' && !Array.isArray(json)) {
            const result = new $root.google.protobuf.OneofDescriptorProto();
            if (json['name'] != null) {
              result['name'] = json['name'];
            } else if (withDefaults !== false) {
              result['name'] = '';
            } else {
              delete result['name'];
            }
            if (json['options'] != null) {
              result['options'] = $root.google.protobuf.OneofOptions.fromJSON(json['options'], helper);
            } else if (withDefaults !== false) {
              delete result['options'];
            } else {
              delete result['options'];
            }
            return result;
          } else
            return json;
        }
        static toGRPC(obj, helper) {
          if (obj == null) {
            return null;
          } else {
            const grpc = {};
            if (obj['name'] != null) {
              grpc['name'] = obj['name'];
            }
            if (obj['options'] != null) {
              grpc['options'] = $root.google.protobuf.OneofOptions.toGRPC(obj['options'], helper);
            }
            return grpc;
          }
        }
        static fromGRPC(grpc, helper) {
          if (grpc == null) {
            return null;
          } else {
            const result = new $root.google.protobuf.OneofDescriptorProto();
            if (grpc['name'] != null) {
              result['name'] = grpc['name'];
            } else {
              result['name'] = '';
            }
            if (grpc['options'] != null) {
              result['options'] = $root.google.protobuf.OneofOptions.fromGRPC(grpc['options'], helper);
            } else {
              delete result['options'];
            }
            return result;
          }
        }
      }
      __builtIn.Object.defineProperty(OneofDescriptorProto.prototype, '__proto', {
        value: pbjs => {
          return $root.__lookup(pbjs)('google.protobuf.OneofDescriptorProto');
        },
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(OneofDescriptorProto.prototype, '__fqn__', {
        value: 'google.protobuf.OneofDescriptorProto',
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(OneofDescriptorProto.prototype, '__options__', {
        value: $root.__options,
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(OneofDescriptorProto.prototype, '__root__', {
        value: $root,
        enumerable: false,
        configurable: false
      });
      return OneofDescriptorProto;
    }());;
    _protobuf.EnumDescriptorProto = (function () {
      class EnumDescriptorProto {
        constructor(props) {
          this.name = props && props.name;
          this.value = props && props.value;
          this.options = props && props.options;
          this.reservedRange = props && props.reservedRange;
          this.reservedName = props && props.reservedName;
        }
        static toJSON(obj, helper, withDefaults) {
          if (obj == null) {
            return null;
          } else {
            const json = {};
            if (obj['name'] != null) {
              json['name'] = obj['name'];
            } else if (withDefaults) {
              json['name'] = '';
            }
            if (obj['value'] != null) {
              json['value'] = obj['value'].map(e => {
                return $root.google.protobuf.EnumValueDescriptorProto.toJSON(e, helper, withDefaults);
              });
            } else if (withDefaults) {
              json['value'] = [];
            }
            if (obj['options'] != null) {
              json['options'] = $root.google.protobuf.EnumOptions.toJSON(obj['options'], helper, withDefaults);
            } else if (withDefaults) {
              delete json['options'];
            }
            if (obj['reservedRange'] != null) {
              json['reservedRange'] = obj['reservedRange'].map(e => {
                return $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.toJSON(e, helper, withDefaults);
              });
            } else if (withDefaults) {
              json['reservedRange'] = [];
            }
            if (obj['reservedName'] != null) {
              json['reservedName'] = obj['reservedName'].map(e => {
                return e;
              });
            } else if (withDefaults) {
              json['reservedName'] = [];
            }
            return json;
          }
        }
        static fromJSON(json, helper, withDefaults) {
          if (typeof json === 'object' && !Array.isArray(json)) {
            const result = new $root.google.protobuf.EnumDescriptorProto();
            if (json['name'] != null) {
              result['name'] = json['name'];
            } else if (withDefaults !== false) {
              result['name'] = '';
            } else {
              delete result['name'];
            }
            if (json['value'] != null) {
              result['value'] = Array.isArray(json['value']) ? json['value'].map(e => {
                return $root.google.protobuf.EnumValueDescriptorProto.fromJSON(e, helper);
              }) : json['value'];
            } else if (withDefaults !== false) {
              result['value'] = [];
            } else {
              delete result['value'];
            }
            if (json['options'] != null) {
              result['options'] = $root.google.protobuf.EnumOptions.fromJSON(json['options'], helper);
            } else if (withDefaults !== false) {
              delete result['options'];
            } else {
              delete result['options'];
            }
            if (json['reservedRange'] != null) {
              result['reservedRange'] = Array.isArray(json['reservedRange']) ? json['reservedRange'].map(e => {
                return $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.fromJSON(e, helper);
              }) : json['reservedRange'];
            } else if (withDefaults !== false) {
              result['reservedRange'] = [];
            } else {
              delete result['reservedRange'];
            }
            if (json['reservedName'] != null) {
              result['reservedName'] = Array.isArray(json['reservedName']) ? json['reservedName'].map(e => {
                return e;
              }) : json['reservedName'];
            } else if (withDefaults !== false) {
              result['reservedName'] = [];
            } else {
              delete result['reservedName'];
            }
            return result;
          } else
            return json;
        }
        static toGRPC(obj, helper) {
          if (obj == null) {
            return null;
          } else {
            const grpc = {};
            if (obj['name'] != null) {
              grpc['name'] = obj['name'];
            }
            if (obj['value'] != null) {
              grpc['value'] = obj['value'].map(e => {
                return $root.google.protobuf.EnumValueDescriptorProto.toGRPC(e, helper);
              });
            }
            if (obj['options'] != null) {
              grpc['options'] = $root.google.protobuf.EnumOptions.toGRPC(obj['options'], helper);
            }
            if (obj['reservedRange'] != null) {
              grpc['reservedRange'] = obj['reservedRange'].map(e => {
                return $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.toGRPC(e, helper);
              });
            }
            if (obj['reservedName'] != null) {
              grpc['reservedName'] = obj['reservedName'].map(e => {
                return e;
              });
            }
            return grpc;
          }
        }
        static fromGRPC(grpc, helper) {
          if (grpc == null) {
            return null;
          } else {
            const result = new $root.google.protobuf.EnumDescriptorProto();
            if (grpc['name'] != null) {
              result['name'] = grpc['name'];
            } else {
              result['name'] = '';
            }
            if (grpc['value'] != null) {
              result['value'] = grpc['value'].map(e => {
                return $root.google.protobuf.EnumValueDescriptorProto.fromGRPC(e, helper);
              });
            } else {
              result['value'] = [];
            }
            if (grpc['options'] != null) {
              result['options'] = $root.google.protobuf.EnumOptions.fromGRPC(grpc['options'], helper);
            } else {
              delete result['options'];
            }
            if (grpc['reservedRange'] != null) {
              result['reservedRange'] = grpc['reservedRange'].map(e => {
                return $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.fromGRPC(e, helper);
              });
            } else {
              result['reservedRange'] = [];
            }
            if (grpc['reservedName'] != null) {
              result['reservedName'] = grpc['reservedName'].map(e => {
                return e;
              });
            } else {
              result['reservedName'] = [];
            }
            return result;
          }
        }
      }
      EnumDescriptorProto.EnumReservedRange = (function () {
        class EnumReservedRange {
          constructor(props) {
            this.start = props && props.start;
            this.end = props && props.end;
          }
          static toJSON(obj, helper, withDefaults) {
            if (obj == null) {
              return null;
            } else {
              const json = {};
              if (obj['start'] != null) {
                json['start'] = obj['start'];
              } else if (withDefaults) {
                json['start'] = 0;
              }
              if (obj['end'] != null) {
                json['end'] = obj['end'];
              } else if (withDefaults) {
                json['end'] = 0;
              }
              return json;
            }
          }
          static fromJSON(json, helper, withDefaults) {
            if (typeof json === 'object' && !Array.isArray(json)) {
              const result = new $root.google.protobuf.EnumDescriptorProto.EnumReservedRange();
              if (json['start'] != null) {
                result['start'] = json['start'];
              } else if (withDefaults !== false) {
                result['start'] = 0;
              } else {
                delete result['start'];
              }
              if (json['end'] != null) {
                result['end'] = json['end'];
              } else if (withDefaults !== false) {
                result['end'] = 0;
              } else {
                delete result['end'];
              }
              return result;
            } else
              return json;
          }
          static toGRPC(obj, helper) {
            if (obj == null) {
              return null;
            } else {
              const grpc = {};
              if (obj['start'] != null) {
                grpc['start'] = obj['start'];
              }
              if (obj['end'] != null) {
                grpc['end'] = obj['end'];
              }
              return grpc;
            }
          }
          static fromGRPC(grpc, helper) {
            if (grpc == null) {
              return null;
            } else {
              const result = new $root.google.protobuf.EnumDescriptorProto.EnumReservedRange();
              if (grpc['start'] != null) {
                result['start'] = grpc['start'];
              } else {
                result['start'] = 0;
              }
              if (grpc['end'] != null) {
                result['end'] = grpc['end'];
              } else {
                result['end'] = 0;
              }
              return result;
            }
          }
        }
        __builtIn.Object.defineProperty(EnumReservedRange.prototype, '__proto', {
          value: pbjs => {
            return $root.__lookup(pbjs)('google.protobuf.EnumDescriptorProto.EnumReservedRange');
          },
          enumerable: false,
          configurable: false
        });
        __builtIn.Object.defineProperty(EnumReservedRange.prototype, '__fqn__', {
          value: 'google.protobuf.EnumDescriptorProto.EnumReservedRange',
          enumerable: false,
          configurable: false
        });
        __builtIn.Object.defineProperty(EnumReservedRange.prototype, '__options__', {
          value: $root.__options,
          enumerable: false,
          configurable: false
        });
        __builtIn.Object.defineProperty(EnumReservedRange.prototype, '__root__', {
          value: $root,
          enumerable: false,
          configurable: false
        });
        return EnumReservedRange;
      }());;
      EnumDescriptorProto.EnumReservedRange = (function () {
        class EnumReservedRange {
          constructor(props) {
            this.start = props && props.start;
            this.end = props && props.end;
          }
          static toJSON(obj, helper, withDefaults) {
            if (obj == null) {
              return null;
            } else {
              const json = {};
              if (obj['start'] != null) {
                json['start'] = obj['start'];
              } else if (withDefaults) {
                json['start'] = 0;
              }
              if (obj['end'] != null) {
                json['end'] = obj['end'];
              } else if (withDefaults) {
                json['end'] = 0;
              }
              return json;
            }
          }
          static fromJSON(json, helper, withDefaults) {
            if (typeof json === 'object' && !Array.isArray(json)) {
              const result = new $root.google.protobuf.EnumDescriptorProto.EnumReservedRange();
              if (json['start'] != null) {
                result['start'] = json['start'];
              } else if (withDefaults !== false) {
                result['start'] = 0;
              } else {
                delete result['start'];
              }
              if (json['end'] != null) {
                result['end'] = json['end'];
              } else if (withDefaults !== false) {
                result['end'] = 0;
              } else {
                delete result['end'];
              }
              return result;
            } else
              return json;
          }
          static toGRPC(obj, helper) {
            if (obj == null) {
              return null;
            } else {
              const grpc = {};
              if (obj['start'] != null) {
                grpc['start'] = obj['start'];
              }
              if (obj['end'] != null) {
                grpc['end'] = obj['end'];
              }
              return grpc;
            }
          }
          static fromGRPC(grpc, helper) {
            if (grpc == null) {
              return null;
            } else {
              const result = new $root.google.protobuf.EnumDescriptorProto.EnumReservedRange();
              if (grpc['start'] != null) {
                result['start'] = grpc['start'];
              } else {
                result['start'] = 0;
              }
              if (grpc['end'] != null) {
                result['end'] = grpc['end'];
              } else {
                result['end'] = 0;
              }
              return result;
            }
          }
        }
        __builtIn.Object.defineProperty(EnumReservedRange.prototype, '__proto', {
          value: pbjs => {
            return $root.__lookup(pbjs)('google.protobuf.EnumDescriptorProto.EnumReservedRange');
          },
          enumerable: false,
          configurable: false
        });
        __builtIn.Object.defineProperty(EnumReservedRange.prototype, '__fqn__', {
          value: 'google.protobuf.EnumDescriptorProto.EnumReservedRange',
          enumerable: false,
          configurable: false
        });
        __builtIn.Object.defineProperty(EnumReservedRange.prototype, '__options__', {
          value: $root.__options,
          enumerable: false,
          configurable: false
        });
        __builtIn.Object.defineProperty(EnumReservedRange.prototype, '__root__', {
          value: $root,
          enumerable: false,
          configurable: false
        });
        return EnumReservedRange;
      }());;
      __builtIn.Object.defineProperty(EnumDescriptorProto.prototype, '__proto', {
        value: pbjs => {
          return $root.__lookup(pbjs)('google.protobuf.EnumDescriptorProto');
        },
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(EnumDescriptorProto.prototype, '__fqn__', {
        value: 'google.protobuf.EnumDescriptorProto',
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(EnumDescriptorProto.prototype, '__options__', {
        value: $root.__options,
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(EnumDescriptorProto.prototype, '__root__', {
        value: $root,
        enumerable: false,
        configurable: false
      });
      return EnumDescriptorProto;
    }());;
    _protobuf.EnumValueDescriptorProto = (function () {
      class EnumValueDescriptorProto {
        constructor(props) {
          this.name = props && props.name;
          this.number = props && props.number;
          this.options = props && props.options;
        }
        static toJSON(obj, helper, withDefaults) {
          if (obj == null) {
            return null;
          } else {
            const json = {};
            if (obj['name'] != null) {
              json['name'] = obj['name'];
            } else if (withDefaults) {
              json['name'] = '';
            }
            if (obj['number'] != null) {
              json['number'] = obj['number'];
            } else if (withDefaults) {
              json['number'] = 0;
            }
            if (obj['options'] != null) {
              json['options'] = $root.google.protobuf.EnumValueOptions.toJSON(obj['options'], helper, withDefaults);
            } else if (withDefaults) {
              delete json['options'];
            }
            return json;
          }
        }
        static fromJSON(json, helper, withDefaults) {
          if (typeof json === 'object' && !Array.isArray(json)) {
            const result = new $root.google.protobuf.EnumValueDescriptorProto();
            if (json['name'] != null) {
              result['name'] = json['name'];
            } else if (withDefaults !== false) {
              result['name'] = '';
            } else {
              delete result['name'];
            }
            if (json['number'] != null) {
              result['number'] = json['number'];
            } else if (withDefaults !== false) {
              result['number'] = 0;
            } else {
              delete result['number'];
            }
            if (json['options'] != null) {
              result['options'] = $root.google.protobuf.EnumValueOptions.fromJSON(json['options'], helper);
            } else if (withDefaults !== false) {
              delete result['options'];
            } else {
              delete result['options'];
            }
            return result;
          } else
            return json;
        }
        static toGRPC(obj, helper) {
          if (obj == null) {
            return null;
          } else {
            const grpc = {};
            if (obj['name'] != null) {
              grpc['name'] = obj['name'];
            }
            if (obj['number'] != null) {
              grpc['number'] = obj['number'];
            }
            if (obj['options'] != null) {
              grpc['options'] = $root.google.protobuf.EnumValueOptions.toGRPC(obj['options'], helper);
            }
            return grpc;
          }
        }
        static fromGRPC(grpc, helper) {
          if (grpc == null) {
            return null;
          } else {
            const result = new $root.google.protobuf.EnumValueDescriptorProto();
            if (grpc['name'] != null) {
              result['name'] = grpc['name'];
            } else {
              result['name'] = '';
            }
            if (grpc['number'] != null) {
              result['number'] = grpc['number'];
            } else {
              result['number'] = 0;
            }
            if (grpc['options'] != null) {
              result['options'] = $root.google.protobuf.EnumValueOptions.fromGRPC(grpc['options'], helper);
            } else {
              delete result['options'];
            }
            return result;
          }
        }
      }
      __builtIn.Object.defineProperty(EnumValueDescriptorProto.prototype, '__proto', {
        value: pbjs => {
          return $root.__lookup(pbjs)('google.protobuf.EnumValueDescriptorProto');
        },
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(EnumValueDescriptorProto.prototype, '__fqn__', {
        value: 'google.protobuf.EnumValueDescriptorProto',
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(EnumValueDescriptorProto.prototype, '__options__', {
        value: $root.__options,
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(EnumValueDescriptorProto.prototype, '__root__', {
        value: $root,
        enumerable: false,
        configurable: false
      });
      return EnumValueDescriptorProto;
    }());;
    _protobuf.ServiceDescriptorProto = (function () {
      class ServiceDescriptorProto {
        constructor(props) {
          this.name = props && props.name;
          this.method = props && props.method;
          this.options = props && props.options;
        }
        static toJSON(obj, helper, withDefaults) {
          if (obj == null) {
            return null;
          } else {
            const json = {};
            if (obj['name'] != null) {
              json['name'] = obj['name'];
            } else if (withDefaults) {
              json['name'] = '';
            }
            if (obj['method'] != null) {
              json['method'] = obj['method'].map(e => {
                return $root.google.protobuf.MethodDescriptorProto.toJSON(e, helper, withDefaults);
              });
            } else if (withDefaults) {
              json['method'] = [];
            }
            if (obj['options'] != null) {
              json['options'] = $root.google.protobuf.ServiceOptions.toJSON(obj['options'], helper, withDefaults);
            } else if (withDefaults) {
              delete json['options'];
            }
            return json;
          }
        }
        static fromJSON(json, helper, withDefaults) {
          if (typeof json === 'object' && !Array.isArray(json)) {
            const result = new $root.google.protobuf.ServiceDescriptorProto();
            if (json['name'] != null) {
              result['name'] = json['name'];
            } else if (withDefaults !== false) {
              result['name'] = '';
            } else {
              delete result['name'];
            }
            if (json['method'] != null) {
              result['method'] = Array.isArray(json['method']) ? json['method'].map(e => {
                return $root.google.protobuf.MethodDescriptorProto.fromJSON(e, helper);
              }) : json['method'];
            } else if (withDefaults !== false) {
              result['method'] = [];
            } else {
              delete result['method'];
            }
            if (json['options'] != null) {
              result['options'] = $root.google.protobuf.ServiceOptions.fromJSON(json['options'], helper);
            } else if (withDefaults !== false) {
              delete result['options'];
            } else {
              delete result['options'];
            }
            return result;
          } else
            return json;
        }
        static toGRPC(obj, helper) {
          if (obj == null) {
            return null;
          } else {
            const grpc = {};
            if (obj['name'] != null) {
              grpc['name'] = obj['name'];
            }
            if (obj['method'] != null) {
              grpc['method'] = obj['method'].map(e => {
                return $root.google.protobuf.MethodDescriptorProto.toGRPC(e, helper);
              });
            }
            if (obj['options'] != null) {
              grpc['options'] = $root.google.protobuf.ServiceOptions.toGRPC(obj['options'], helper);
            }
            return grpc;
          }
        }
        static fromGRPC(grpc, helper) {
          if (grpc == null) {
            return null;
          } else {
            const result = new $root.google.protobuf.ServiceDescriptorProto();
            if (grpc['name'] != null) {
              result['name'] = grpc['name'];
            } else {
              result['name'] = '';
            }
            if (grpc['method'] != null) {
              result['method'] = grpc['method'].map(e => {
                return $root.google.protobuf.MethodDescriptorProto.fromGRPC(e, helper);
              });
            } else {
              result['method'] = [];
            }
            if (grpc['options'] != null) {
              result['options'] = $root.google.protobuf.ServiceOptions.fromGRPC(grpc['options'], helper);
            } else {
              delete result['options'];
            }
            return result;
          }
        }
      }
      __builtIn.Object.defineProperty(ServiceDescriptorProto.prototype, '__proto', {
        value: pbjs => {
          return $root.__lookup(pbjs)('google.protobuf.ServiceDescriptorProto');
        },
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(ServiceDescriptorProto.prototype, '__fqn__', {
        value: 'google.protobuf.ServiceDescriptorProto',
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(ServiceDescriptorProto.prototype, '__options__', {
        value: $root.__options,
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(ServiceDescriptorProto.prototype, '__root__', {
        value: $root,
        enumerable: false,
        configurable: false
      });
      return ServiceDescriptorProto;
    }());;
    _protobuf.MethodDescriptorProto = (function () {
      class MethodDescriptorProto {
        constructor(props) {
          this.name = props && props.name;
          this.inputType = props && props.inputType;
          this.outputType = props && props.outputType;
          this.options = props && props.options;
          this.clientStreaming = props && props.clientStreaming;
          this.serverStreaming = props && props.serverStreaming;
        }
        static toJSON(obj, helper, withDefaults) {
          if (obj == null) {
            return null;
          } else {
            const json = {};
            if (obj['name'] != null) {
              json['name'] = obj['name'];
            } else if (withDefaults) {
              json['name'] = '';
            }
            if (obj['inputType'] != null) {
              json['inputType'] = obj['inputType'];
            } else if (withDefaults) {
              json['inputType'] = '';
            }
            if (obj['outputType'] != null) {
              json['outputType'] = obj['outputType'];
            } else if (withDefaults) {
              json['outputType'] = '';
            }
            if (obj['options'] != null) {
              json['options'] = $root.google.protobuf.MethodOptions.toJSON(obj['options'], helper, withDefaults);
            } else if (withDefaults) {
              delete json['options'];
            }
            if (obj['clientStreaming'] != null) {
              json['clientStreaming'] = obj['clientStreaming'];
            } else if (withDefaults) {
              json['clientStreaming'] = false;
            }
            if (obj['serverStreaming'] != null) {
              json['serverStreaming'] = obj['serverStreaming'];
            } else if (withDefaults) {
              json['serverStreaming'] = false;
            }
            return json;
          }
        }
        static fromJSON(json, helper, withDefaults) {
          if (typeof json === 'object' && !Array.isArray(json)) {
            const result = new $root.google.protobuf.MethodDescriptorProto();
            if (json['name'] != null) {
              result['name'] = json['name'];
            } else if (withDefaults !== false) {
              result['name'] = '';
            } else {
              delete result['name'];
            }
            if (json['inputType'] != null) {
              result['inputType'] = json['inputType'];
            } else if (withDefaults !== false) {
              result['inputType'] = '';
            } else {
              delete result['inputType'];
            }
            if (json['outputType'] != null) {
              result['outputType'] = json['outputType'];
            } else if (withDefaults !== false) {
              result['outputType'] = '';
            } else {
              delete result['outputType'];
            }
            if (json['options'] != null) {
              result['options'] = $root.google.protobuf.MethodOptions.fromJSON(json['options'], helper);
            } else if (withDefaults !== false) {
              delete result['options'];
            } else {
              delete result['options'];
            }
            if (json['clientStreaming'] != null) {
              result['clientStreaming'] = json['clientStreaming'];
            } else if (withDefaults !== false) {
              result['clientStreaming'] = false;
            } else {
              delete result['clientStreaming'];
            }
            if (json['serverStreaming'] != null) {
              result['serverStreaming'] = json['serverStreaming'];
            } else if (withDefaults !== false) {
              result['serverStreaming'] = false;
            } else {
              delete result['serverStreaming'];
            }
            return result;
          } else
            return json;
        }
        static toGRPC(obj, helper) {
          if (obj == null) {
            return null;
          } else {
            const grpc = {};
            if (obj['name'] != null) {
              grpc['name'] = obj['name'];
            }
            if (obj['inputType'] != null) {
              grpc['inputType'] = obj['inputType'];
            }
            if (obj['outputType'] != null) {
              grpc['outputType'] = obj['outputType'];
            }
            if (obj['options'] != null) {
              grpc['options'] = $root.google.protobuf.MethodOptions.toGRPC(obj['options'], helper);
            }
            if (obj['clientStreaming'] != null) {
              grpc['clientStreaming'] = obj['clientStreaming'];
            }
            if (obj['serverStreaming'] != null) {
              grpc['serverStreaming'] = obj['serverStreaming'];
            }
            return grpc;
          }
        }
        static fromGRPC(grpc, helper) {
          if (grpc == null) {
            return null;
          } else {
            const result = new $root.google.protobuf.MethodDescriptorProto();
            if (grpc['name'] != null) {
              result['name'] = grpc['name'];
            } else {
              result['name'] = '';
            }
            if (grpc['inputType'] != null) {
              result['inputType'] = grpc['inputType'];
            } else {
              result['inputType'] = '';
            }
            if (grpc['outputType'] != null) {
              result['outputType'] = grpc['outputType'];
            } else {
              result['outputType'] = '';
            }
            if (grpc['options'] != null) {
              result['options'] = $root.google.protobuf.MethodOptions.fromGRPC(grpc['options'], helper);
            } else {
              delete result['options'];
            }
            if (grpc['clientStreaming'] != null) {
              result['clientStreaming'] = grpc['clientStreaming'];
            } else {
              result['clientStreaming'] = false;
            }
            if (grpc['serverStreaming'] != null) {
              result['serverStreaming'] = grpc['serverStreaming'];
            } else {
              result['serverStreaming'] = false;
            }
            return result;
          }
        }
      }
      __builtIn.Object.defineProperty(MethodDescriptorProto.prototype, '__proto', {
        value: pbjs => {
          return $root.__lookup(pbjs)('google.protobuf.MethodDescriptorProto');
        },
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(MethodDescriptorProto.prototype, '__fqn__', {
        value: 'google.protobuf.MethodDescriptorProto',
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(MethodDescriptorProto.prototype, '__options__', {
        value: $root.__options,
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(MethodDescriptorProto.prototype, '__root__', {
        value: $root,
        enumerable: false,
        configurable: false
      });
      return MethodDescriptorProto;
    }());;
    _protobuf.FileOptions = (function () {
      class FileOptions {
        constructor(props) {
          this.javaPackage = props && props.javaPackage;
          this.javaOuterClassname = props && props.javaOuterClassname;
          this.javaMultipleFiles = props && props.javaMultipleFiles;
          this.javaGenerateEqualsAndHash = props && props.javaGenerateEqualsAndHash;
          this.javaStringCheckUtf8 = props && props.javaStringCheckUtf8;
          this.optimizeFor = props && props.optimizeFor;
          this.goPackage = props && props.goPackage;
          this.ccGenericServices = props && props.ccGenericServices;
          this.javaGenericServices = props && props.javaGenericServices;
          this.pyGenericServices = props && props.pyGenericServices;
          this.phpGenericServices = props && props.phpGenericServices;
          this.deprecated = props && props.deprecated;
          this.ccEnableArenas = props && props.ccEnableArenas;
          this.objcClassPrefix = props && props.objcClassPrefix;
          this.csharpNamespace = props && props.csharpNamespace;
          this.swiftPrefix = props && props.swiftPrefix;
          this.phpClassPrefix = props && props.phpClassPrefix;
          this.phpNamespace = props && props.phpNamespace;
          this.phpMetadataNamespace = props && props.phpMetadataNamespace;
          this.rubyPackage = props && props.rubyPackage;
          this.uninterpretedOption = props && props.uninterpretedOption;
          this['wix.graphql.namespace'] = props && props['wix.graphql.namespace'];
        }
        static toJSON(obj, helper, withDefaults) {
          if (obj == null) {
            return null;
          } else {
            const json = {};
            if (obj['javaPackage'] != null) {
              json['javaPackage'] = obj['javaPackage'];
            } else if (withDefaults) {
              json['javaPackage'] = '';
            }
            if (obj['javaOuterClassname'] != null) {
              json['javaOuterClassname'] = obj['javaOuterClassname'];
            } else if (withDefaults) {
              json['javaOuterClassname'] = '';
            }
            if (obj['javaMultipleFiles'] != null) {
              json['javaMultipleFiles'] = obj['javaMultipleFiles'];
            } else if (withDefaults) {
              json['javaMultipleFiles'] = false;
            }
            if (obj['javaGenerateEqualsAndHash'] != null) {
              json['javaGenerateEqualsAndHash'] = obj['javaGenerateEqualsAndHash'];
            } else if (withDefaults) {
              json['javaGenerateEqualsAndHash'] = false;
            }
            if (obj['javaStringCheckUtf8'] != null) {
              json['javaStringCheckUtf8'] = obj['javaStringCheckUtf8'];
            } else if (withDefaults) {
              json['javaStringCheckUtf8'] = false;
            }
            if (obj['optimizeFor'] != null) {
              json['optimizeFor'] = $root.google.protobuf.FileOptions.OptimizeMode[obj['optimizeFor']];
            } else if (withDefaults) {
              json['optimizeFor'] = 1;
            }
            if (obj['goPackage'] != null) {
              json['goPackage'] = obj['goPackage'];
            } else if (withDefaults) {
              json['goPackage'] = '';
            }
            if (obj['ccGenericServices'] != null) {
              json['ccGenericServices'] = obj['ccGenericServices'];
            } else if (withDefaults) {
              json['ccGenericServices'] = false;
            }
            if (obj['javaGenericServices'] != null) {
              json['javaGenericServices'] = obj['javaGenericServices'];
            } else if (withDefaults) {
              json['javaGenericServices'] = false;
            }
            if (obj['pyGenericServices'] != null) {
              json['pyGenericServices'] = obj['pyGenericServices'];
            } else if (withDefaults) {
              json['pyGenericServices'] = false;
            }
            if (obj['phpGenericServices'] != null) {
              json['phpGenericServices'] = obj['phpGenericServices'];
            } else if (withDefaults) {
              json['phpGenericServices'] = false;
            }
            if (obj['deprecated'] != null) {
              json['deprecated'] = obj['deprecated'];
            } else if (withDefaults) {
              json['deprecated'] = false;
            }
            if (obj['ccEnableArenas'] != null) {
              json['ccEnableArenas'] = obj['ccEnableArenas'];
            } else if (withDefaults) {
              json['ccEnableArenas'] = false;
            }
            if (obj['objcClassPrefix'] != null) {
              json['objcClassPrefix'] = obj['objcClassPrefix'];
            } else if (withDefaults) {
              json['objcClassPrefix'] = '';
            }
            if (obj['csharpNamespace'] != null) {
              json['csharpNamespace'] = obj['csharpNamespace'];
            } else if (withDefaults) {
              json['csharpNamespace'] = '';
            }
            if (obj['swiftPrefix'] != null) {
              json['swiftPrefix'] = obj['swiftPrefix'];
            } else if (withDefaults) {
              json['swiftPrefix'] = '';
            }
            if (obj['phpClassPrefix'] != null) {
              json['phpClassPrefix'] = obj['phpClassPrefix'];
            } else if (withDefaults) {
              json['phpClassPrefix'] = '';
            }
            if (obj['phpNamespace'] != null) {
              json['phpNamespace'] = obj['phpNamespace'];
            } else if (withDefaults) {
              json['phpNamespace'] = '';
            }
            if (obj['phpMetadataNamespace'] != null) {
              json['phpMetadataNamespace'] = obj['phpMetadataNamespace'];
            } else if (withDefaults) {
              json['phpMetadataNamespace'] = '';
            }
            if (obj['rubyPackage'] != null) {
              json['rubyPackage'] = obj['rubyPackage'];
            } else if (withDefaults) {
              json['rubyPackage'] = '';
            }
            if (obj['uninterpretedOption'] != null) {
              json['uninterpretedOption'] = obj['uninterpretedOption'].map(e => {
                return $root.google.protobuf.UninterpretedOption.toJSON(e, helper, withDefaults);
              });
            } else if (withDefaults) {
              json['uninterpretedOption'] = [];
            }
            if (obj['wix.graphql.namespace'] != null) {
              json['wix.graphql.namespace'] = obj['wix.graphql.namespace'];
            } else if (withDefaults) {
              json['wix.graphql.namespace'] = '';
            }
            return json;
          }
        }
        static fromJSON(json, helper, withDefaults) {
          if (typeof json === 'object' && !Array.isArray(json)) {
            const result = new $root.google.protobuf.FileOptions();
            if (json['javaPackage'] != null) {
              result['javaPackage'] = json['javaPackage'];
            } else if (withDefaults !== false) {
              result['javaPackage'] = '';
            } else {
              delete result['javaPackage'];
            }
            if (json['javaOuterClassname'] != null) {
              result['javaOuterClassname'] = json['javaOuterClassname'];
            } else if (withDefaults !== false) {
              result['javaOuterClassname'] = '';
            } else {
              delete result['javaOuterClassname'];
            }
            if (json['javaMultipleFiles'] != null) {
              result['javaMultipleFiles'] = json['javaMultipleFiles'];
            } else if (withDefaults !== false) {
              result['javaMultipleFiles'] = false;
            } else {
              delete result['javaMultipleFiles'];
            }
            if (json['javaGenerateEqualsAndHash'] != null) {
              result['javaGenerateEqualsAndHash'] = json['javaGenerateEqualsAndHash'];
            } else if (withDefaults !== false) {
              result['javaGenerateEqualsAndHash'] = false;
            } else {
              delete result['javaGenerateEqualsAndHash'];
            }
            if (json['javaStringCheckUtf8'] != null) {
              result['javaStringCheckUtf8'] = json['javaStringCheckUtf8'];
            } else if (withDefaults !== false) {
              result['javaStringCheckUtf8'] = false;
            } else {
              delete result['javaStringCheckUtf8'];
            }
            if (json['optimizeFor'] != null) {
              result['optimizeFor'] = typeof json['optimizeFor'] === 'string' ? $root.google.protobuf.FileOptions.OptimizeMode[json['optimizeFor']] : json['optimizeFor'];
            } else if (withDefaults !== false) {
              result['optimizeFor'] = 1;
            } else {
              delete result['optimizeFor'];
            }
            if (json['goPackage'] != null) {
              result['goPackage'] = json['goPackage'];
            } else if (withDefaults !== false) {
              result['goPackage'] = '';
            } else {
              delete result['goPackage'];
            }
            if (json['ccGenericServices'] != null) {
              result['ccGenericServices'] = json['ccGenericServices'];
            } else if (withDefaults !== false) {
              result['ccGenericServices'] = false;
            } else {
              delete result['ccGenericServices'];
            }
            if (json['javaGenericServices'] != null) {
              result['javaGenericServices'] = json['javaGenericServices'];
            } else if (withDefaults !== false) {
              result['javaGenericServices'] = false;
            } else {
              delete result['javaGenericServices'];
            }
            if (json['pyGenericServices'] != null) {
              result['pyGenericServices'] = json['pyGenericServices'];
            } else if (withDefaults !== false) {
              result['pyGenericServices'] = false;
            } else {
              delete result['pyGenericServices'];
            }
            if (json['phpGenericServices'] != null) {
              result['phpGenericServices'] = json['phpGenericServices'];
            } else if (withDefaults !== false) {
              result['phpGenericServices'] = false;
            } else {
              delete result['phpGenericServices'];
            }
            if (json['deprecated'] != null) {
              result['deprecated'] = json['deprecated'];
            } else if (withDefaults !== false) {
              result['deprecated'] = false;
            } else {
              delete result['deprecated'];
            }
            if (json['ccEnableArenas'] != null) {
              result['ccEnableArenas'] = json['ccEnableArenas'];
            } else if (withDefaults !== false) {
              result['ccEnableArenas'] = false;
            } else {
              delete result['ccEnableArenas'];
            }
            if (json['objcClassPrefix'] != null) {
              result['objcClassPrefix'] = json['objcClassPrefix'];
            } else if (withDefaults !== false) {
              result['objcClassPrefix'] = '';
            } else {
              delete result['objcClassPrefix'];
            }
            if (json['csharpNamespace'] != null) {
              result['csharpNamespace'] = json['csharpNamespace'];
            } else if (withDefaults !== false) {
              result['csharpNamespace'] = '';
            } else {
              delete result['csharpNamespace'];
            }
            if (json['swiftPrefix'] != null) {
              result['swiftPrefix'] = json['swiftPrefix'];
            } else if (withDefaults !== false) {
              result['swiftPrefix'] = '';
            } else {
              delete result['swiftPrefix'];
            }
            if (json['phpClassPrefix'] != null) {
              result['phpClassPrefix'] = json['phpClassPrefix'];
            } else if (withDefaults !== false) {
              result['phpClassPrefix'] = '';
            } else {
              delete result['phpClassPrefix'];
            }
            if (json['phpNamespace'] != null) {
              result['phpNamespace'] = json['phpNamespace'];
            } else if (withDefaults !== false) {
              result['phpNamespace'] = '';
            } else {
              delete result['phpNamespace'];
            }
            if (json['phpMetadataNamespace'] != null) {
              result['phpMetadataNamespace'] = json['phpMetadataNamespace'];
            } else if (withDefaults !== false) {
              result['phpMetadataNamespace'] = '';
            } else {
              delete result['phpMetadataNamespace'];
            }
            if (json['rubyPackage'] != null) {
              result['rubyPackage'] = json['rubyPackage'];
            } else if (withDefaults !== false) {
              result['rubyPackage'] = '';
            } else {
              delete result['rubyPackage'];
            }
            if (json['uninterpretedOption'] != null) {
              result['uninterpretedOption'] = Array.isArray(json['uninterpretedOption']) ? json['uninterpretedOption'].map(e => {
                return $root.google.protobuf.UninterpretedOption.fromJSON(e, helper);
              }) : json['uninterpretedOption'];
            } else if (withDefaults !== false) {
              result['uninterpretedOption'] = [];
            } else {
              delete result['uninterpretedOption'];
            }
            if (json['wix.graphql.namespace'] != null) {
              result['wix.graphql.namespace'] = json['wix.graphql.namespace'];
            } else if (withDefaults !== false) {
              result['wix.graphql.namespace'] = '';
            } else {
              delete result['wix.graphql.namespace'];
            }
            return result;
          } else
            return json;
        }
        static toGRPC(obj, helper) {
          if (obj == null) {
            return null;
          } else {
            const grpc = {};
            if (obj['javaPackage'] != null) {
              grpc['javaPackage'] = obj['javaPackage'];
            }
            if (obj['javaOuterClassname'] != null) {
              grpc['javaOuterClassname'] = obj['javaOuterClassname'];
            }
            if (obj['javaMultipleFiles'] != null) {
              grpc['javaMultipleFiles'] = obj['javaMultipleFiles'];
            }
            if (obj['javaGenerateEqualsAndHash'] != null) {
              grpc['javaGenerateEqualsAndHash'] = obj['javaGenerateEqualsAndHash'];
            }
            if (obj['javaStringCheckUtf8'] != null) {
              grpc['javaStringCheckUtf8'] = obj['javaStringCheckUtf8'];
            }
            if (obj['optimizeFor'] != null) {
              grpc['optimizeFor'] = obj['optimizeFor'];
            }
            if (obj['goPackage'] != null) {
              grpc['goPackage'] = obj['goPackage'];
            }
            if (obj['ccGenericServices'] != null) {
              grpc['ccGenericServices'] = obj['ccGenericServices'];
            }
            if (obj['javaGenericServices'] != null) {
              grpc['javaGenericServices'] = obj['javaGenericServices'];
            }
            if (obj['pyGenericServices'] != null) {
              grpc['pyGenericServices'] = obj['pyGenericServices'];
            }
            if (obj['phpGenericServices'] != null) {
              grpc['phpGenericServices'] = obj['phpGenericServices'];
            }
            if (obj['deprecated'] != null) {
              grpc['deprecated'] = obj['deprecated'];
            }
            if (obj['ccEnableArenas'] != null) {
              grpc['ccEnableArenas'] = obj['ccEnableArenas'];
            }
            if (obj['objcClassPrefix'] != null) {
              grpc['objcClassPrefix'] = obj['objcClassPrefix'];
            }
            if (obj['csharpNamespace'] != null) {
              grpc['csharpNamespace'] = obj['csharpNamespace'];
            }
            if (obj['swiftPrefix'] != null) {
              grpc['swiftPrefix'] = obj['swiftPrefix'];
            }
            if (obj['phpClassPrefix'] != null) {
              grpc['phpClassPrefix'] = obj['phpClassPrefix'];
            }
            if (obj['phpNamespace'] != null) {
              grpc['phpNamespace'] = obj['phpNamespace'];
            }
            if (obj['phpMetadataNamespace'] != null) {
              grpc['phpMetadataNamespace'] = obj['phpMetadataNamespace'];
            }
            if (obj['rubyPackage'] != null) {
              grpc['rubyPackage'] = obj['rubyPackage'];
            }
            if (obj['uninterpretedOption'] != null) {
              grpc['uninterpretedOption'] = obj['uninterpretedOption'].map(e => {
                return $root.google.protobuf.UninterpretedOption.toGRPC(e, helper);
              });
            }
            if (obj['wix.graphql.namespace'] != null) {
              grpc['wix.graphql.namespace'] = obj['wix.graphql.namespace'];
            }
            return grpc;
          }
        }
        static fromGRPC(grpc, helper) {
          if (grpc == null) {
            return null;
          } else {
            const result = new $root.google.protobuf.FileOptions();
            if (grpc['javaPackage'] != null) {
              result['javaPackage'] = grpc['javaPackage'];
            } else {
              result['javaPackage'] = '';
            }
            if (grpc['javaOuterClassname'] != null) {
              result['javaOuterClassname'] = grpc['javaOuterClassname'];
            } else {
              result['javaOuterClassname'] = '';
            }
            if (grpc['javaMultipleFiles'] != null) {
              result['javaMultipleFiles'] = grpc['javaMultipleFiles'];
            } else {
              result['javaMultipleFiles'] = false;
            }
            if (grpc['javaGenerateEqualsAndHash'] != null) {
              result['javaGenerateEqualsAndHash'] = grpc['javaGenerateEqualsAndHash'];
            } else {
              result['javaGenerateEqualsAndHash'] = false;
            }
            if (grpc['javaStringCheckUtf8'] != null) {
              result['javaStringCheckUtf8'] = grpc['javaStringCheckUtf8'];
            } else {
              result['javaStringCheckUtf8'] = false;
            }
            if (grpc['optimizeFor'] != null) {
              result['optimizeFor'] = grpc['optimizeFor'];
            } else {
              result['optimizeFor'] = 1;
            }
            if (grpc['goPackage'] != null) {
              result['goPackage'] = grpc['goPackage'];
            } else {
              result['goPackage'] = '';
            }
            if (grpc['ccGenericServices'] != null) {
              result['ccGenericServices'] = grpc['ccGenericServices'];
            } else {
              result['ccGenericServices'] = false;
            }
            if (grpc['javaGenericServices'] != null) {
              result['javaGenericServices'] = grpc['javaGenericServices'];
            } else {
              result['javaGenericServices'] = false;
            }
            if (grpc['pyGenericServices'] != null) {
              result['pyGenericServices'] = grpc['pyGenericServices'];
            } else {
              result['pyGenericServices'] = false;
            }
            if (grpc['phpGenericServices'] != null) {
              result['phpGenericServices'] = grpc['phpGenericServices'];
            } else {
              result['phpGenericServices'] = false;
            }
            if (grpc['deprecated'] != null) {
              result['deprecated'] = grpc['deprecated'];
            } else {
              result['deprecated'] = false;
            }
            if (grpc['ccEnableArenas'] != null) {
              result['ccEnableArenas'] = grpc['ccEnableArenas'];
            } else {
              result['ccEnableArenas'] = false;
            }
            if (grpc['objcClassPrefix'] != null) {
              result['objcClassPrefix'] = grpc['objcClassPrefix'];
            } else {
              result['objcClassPrefix'] = '';
            }
            if (grpc['csharpNamespace'] != null) {
              result['csharpNamespace'] = grpc['csharpNamespace'];
            } else {
              result['csharpNamespace'] = '';
            }
            if (grpc['swiftPrefix'] != null) {
              result['swiftPrefix'] = grpc['swiftPrefix'];
            } else {
              result['swiftPrefix'] = '';
            }
            if (grpc['phpClassPrefix'] != null) {
              result['phpClassPrefix'] = grpc['phpClassPrefix'];
            } else {
              result['phpClassPrefix'] = '';
            }
            if (grpc['phpNamespace'] != null) {
              result['phpNamespace'] = grpc['phpNamespace'];
            } else {
              result['phpNamespace'] = '';
            }
            if (grpc['phpMetadataNamespace'] != null) {
              result['phpMetadataNamespace'] = grpc['phpMetadataNamespace'];
            } else {
              result['phpMetadataNamespace'] = '';
            }
            if (grpc['rubyPackage'] != null) {
              result['rubyPackage'] = grpc['rubyPackage'];
            } else {
              result['rubyPackage'] = '';
            }
            if (grpc['uninterpretedOption'] != null) {
              result['uninterpretedOption'] = grpc['uninterpretedOption'].map(e => {
                return $root.google.protobuf.UninterpretedOption.fromGRPC(e, helper);
              });
            } else {
              result['uninterpretedOption'] = [];
            }
            if (grpc['wix.graphql.namespace'] != null) {
              result['wix.graphql.namespace'] = grpc['wix.graphql.namespace'];
            } else {
              result['wix.graphql.namespace'] = '';
            }
            return result;
          }
        }
      }
      FileOptions.OptimizeMode = {
        'SPEED': 1,
        1: 'SPEED',
        'CODE_SIZE': 2,
        2: 'CODE_SIZE',
        'LITE_RUNTIME': 3,
        3: 'LITE_RUNTIME'
      };
      FileOptions.OptimizeMode = {
        'SPEED': 1,
        1: 'SPEED',
        'CODE_SIZE': 2,
        2: 'CODE_SIZE',
        'LITE_RUNTIME': 3,
        3: 'LITE_RUNTIME'
      };
      __builtIn.Object.defineProperty(FileOptions.prototype, '__proto', {
        value: pbjs => {
          return $root.__lookup(pbjs)('google.protobuf.FileOptions');
        },
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(FileOptions.prototype, '__fqn__', {
        value: 'google.protobuf.FileOptions',
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(FileOptions.prototype, '__options__', {
        value: $root.__options,
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(FileOptions.prototype, '__root__', {
        value: $root,
        enumerable: false,
        configurable: false
      });
      return FileOptions;
    }());;
    _protobuf.MessageOptions = (function () {
      class MessageOptions {
        constructor(props) {
          this.messageSetWireFormat = props && props.messageSetWireFormat;
          this.noStandardDescriptorAccessor = props && props.noStandardDescriptorAccessor;
          this.deprecated = props && props.deprecated;
          this.mapEntry = props && props.mapEntry;
          this.uninterpretedOption = props && props.uninterpretedOption;
          this['wix.api.actionPayload'] = props && props['wix.api.actionPayload'];
          this['wix.api.decompositeOf'] = props && props['wix.api.decompositeOf'];
          this['wix.api.decompositionMinimumFields'] = props && props['wix.api.decompositionMinimumFields'];
          this['wix.api.unwrapArrayValue'] = props && props['wix.api.unwrapArrayValue'];
          this['wix.api.messageDeprecated'] = props && props['wix.api.messageDeprecated'];
          this['wix.api.unique'] = props && props['wix.api.unique'];
          this['wix.api.entity'] = props && props['wix.api.entity'];
        }
        static toJSON(obj, helper, withDefaults) {
          if (obj == null) {
            return null;
          } else {
            const json = {};
            if (obj['messageSetWireFormat'] != null) {
              json['messageSetWireFormat'] = obj['messageSetWireFormat'];
            } else if (withDefaults) {
              json['messageSetWireFormat'] = false;
            }
            if (obj['noStandardDescriptorAccessor'] != null) {
              json['noStandardDescriptorAccessor'] = obj['noStandardDescriptorAccessor'];
            } else if (withDefaults) {
              json['noStandardDescriptorAccessor'] = false;
            }
            if (obj['deprecated'] != null) {
              json['deprecated'] = obj['deprecated'];
            } else if (withDefaults) {
              json['deprecated'] = false;
            }
            if (obj['mapEntry'] != null) {
              json['mapEntry'] = obj['mapEntry'];
            } else if (withDefaults) {
              json['mapEntry'] = false;
            }
            if (obj['uninterpretedOption'] != null) {
              json['uninterpretedOption'] = obj['uninterpretedOption'].map(e => {
                return $root.google.protobuf.UninterpretedOption.toJSON(e, helper, withDefaults);
              });
            } else if (withDefaults) {
              json['uninterpretedOption'] = [];
            }
            if (obj['wix.api.actionPayload'] != null) {
              json['wix.api.actionPayload'] = $root.wix.api.ActionPayload.toJSON(obj['wix.api.actionPayload'], helper, withDefaults);
            } else if (withDefaults) {
              delete json['wix.api.actionPayload'];
            }
            if (obj['wix.api.decompositeOf'] != null) {
              json['wix.api.decompositeOf'] = obj['wix.api.decompositeOf'];
            } else if (withDefaults) {
              json['wix.api.decompositeOf'] = '';
            }
            if (obj['wix.api.decompositionMinimumFields'] != null) {
              json['wix.api.decompositionMinimumFields'] = obj['wix.api.decompositionMinimumFields'].map(e => {
                return $root.wix.api.FieldSet.toJSON(e, helper, withDefaults);
              });
            } else if (withDefaults) {
              json['wix.api.decompositionMinimumFields'] = [];
            }
            if (obj['wix.api.unwrapArrayValue'] != null) {
              json['wix.api.unwrapArrayValue'] = obj['wix.api.unwrapArrayValue'];
            } else if (withDefaults) {
              json['wix.api.unwrapArrayValue'] = false;
            }
            if (obj['wix.api.messageDeprecated'] != null) {
              json['wix.api.messageDeprecated'] = $root.wix.api.Deprecated.toJSON(obj['wix.api.messageDeprecated'], helper, withDefaults);
            } else if (withDefaults) {
              delete json['wix.api.messageDeprecated'];
            }
            if (obj['wix.api.unique'] != null) {
              json['wix.api.unique'] = obj['wix.api.unique'].map(e => {
                return $root.wix.api.Unique.toJSON(e, helper, withDefaults);
              });
            } else if (withDefaults) {
              json['wix.api.unique'] = [];
            }
            if (obj['wix.api.entity'] != null) {
              json['wix.api.entity'] = $root.wix.api.Entity.toJSON(obj['wix.api.entity'], helper, withDefaults);
            } else if (withDefaults) {
              delete json['wix.api.entity'];
            }
            return json;
          }
        }
        static fromJSON(json, helper, withDefaults) {
          if (typeof json === 'object' && !Array.isArray(json)) {
            const result = new $root.google.protobuf.MessageOptions();
            if (json['messageSetWireFormat'] != null) {
              result['messageSetWireFormat'] = json['messageSetWireFormat'];
            } else if (withDefaults !== false) {
              result['messageSetWireFormat'] = false;
            } else {
              delete result['messageSetWireFormat'];
            }
            if (json['noStandardDescriptorAccessor'] != null) {
              result['noStandardDescriptorAccessor'] = json['noStandardDescriptorAccessor'];
            } else if (withDefaults !== false) {
              result['noStandardDescriptorAccessor'] = false;
            } else {
              delete result['noStandardDescriptorAccessor'];
            }
            if (json['deprecated'] != null) {
              result['deprecated'] = json['deprecated'];
            } else if (withDefaults !== false) {
              result['deprecated'] = false;
            } else {
              delete result['deprecated'];
            }
            if (json['mapEntry'] != null) {
              result['mapEntry'] = json['mapEntry'];
            } else if (withDefaults !== false) {
              result['mapEntry'] = false;
            } else {
              delete result['mapEntry'];
            }
            if (json['uninterpretedOption'] != null) {
              result['uninterpretedOption'] = Array.isArray(json['uninterpretedOption']) ? json['uninterpretedOption'].map(e => {
                return $root.google.protobuf.UninterpretedOption.fromJSON(e, helper);
              }) : json['uninterpretedOption'];
            } else if (withDefaults !== false) {
              result['uninterpretedOption'] = [];
            } else {
              delete result['uninterpretedOption'];
            }
            if (json['wix.api.actionPayload'] != null) {
              result['wix.api.actionPayload'] = $root.wix.api.ActionPayload.fromJSON(json['wix.api.actionPayload'], helper);
            } else if (withDefaults !== false) {
              delete result['wix.api.actionPayload'];
            } else {
              delete result['wix.api.actionPayload'];
            }
            if (json['wix.api.decompositeOf'] != null) {
              result['wix.api.decompositeOf'] = json['wix.api.decompositeOf'];
            } else if (withDefaults !== false) {
              result['wix.api.decompositeOf'] = '';
            } else {
              delete result['wix.api.decompositeOf'];
            }
            if (json['wix.api.decompositionMinimumFields'] != null) {
              result['wix.api.decompositionMinimumFields'] = Array.isArray(json['wix.api.decompositionMinimumFields']) ? json['wix.api.decompositionMinimumFields'].map(e => {
                return $root.wix.api.FieldSet.fromJSON(e, helper);
              }) : json['wix.api.decompositionMinimumFields'];
            } else if (withDefaults !== false) {
              result['wix.api.decompositionMinimumFields'] = [];
            } else {
              delete result['wix.api.decompositionMinimumFields'];
            }
            if (json['wix.api.unwrapArrayValue'] != null) {
              result['wix.api.unwrapArrayValue'] = json['wix.api.unwrapArrayValue'];
            } else if (withDefaults !== false) {
              result['wix.api.unwrapArrayValue'] = false;
            } else {
              delete result['wix.api.unwrapArrayValue'];
            }
            if (json['wix.api.messageDeprecated'] != null) {
              result['wix.api.messageDeprecated'] = $root.wix.api.Deprecated.fromJSON(json['wix.api.messageDeprecated'], helper);
            } else if (withDefaults !== false) {
              delete result['wix.api.messageDeprecated'];
            } else {
              delete result['wix.api.messageDeprecated'];
            }
            if (json['wix.api.unique'] != null) {
              result['wix.api.unique'] = Array.isArray(json['wix.api.unique']) ? json['wix.api.unique'].map(e => {
                return $root.wix.api.Unique.fromJSON(e, helper);
              }) : json['wix.api.unique'];
            } else if (withDefaults !== false) {
              result['wix.api.unique'] = [];
            } else {
              delete result['wix.api.unique'];
            }
            if (json['wix.api.entity'] != null) {
              result['wix.api.entity'] = $root.wix.api.Entity.fromJSON(json['wix.api.entity'], helper);
            } else if (withDefaults !== false) {
              delete result['wix.api.entity'];
            } else {
              delete result['wix.api.entity'];
            }
            return result;
          } else
            return json;
        }
        static toGRPC(obj, helper) {
          if (obj == null) {
            return null;
          } else {
            const grpc = {};
            if (obj['messageSetWireFormat'] != null) {
              grpc['messageSetWireFormat'] = obj['messageSetWireFormat'];
            }
            if (obj['noStandardDescriptorAccessor'] != null) {
              grpc['noStandardDescriptorAccessor'] = obj['noStandardDescriptorAccessor'];
            }
            if (obj['deprecated'] != null) {
              grpc['deprecated'] = obj['deprecated'];
            }
            if (obj['mapEntry'] != null) {
              grpc['mapEntry'] = obj['mapEntry'];
            }
            if (obj['uninterpretedOption'] != null) {
              grpc['uninterpretedOption'] = obj['uninterpretedOption'].map(e => {
                return $root.google.protobuf.UninterpretedOption.toGRPC(e, helper);
              });
            }
            if (obj['wix.api.actionPayload'] != null) {
              grpc['wix.api.actionPayload'] = $root.wix.api.ActionPayload.toGRPC(obj['wix.api.actionPayload'], helper);
            }
            if (obj['wix.api.decompositeOf'] != null) {
              grpc['wix.api.decompositeOf'] = obj['wix.api.decompositeOf'];
            }
            if (obj['wix.api.decompositionMinimumFields'] != null) {
              grpc['wix.api.decompositionMinimumFields'] = obj['wix.api.decompositionMinimumFields'].map(e => {
                return $root.wix.api.FieldSet.toGRPC(e, helper);
              });
            }
            if (obj['wix.api.unwrapArrayValue'] != null) {
              grpc['wix.api.unwrapArrayValue'] = obj['wix.api.unwrapArrayValue'];
            }
            if (obj['wix.api.messageDeprecated'] != null) {
              grpc['wix.api.messageDeprecated'] = $root.wix.api.Deprecated.toGRPC(obj['wix.api.messageDeprecated'], helper);
            }
            if (obj['wix.api.unique'] != null) {
              grpc['wix.api.unique'] = obj['wix.api.unique'].map(e => {
                return $root.wix.api.Unique.toGRPC(e, helper);
              });
            }
            if (obj['wix.api.entity'] != null) {
              grpc['wix.api.entity'] = $root.wix.api.Entity.toGRPC(obj['wix.api.entity'], helper);
            }
            return grpc;
          }
        }
        static fromGRPC(grpc, helper) {
          if (grpc == null) {
            return null;
          } else {
            const result = new $root.google.protobuf.MessageOptions();
            if (grpc['messageSetWireFormat'] != null) {
              result['messageSetWireFormat'] = grpc['messageSetWireFormat'];
            } else {
              result['messageSetWireFormat'] = false;
            }
            if (grpc['noStandardDescriptorAccessor'] != null) {
              result['noStandardDescriptorAccessor'] = grpc['noStandardDescriptorAccessor'];
            } else {
              result['noStandardDescriptorAccessor'] = false;
            }
            if (grpc['deprecated'] != null) {
              result['deprecated'] = grpc['deprecated'];
            } else {
              result['deprecated'] = false;
            }
            if (grpc['mapEntry'] != null) {
              result['mapEntry'] = grpc['mapEntry'];
            } else {
              result['mapEntry'] = false;
            }
            if (grpc['uninterpretedOption'] != null) {
              result['uninterpretedOption'] = grpc['uninterpretedOption'].map(e => {
                return $root.google.protobuf.UninterpretedOption.fromGRPC(e, helper);
              });
            } else {
              result['uninterpretedOption'] = [];
            }
            if (grpc['wix.api.actionPayload'] != null) {
              result['wix.api.actionPayload'] = $root.wix.api.ActionPayload.fromGRPC(grpc['wix.api.actionPayload'], helper);
            } else {
              delete result['wix.api.actionPayload'];
            }
            if (grpc['wix.api.decompositeOf'] != null) {
              result['wix.api.decompositeOf'] = grpc['wix.api.decompositeOf'];
            } else {
              result['wix.api.decompositeOf'] = '';
            }
            if (grpc['wix.api.decompositionMinimumFields'] != null) {
              result['wix.api.decompositionMinimumFields'] = grpc['wix.api.decompositionMinimumFields'].map(e => {
                return $root.wix.api.FieldSet.fromGRPC(e, helper);
              });
            } else {
              result['wix.api.decompositionMinimumFields'] = [];
            }
            if (grpc['wix.api.unwrapArrayValue'] != null) {
              result['wix.api.unwrapArrayValue'] = grpc['wix.api.unwrapArrayValue'];
            } else {
              result['wix.api.unwrapArrayValue'] = false;
            }
            if (grpc['wix.api.messageDeprecated'] != null) {
              result['wix.api.messageDeprecated'] = $root.wix.api.Deprecated.fromGRPC(grpc['wix.api.messageDeprecated'], helper);
            } else {
              delete result['wix.api.messageDeprecated'];
            }
            if (grpc['wix.api.unique'] != null) {
              result['wix.api.unique'] = grpc['wix.api.unique'].map(e => {
                return $root.wix.api.Unique.fromGRPC(e, helper);
              });
            } else {
              result['wix.api.unique'] = [];
            }
            if (grpc['wix.api.entity'] != null) {
              result['wix.api.entity'] = $root.wix.api.Entity.fromGRPC(grpc['wix.api.entity'], helper);
            } else {
              delete result['wix.api.entity'];
            }
            return result;
          }
        }
      }
      __builtIn.Object.defineProperty(MessageOptions.prototype, '__proto', {
        value: pbjs => {
          return $root.__lookup(pbjs)('google.protobuf.MessageOptions');
        },
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(MessageOptions.prototype, '__fqn__', {
        value: 'google.protobuf.MessageOptions',
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(MessageOptions.prototype, '__options__', {
        value: $root.__options,
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(MessageOptions.prototype, '__root__', {
        value: $root,
        enumerable: false,
        configurable: false
      });
      return MessageOptions;
    }());;
    _protobuf.FieldOptions = (function () {
      class FieldOptions {
        constructor(props) {
          this.ctype = props && props.ctype;
          this.packed = props && props.packed;
          this.jstype = props && props.jstype;
          this.lazy = props && props.lazy;
          this.deprecated = props && props.deprecated;
          this.weak = props && props.weak;
          this.uninterpretedOption = props && props.uninterpretedOption;
          this['wix.api.fieldExposure'] = props && props['wix.api.fieldExposure'];
          this['wix.api.fieldMaturity'] = props && props['wix.api.fieldMaturity'];
          this['wix.api.pii'] = props && props['wix.api.pii'];
          this['wix.api.referencedEntity'] = props && props['wix.api.referencedEntity'];
          this['wix.api.fieldDeprecated'] = props && props['wix.api.fieldDeprecated'];
          this['wix.api.translatable'] = props && props['wix.api.translatable'];
          this['wix.api.max'] = props && props['wix.api.max'];
          this['wix.api.min'] = props && props['wix.api.min'];
          this['wix.api.maxLength'] = props && props['wix.api.maxLength'];
          this['wix.api.minLength'] = props && props['wix.api.minLength'];
          this['wix.api.maxSize'] = props && props['wix.api.maxSize'];
          this['wix.api.minSize'] = props && props['wix.api.minSize'];
          this['wix.api.format'] = props && props['wix.api.format'];
          this['wix.api.readOnly'] = props && props['wix.api.readOnly'];
          this['wix.api.immutable'] = props && props['wix.api.immutable'];
          this['wix.api.decimalValue'] = props && props['wix.api.decimalValue'];
          this['wix.api.customValidation'] = props && props['wix.api.customValidation'];
          this['wix.http.inferFieldmaskFrom'] = props && props['wix.http.inferFieldmaskFrom'];
          this['wix.spi.baseUri'] = props && props['wix.spi.baseUri'];
        }
        static toJSON(obj, helper, withDefaults) {
          if (obj == null) {
            return null;
          } else {
            const json = {};
            if (obj['ctype'] != null) {
              json['ctype'] = $root.google.protobuf.FieldOptions.CType[obj['ctype']];
            } else if (withDefaults) {
              json['ctype'] = 0;
            }
            if (obj['packed'] != null) {
              json['packed'] = obj['packed'];
            } else if (withDefaults) {
              json['packed'] = false;
            }
            if (obj['jstype'] != null) {
              json['jstype'] = $root.google.protobuf.FieldOptions.JSType[obj['jstype']];
            } else if (withDefaults) {
              json['jstype'] = 0;
            }
            if (obj['lazy'] != null) {
              json['lazy'] = obj['lazy'];
            } else if (withDefaults) {
              json['lazy'] = false;
            }
            if (obj['deprecated'] != null) {
              json['deprecated'] = obj['deprecated'];
            } else if (withDefaults) {
              json['deprecated'] = false;
            }
            if (obj['weak'] != null) {
              json['weak'] = obj['weak'];
            } else if (withDefaults) {
              json['weak'] = false;
            }
            if (obj['uninterpretedOption'] != null) {
              json['uninterpretedOption'] = obj['uninterpretedOption'].map(e => {
                return $root.google.protobuf.UninterpretedOption.toJSON(e, helper, withDefaults);
              });
            } else if (withDefaults) {
              json['uninterpretedOption'] = [];
            }
            if (obj['wix.api.fieldExposure'] != null) {
              json['wix.api.fieldExposure'] = $root.wix.api.Exposure[obj['wix.api.fieldExposure']];
            } else if (withDefaults) {
              json['wix.api.fieldExposure'] = 0;
            }
            if (obj['wix.api.fieldMaturity'] != null) {
              json['wix.api.fieldMaturity'] = $root.wix.api.Maturity[obj['wix.api.fieldMaturity']];
            } else if (withDefaults) {
              json['wix.api.fieldMaturity'] = 0;
            }
            if (obj['wix.api.pii'] != null) {
              json['wix.api.pii'] = obj['wix.api.pii'];
            } else if (withDefaults) {
              json['wix.api.pii'] = false;
            }
            if (obj['wix.api.referencedEntity'] != null) {
              json['wix.api.referencedEntity'] = obj['wix.api.referencedEntity'];
            } else if (withDefaults) {
              json['wix.api.referencedEntity'] = '';
            }
            if (obj['wix.api.fieldDeprecated'] != null) {
              json['wix.api.fieldDeprecated'] = $root.wix.api.Deprecated.toJSON(obj['wix.api.fieldDeprecated'], helper, withDefaults);
            } else if (withDefaults) {
              delete json['wix.api.fieldDeprecated'];
            }
            if (obj['wix.api.translatable'] != null) {
              json['wix.api.translatable'] = $root.wix.api.Translatable.toJSON(obj['wix.api.translatable'], helper, withDefaults);
            } else if (withDefaults) {
              delete json['wix.api.translatable'];
            }
            if (obj['wix.api.max'] != null) {
              json['wix.api.max'] = obj['wix.api.max'] == null ? obj['wix.api.max'] : isNaN(obj['wix.api.max']) ? 'NaN' : isFinite(obj['wix.api.max']) ? obj['wix.api.max'] : obj['wix.api.max'].toString();
            } else if (withDefaults) {
              json['wix.api.max'] = 0;
            }
            if (obj['wix.api.min'] != null) {
              json['wix.api.min'] = obj['wix.api.min'] == null ? obj['wix.api.min'] : isNaN(obj['wix.api.min']) ? 'NaN' : isFinite(obj['wix.api.min']) ? obj['wix.api.min'] : obj['wix.api.min'].toString();
            } else if (withDefaults) {
              json['wix.api.min'] = 0;
            }
            if (obj['wix.api.maxLength'] != null) {
              json['wix.api.maxLength'] = obj['wix.api.maxLength'];
            } else if (withDefaults) {
              json['wix.api.maxLength'] = 0;
            }
            if (obj['wix.api.minLength'] != null) {
              json['wix.api.minLength'] = obj['wix.api.minLength'];
            } else if (withDefaults) {
              json['wix.api.minLength'] = 0;
            }
            if (obj['wix.api.maxSize'] != null) {
              json['wix.api.maxSize'] = obj['wix.api.maxSize'];
            } else if (withDefaults) {
              json['wix.api.maxSize'] = 0;
            }
            if (obj['wix.api.minSize'] != null) {
              json['wix.api.minSize'] = obj['wix.api.minSize'];
            } else if (withDefaults) {
              json['wix.api.minSize'] = 0;
            }
            if (obj['wix.api.format'] != null) {
              json['wix.api.format'] = $root.wix.api.Format[obj['wix.api.format']];
            } else if (withDefaults) {
              json['wix.api.format'] = 0;
            }
            if (obj['wix.api.readOnly'] != null) {
              json['wix.api.readOnly'] = obj['wix.api.readOnly'];
            } else if (withDefaults) {
              json['wix.api.readOnly'] = false;
            }
            if (obj['wix.api.immutable'] != null) {
              json['wix.api.immutable'] = obj['wix.api.immutable'];
            } else if (withDefaults) {
              json['wix.api.immutable'] = false;
            }
            if (obj['wix.api.decimalValue'] != null) {
              json['wix.api.decimalValue'] = $root.wix.api.DecimalValueOptions.toJSON(obj['wix.api.decimalValue'], helper, withDefaults);
            } else if (withDefaults) {
              delete json['wix.api.decimalValue'];
            }
            if (obj['wix.api.customValidation'] != null) {
              json['wix.api.customValidation'] = $root.wix.api.CustomValidationError.toJSON(obj['wix.api.customValidation'], helper, withDefaults);
            } else if (withDefaults) {
              delete json['wix.api.customValidation'];
            }
            if (obj['wix.http.inferFieldmaskFrom'] != null) {
              json['wix.http.inferFieldmaskFrom'] = obj['wix.http.inferFieldmaskFrom'];
            } else if (withDefaults) {
              json['wix.http.inferFieldmaskFrom'] = '';
            }
            if (obj['wix.spi.baseUri'] != null) {
              json['wix.spi.baseUri'] = obj['wix.spi.baseUri'];
            } else if (withDefaults) {
              json['wix.spi.baseUri'] = false;
            }
            return json;
          }
        }
        static fromJSON(json, helper, withDefaults) {
          if (typeof json === 'object' && !Array.isArray(json)) {
            const result = new $root.google.protobuf.FieldOptions();
            if (json['ctype'] != null) {
              result['ctype'] = typeof json['ctype'] === 'string' ? $root.google.protobuf.FieldOptions.CType[json['ctype']] : json['ctype'];
            } else if (withDefaults !== false) {
              result['ctype'] = 0;
            } else {
              delete result['ctype'];
            }
            if (json['packed'] != null) {
              result['packed'] = json['packed'];
            } else if (withDefaults !== false) {
              result['packed'] = false;
            } else {
              delete result['packed'];
            }
            if (json['jstype'] != null) {
              result['jstype'] = typeof json['jstype'] === 'string' ? $root.google.protobuf.FieldOptions.JSType[json['jstype']] : json['jstype'];
            } else if (withDefaults !== false) {
              result['jstype'] = 0;
            } else {
              delete result['jstype'];
            }
            if (json['lazy'] != null) {
              result['lazy'] = json['lazy'];
            } else if (withDefaults !== false) {
              result['lazy'] = false;
            } else {
              delete result['lazy'];
            }
            if (json['deprecated'] != null) {
              result['deprecated'] = json['deprecated'];
            } else if (withDefaults !== false) {
              result['deprecated'] = false;
            } else {
              delete result['deprecated'];
            }
            if (json['weak'] != null) {
              result['weak'] = json['weak'];
            } else if (withDefaults !== false) {
              result['weak'] = false;
            } else {
              delete result['weak'];
            }
            if (json['uninterpretedOption'] != null) {
              result['uninterpretedOption'] = Array.isArray(json['uninterpretedOption']) ? json['uninterpretedOption'].map(e => {
                return $root.google.protobuf.UninterpretedOption.fromJSON(e, helper);
              }) : json['uninterpretedOption'];
            } else if (withDefaults !== false) {
              result['uninterpretedOption'] = [];
            } else {
              delete result['uninterpretedOption'];
            }
            if (json['wix.api.fieldExposure'] != null) {
              result['wix.api.fieldExposure'] = typeof json['wix.api.fieldExposure'] === 'string' ? $root.wix.api.Exposure[json['wix.api.fieldExposure']] : json['wix.api.fieldExposure'];
            } else if (withDefaults !== false) {
              result['wix.api.fieldExposure'] = 0;
            } else {
              delete result['wix.api.fieldExposure'];
            }
            if (json['wix.api.fieldMaturity'] != null) {
              result['wix.api.fieldMaturity'] = typeof json['wix.api.fieldMaturity'] === 'string' ? $root.wix.api.Maturity[json['wix.api.fieldMaturity']] : json['wix.api.fieldMaturity'];
            } else if (withDefaults !== false) {
              result['wix.api.fieldMaturity'] = 0;
            } else {
              delete result['wix.api.fieldMaturity'];
            }
            if (json['wix.api.pii'] != null) {
              result['wix.api.pii'] = json['wix.api.pii'];
            } else if (withDefaults !== false) {
              result['wix.api.pii'] = false;
            } else {
              delete result['wix.api.pii'];
            }
            if (json['wix.api.referencedEntity'] != null) {
              result['wix.api.referencedEntity'] = json['wix.api.referencedEntity'];
            } else if (withDefaults !== false) {
              result['wix.api.referencedEntity'] = '';
            } else {
              delete result['wix.api.referencedEntity'];
            }
            if (json['wix.api.fieldDeprecated'] != null) {
              result['wix.api.fieldDeprecated'] = $root.wix.api.Deprecated.fromJSON(json['wix.api.fieldDeprecated'], helper);
            } else if (withDefaults !== false) {
              delete result['wix.api.fieldDeprecated'];
            } else {
              delete result['wix.api.fieldDeprecated'];
            }
            if (json['wix.api.translatable'] != null) {
              result['wix.api.translatable'] = $root.wix.api.Translatable.fromJSON(json['wix.api.translatable'], helper);
            } else if (withDefaults !== false) {
              delete result['wix.api.translatable'];
            } else {
              delete result['wix.api.translatable'];
            }
            if (json['wix.api.max'] != null) {
              result['wix.api.max'] = json['wix.api.max'] === 'NaN' ? NaN : json['wix.api.max'] === 'Infinity' ? Infinity : json['wix.api.max'] === '-Infinity' ? -Infinity : json['wix.api.max'];
            } else if (withDefaults !== false) {
              result['wix.api.max'] = 0;
            } else {
              delete result['wix.api.max'];
            }
            if (json['wix.api.min'] != null) {
              result['wix.api.min'] = json['wix.api.min'] === 'NaN' ? NaN : json['wix.api.min'] === 'Infinity' ? Infinity : json['wix.api.min'] === '-Infinity' ? -Infinity : json['wix.api.min'];
            } else if (withDefaults !== false) {
              result['wix.api.min'] = 0;
            } else {
              delete result['wix.api.min'];
            }
            if (json['wix.api.maxLength'] != null) {
              result['wix.api.maxLength'] = json['wix.api.maxLength'];
            } else if (withDefaults !== false) {
              result['wix.api.maxLength'] = 0;
            } else {
              delete result['wix.api.maxLength'];
            }
            if (json['wix.api.minLength'] != null) {
              result['wix.api.minLength'] = json['wix.api.minLength'];
            } else if (withDefaults !== false) {
              result['wix.api.minLength'] = 0;
            } else {
              delete result['wix.api.minLength'];
            }
            if (json['wix.api.maxSize'] != null) {
              result['wix.api.maxSize'] = json['wix.api.maxSize'];
            } else if (withDefaults !== false) {
              result['wix.api.maxSize'] = 0;
            } else {
              delete result['wix.api.maxSize'];
            }
            if (json['wix.api.minSize'] != null) {
              result['wix.api.minSize'] = json['wix.api.minSize'];
            } else if (withDefaults !== false) {
              result['wix.api.minSize'] = 0;
            } else {
              delete result['wix.api.minSize'];
            }
            if (json['wix.api.format'] != null) {
              result['wix.api.format'] = typeof json['wix.api.format'] === 'string' ? $root.wix.api.Format[json['wix.api.format']] : json['wix.api.format'];
            } else if (withDefaults !== false) {
              result['wix.api.format'] = 0;
            } else {
              delete result['wix.api.format'];
            }
            if (json['wix.api.readOnly'] != null) {
              result['wix.api.readOnly'] = json['wix.api.readOnly'];
            } else if (withDefaults !== false) {
              result['wix.api.readOnly'] = false;
            } else {
              delete result['wix.api.readOnly'];
            }
            if (json['wix.api.immutable'] != null) {
              result['wix.api.immutable'] = json['wix.api.immutable'];
            } else if (withDefaults !== false) {
              result['wix.api.immutable'] = false;
            } else {
              delete result['wix.api.immutable'];
            }
            if (json['wix.api.decimalValue'] != null) {
              result['wix.api.decimalValue'] = $root.wix.api.DecimalValueOptions.fromJSON(json['wix.api.decimalValue'], helper);
            } else if (withDefaults !== false) {
              delete result['wix.api.decimalValue'];
            } else {
              delete result['wix.api.decimalValue'];
            }
            if (json['wix.api.customValidation'] != null) {
              result['wix.api.customValidation'] = $root.wix.api.CustomValidationError.fromJSON(json['wix.api.customValidation'], helper);
            } else if (withDefaults !== false) {
              delete result['wix.api.customValidation'];
            } else {
              delete result['wix.api.customValidation'];
            }
            if (json['wix.http.inferFieldmaskFrom'] != null) {
              result['wix.http.inferFieldmaskFrom'] = json['wix.http.inferFieldmaskFrom'];
            } else if (withDefaults !== false) {
              result['wix.http.inferFieldmaskFrom'] = '';
            } else {
              delete result['wix.http.inferFieldmaskFrom'];
            }
            if (json['wix.spi.baseUri'] != null) {
              result['wix.spi.baseUri'] = json['wix.spi.baseUri'];
            } else if (withDefaults !== false) {
              result['wix.spi.baseUri'] = false;
            } else {
              delete result['wix.spi.baseUri'];
            }
            return result;
          } else
            return json;
        }
        static toGRPC(obj, helper) {
          if (obj == null) {
            return null;
          } else {
            const grpc = {};
            if (obj['ctype'] != null) {
              grpc['ctype'] = obj['ctype'];
            }
            if (obj['packed'] != null) {
              grpc['packed'] = obj['packed'];
            }
            if (obj['jstype'] != null) {
              grpc['jstype'] = obj['jstype'];
            }
            if (obj['lazy'] != null) {
              grpc['lazy'] = obj['lazy'];
            }
            if (obj['deprecated'] != null) {
              grpc['deprecated'] = obj['deprecated'];
            }
            if (obj['weak'] != null) {
              grpc['weak'] = obj['weak'];
            }
            if (obj['uninterpretedOption'] != null) {
              grpc['uninterpretedOption'] = obj['uninterpretedOption'].map(e => {
                return $root.google.protobuf.UninterpretedOption.toGRPC(e, helper);
              });
            }
            if (obj['wix.api.fieldExposure'] != null) {
              grpc['wix.api.fieldExposure'] = obj['wix.api.fieldExposure'];
            }
            if (obj['wix.api.fieldMaturity'] != null) {
              grpc['wix.api.fieldMaturity'] = obj['wix.api.fieldMaturity'];
            }
            if (obj['wix.api.pii'] != null) {
              grpc['wix.api.pii'] = obj['wix.api.pii'];
            }
            if (obj['wix.api.referencedEntity'] != null) {
              grpc['wix.api.referencedEntity'] = obj['wix.api.referencedEntity'];
            }
            if (obj['wix.api.fieldDeprecated'] != null) {
              grpc['wix.api.fieldDeprecated'] = $root.wix.api.Deprecated.toGRPC(obj['wix.api.fieldDeprecated'], helper);
            }
            if (obj['wix.api.translatable'] != null) {
              grpc['wix.api.translatable'] = $root.wix.api.Translatable.toGRPC(obj['wix.api.translatable'], helper);
            }
            if (obj['wix.api.max'] != null) {
              grpc['wix.api.max'] = obj['wix.api.max'];
            }
            if (obj['wix.api.min'] != null) {
              grpc['wix.api.min'] = obj['wix.api.min'];
            }
            if (obj['wix.api.maxLength'] != null) {
              grpc['wix.api.maxLength'] = obj['wix.api.maxLength'];
            }
            if (obj['wix.api.minLength'] != null) {
              grpc['wix.api.minLength'] = obj['wix.api.minLength'];
            }
            if (obj['wix.api.maxSize'] != null) {
              grpc['wix.api.maxSize'] = obj['wix.api.maxSize'];
            }
            if (obj['wix.api.minSize'] != null) {
              grpc['wix.api.minSize'] = obj['wix.api.minSize'];
            }
            if (obj['wix.api.format'] != null) {
              grpc['wix.api.format'] = obj['wix.api.format'];
            }
            if (obj['wix.api.readOnly'] != null) {
              grpc['wix.api.readOnly'] = obj['wix.api.readOnly'];
            }
            if (obj['wix.api.immutable'] != null) {
              grpc['wix.api.immutable'] = obj['wix.api.immutable'];
            }
            if (obj['wix.api.decimalValue'] != null) {
              grpc['wix.api.decimalValue'] = $root.wix.api.DecimalValueOptions.toGRPC(obj['wix.api.decimalValue'], helper);
            }
            if (obj['wix.api.customValidation'] != null) {
              grpc['wix.api.customValidation'] = $root.wix.api.CustomValidationError.toGRPC(obj['wix.api.customValidation'], helper);
            }
            if (obj['wix.http.inferFieldmaskFrom'] != null) {
              grpc['wix.http.inferFieldmaskFrom'] = obj['wix.http.inferFieldmaskFrom'];
            }
            if (obj['wix.spi.baseUri'] != null) {
              grpc['wix.spi.baseUri'] = obj['wix.spi.baseUri'];
            }
            return grpc;
          }
        }
        static fromGRPC(grpc, helper) {
          if (grpc == null) {
            return null;
          } else {
            const result = new $root.google.protobuf.FieldOptions();
            if (grpc['ctype'] != null) {
              result['ctype'] = grpc['ctype'];
            } else {
              result['ctype'] = 0;
            }
            if (grpc['packed'] != null) {
              result['packed'] = grpc['packed'];
            } else {
              result['packed'] = false;
            }
            if (grpc['jstype'] != null) {
              result['jstype'] = grpc['jstype'];
            } else {
              result['jstype'] = 0;
            }
            if (grpc['lazy'] != null) {
              result['lazy'] = grpc['lazy'];
            } else {
              result['lazy'] = false;
            }
            if (grpc['deprecated'] != null) {
              result['deprecated'] = grpc['deprecated'];
            } else {
              result['deprecated'] = false;
            }
            if (grpc['weak'] != null) {
              result['weak'] = grpc['weak'];
            } else {
              result['weak'] = false;
            }
            if (grpc['uninterpretedOption'] != null) {
              result['uninterpretedOption'] = grpc['uninterpretedOption'].map(e => {
                return $root.google.protobuf.UninterpretedOption.fromGRPC(e, helper);
              });
            } else {
              result['uninterpretedOption'] = [];
            }
            if (grpc['wix.api.fieldExposure'] != null) {
              result['wix.api.fieldExposure'] = grpc['wix.api.fieldExposure'];
            } else {
              result['wix.api.fieldExposure'] = 0;
            }
            if (grpc['wix.api.fieldMaturity'] != null) {
              result['wix.api.fieldMaturity'] = grpc['wix.api.fieldMaturity'];
            } else {
              result['wix.api.fieldMaturity'] = 0;
            }
            if (grpc['wix.api.pii'] != null) {
              result['wix.api.pii'] = grpc['wix.api.pii'];
            } else {
              result['wix.api.pii'] = false;
            }
            if (grpc['wix.api.referencedEntity'] != null) {
              result['wix.api.referencedEntity'] = grpc['wix.api.referencedEntity'];
            } else {
              result['wix.api.referencedEntity'] = '';
            }
            if (grpc['wix.api.fieldDeprecated'] != null) {
              result['wix.api.fieldDeprecated'] = $root.wix.api.Deprecated.fromGRPC(grpc['wix.api.fieldDeprecated'], helper);
            } else {
              delete result['wix.api.fieldDeprecated'];
            }
            if (grpc['wix.api.translatable'] != null) {
              result['wix.api.translatable'] = $root.wix.api.Translatable.fromGRPC(grpc['wix.api.translatable'], helper);
            } else {
              delete result['wix.api.translatable'];
            }
            if (grpc['wix.api.max'] != null) {
              result['wix.api.max'] = grpc['wix.api.max'];
            } else {
              result['wix.api.max'] = 0;
            }
            if (grpc['wix.api.min'] != null) {
              result['wix.api.min'] = grpc['wix.api.min'];
            } else {
              result['wix.api.min'] = 0;
            }
            if (grpc['wix.api.maxLength'] != null) {
              result['wix.api.maxLength'] = grpc['wix.api.maxLength'];
            } else {
              result['wix.api.maxLength'] = 0;
            }
            if (grpc['wix.api.minLength'] != null) {
              result['wix.api.minLength'] = grpc['wix.api.minLength'];
            } else {
              result['wix.api.minLength'] = 0;
            }
            if (grpc['wix.api.maxSize'] != null) {
              result['wix.api.maxSize'] = grpc['wix.api.maxSize'];
            } else {
              result['wix.api.maxSize'] = 0;
            }
            if (grpc['wix.api.minSize'] != null) {
              result['wix.api.minSize'] = grpc['wix.api.minSize'];
            } else {
              result['wix.api.minSize'] = 0;
            }
            if (grpc['wix.api.format'] != null) {
              result['wix.api.format'] = grpc['wix.api.format'];
            } else {
              result['wix.api.format'] = 0;
            }
            if (grpc['wix.api.readOnly'] != null) {
              result['wix.api.readOnly'] = grpc['wix.api.readOnly'];
            } else {
              result['wix.api.readOnly'] = false;
            }
            if (grpc['wix.api.immutable'] != null) {
              result['wix.api.immutable'] = grpc['wix.api.immutable'];
            } else {
              result['wix.api.immutable'] = false;
            }
            if (grpc['wix.api.decimalValue'] != null) {
              result['wix.api.decimalValue'] = $root.wix.api.DecimalValueOptions.fromGRPC(grpc['wix.api.decimalValue'], helper);
            } else {
              delete result['wix.api.decimalValue'];
            }
            if (grpc['wix.api.customValidation'] != null) {
              result['wix.api.customValidation'] = $root.wix.api.CustomValidationError.fromGRPC(grpc['wix.api.customValidation'], helper);
            } else {
              delete result['wix.api.customValidation'];
            }
            if (grpc['wix.http.inferFieldmaskFrom'] != null) {
              result['wix.http.inferFieldmaskFrom'] = grpc['wix.http.inferFieldmaskFrom'];
            } else {
              result['wix.http.inferFieldmaskFrom'] = '';
            }
            if (grpc['wix.spi.baseUri'] != null) {
              result['wix.spi.baseUri'] = grpc['wix.spi.baseUri'];
            } else {
              result['wix.spi.baseUri'] = false;
            }
            return result;
          }
        }
      }
      FieldOptions.CType = {
        'STRING': 0,
        0: 'STRING',
        'CORD': 1,
        1: 'CORD',
        'STRING_PIECE': 2,
        2: 'STRING_PIECE'
      };
      FieldOptions.JSType = {
        'JS_NORMAL': 0,
        0: 'JS_NORMAL',
        'JS_STRING': 1,
        1: 'JS_STRING',
        'JS_NUMBER': 2,
        2: 'JS_NUMBER'
      };
      FieldOptions.CType = {
        'STRING': 0,
        0: 'STRING',
        'CORD': 1,
        1: 'CORD',
        'STRING_PIECE': 2,
        2: 'STRING_PIECE'
      };
      FieldOptions.JSType = {
        'JS_NORMAL': 0,
        0: 'JS_NORMAL',
        'JS_STRING': 1,
        1: 'JS_STRING',
        'JS_NUMBER': 2,
        2: 'JS_NUMBER'
      };
      __builtIn.Object.defineProperty(FieldOptions.prototype, '__proto', {
        value: pbjs => {
          return $root.__lookup(pbjs)('google.protobuf.FieldOptions');
        },
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(FieldOptions.prototype, '__fqn__', {
        value: 'google.protobuf.FieldOptions',
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(FieldOptions.prototype, '__options__', {
        value: $root.__options,
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(FieldOptions.prototype, '__root__', {
        value: $root,
        enumerable: false,
        configurable: false
      });
      return FieldOptions;
    }());;
    _protobuf.OneofOptions = (function () {
      class OneofOptions {
        constructor(props) {
          this.uninterpretedOption = props && props.uninterpretedOption;
        }
        static toJSON(obj, helper, withDefaults) {
          if (obj == null) {
            return null;
          } else {
            const json = {};
            if (obj['uninterpretedOption'] != null) {
              json['uninterpretedOption'] = obj['uninterpretedOption'].map(e => {
                return $root.google.protobuf.UninterpretedOption.toJSON(e, helper, withDefaults);
              });
            } else if (withDefaults) {
              json['uninterpretedOption'] = [];
            }
            return json;
          }
        }
        static fromJSON(json, helper, withDefaults) {
          if (typeof json === 'object' && !Array.isArray(json)) {
            const result = new $root.google.protobuf.OneofOptions();
            if (json['uninterpretedOption'] != null) {
              result['uninterpretedOption'] = Array.isArray(json['uninterpretedOption']) ? json['uninterpretedOption'].map(e => {
                return $root.google.protobuf.UninterpretedOption.fromJSON(e, helper);
              }) : json['uninterpretedOption'];
            } else if (withDefaults !== false) {
              result['uninterpretedOption'] = [];
            } else {
              delete result['uninterpretedOption'];
            }
            return result;
          } else
            return json;
        }
        static toGRPC(obj, helper) {
          if (obj == null) {
            return null;
          } else {
            const grpc = {};
            if (obj['uninterpretedOption'] != null) {
              grpc['uninterpretedOption'] = obj['uninterpretedOption'].map(e => {
                return $root.google.protobuf.UninterpretedOption.toGRPC(e, helper);
              });
            }
            return grpc;
          }
        }
        static fromGRPC(grpc, helper) {
          if (grpc == null) {
            return null;
          } else {
            const result = new $root.google.protobuf.OneofOptions();
            if (grpc['uninterpretedOption'] != null) {
              result['uninterpretedOption'] = grpc['uninterpretedOption'].map(e => {
                return $root.google.protobuf.UninterpretedOption.fromGRPC(e, helper);
              });
            } else {
              result['uninterpretedOption'] = [];
            }
            return result;
          }
        }
      }
      __builtIn.Object.defineProperty(OneofOptions.prototype, '__proto', {
        value: pbjs => {
          return $root.__lookup(pbjs)('google.protobuf.OneofOptions');
        },
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(OneofOptions.prototype, '__fqn__', {
        value: 'google.protobuf.OneofOptions',
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(OneofOptions.prototype, '__options__', {
        value: $root.__options,
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(OneofOptions.prototype, '__root__', {
        value: $root,
        enumerable: false,
        configurable: false
      });
      return OneofOptions;
    }());;
    _protobuf.EnumOptions = (function () {
      class EnumOptions {
        constructor(props) {
          this.allowAlias = props && props.allowAlias;
          this.deprecated = props && props.deprecated;
          this.uninterpretedOption = props && props.uninterpretedOption;
        }
        static toJSON(obj, helper, withDefaults) {
          if (obj == null) {
            return null;
          } else {
            const json = {};
            if (obj['allowAlias'] != null) {
              json['allowAlias'] = obj['allowAlias'];
            } else if (withDefaults) {
              json['allowAlias'] = false;
            }
            if (obj['deprecated'] != null) {
              json['deprecated'] = obj['deprecated'];
            } else if (withDefaults) {
              json['deprecated'] = false;
            }
            if (obj['uninterpretedOption'] != null) {
              json['uninterpretedOption'] = obj['uninterpretedOption'].map(e => {
                return $root.google.protobuf.UninterpretedOption.toJSON(e, helper, withDefaults);
              });
            } else if (withDefaults) {
              json['uninterpretedOption'] = [];
            }
            return json;
          }
        }
        static fromJSON(json, helper, withDefaults) {
          if (typeof json === 'object' && !Array.isArray(json)) {
            const result = new $root.google.protobuf.EnumOptions();
            if (json['allowAlias'] != null) {
              result['allowAlias'] = json['allowAlias'];
            } else if (withDefaults !== false) {
              result['allowAlias'] = false;
            } else {
              delete result['allowAlias'];
            }
            if (json['deprecated'] != null) {
              result['deprecated'] = json['deprecated'];
            } else if (withDefaults !== false) {
              result['deprecated'] = false;
            } else {
              delete result['deprecated'];
            }
            if (json['uninterpretedOption'] != null) {
              result['uninterpretedOption'] = Array.isArray(json['uninterpretedOption']) ? json['uninterpretedOption'].map(e => {
                return $root.google.protobuf.UninterpretedOption.fromJSON(e, helper);
              }) : json['uninterpretedOption'];
            } else if (withDefaults !== false) {
              result['uninterpretedOption'] = [];
            } else {
              delete result['uninterpretedOption'];
            }
            return result;
          } else
            return json;
        }
        static toGRPC(obj, helper) {
          if (obj == null) {
            return null;
          } else {
            const grpc = {};
            if (obj['allowAlias'] != null) {
              grpc['allowAlias'] = obj['allowAlias'];
            }
            if (obj['deprecated'] != null) {
              grpc['deprecated'] = obj['deprecated'];
            }
            if (obj['uninterpretedOption'] != null) {
              grpc['uninterpretedOption'] = obj['uninterpretedOption'].map(e => {
                return $root.google.protobuf.UninterpretedOption.toGRPC(e, helper);
              });
            }
            return grpc;
          }
        }
        static fromGRPC(grpc, helper) {
          if (grpc == null) {
            return null;
          } else {
            const result = new $root.google.protobuf.EnumOptions();
            if (grpc['allowAlias'] != null) {
              result['allowAlias'] = grpc['allowAlias'];
            } else {
              result['allowAlias'] = false;
            }
            if (grpc['deprecated'] != null) {
              result['deprecated'] = grpc['deprecated'];
            } else {
              result['deprecated'] = false;
            }
            if (grpc['uninterpretedOption'] != null) {
              result['uninterpretedOption'] = grpc['uninterpretedOption'].map(e => {
                return $root.google.protobuf.UninterpretedOption.fromGRPC(e, helper);
              });
            } else {
              result['uninterpretedOption'] = [];
            }
            return result;
          }
        }
      }
      __builtIn.Object.defineProperty(EnumOptions.prototype, '__proto', {
        value: pbjs => {
          return $root.__lookup(pbjs)('google.protobuf.EnumOptions');
        },
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(EnumOptions.prototype, '__fqn__', {
        value: 'google.protobuf.EnumOptions',
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(EnumOptions.prototype, '__options__', {
        value: $root.__options,
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(EnumOptions.prototype, '__root__', {
        value: $root,
        enumerable: false,
        configurable: false
      });
      return EnumOptions;
    }());;
    _protobuf.EnumValueOptions = (function () {
      class EnumValueOptions {
        constructor(props) {
          this.deprecated = props && props.deprecated;
          this.uninterpretedOption = props && props.uninterpretedOption;
          this['wix.api.enumMaturity'] = props && props['wix.api.enumMaturity'];
          this['wix.api.enumExposure'] = props && props['wix.api.enumExposure'];
        }
        static toJSON(obj, helper, withDefaults) {
          if (obj == null) {
            return null;
          } else {
            const json = {};
            if (obj['deprecated'] != null) {
              json['deprecated'] = obj['deprecated'];
            } else if (withDefaults) {
              json['deprecated'] = false;
            }
            if (obj['uninterpretedOption'] != null) {
              json['uninterpretedOption'] = obj['uninterpretedOption'].map(e => {
                return $root.google.protobuf.UninterpretedOption.toJSON(e, helper, withDefaults);
              });
            } else if (withDefaults) {
              json['uninterpretedOption'] = [];
            }
            if (obj['wix.api.enumMaturity'] != null) {
              json['wix.api.enumMaturity'] = $root.wix.api.Maturity[obj['wix.api.enumMaturity']];
            } else if (withDefaults) {
              json['wix.api.enumMaturity'] = 0;
            }
            if (obj['wix.api.enumExposure'] != null) {
              json['wix.api.enumExposure'] = $root.wix.api.Exposure[obj['wix.api.enumExposure']];
            } else if (withDefaults) {
              json['wix.api.enumExposure'] = 0;
            }
            return json;
          }
        }
        static fromJSON(json, helper, withDefaults) {
          if (typeof json === 'object' && !Array.isArray(json)) {
            const result = new $root.google.protobuf.EnumValueOptions();
            if (json['deprecated'] != null) {
              result['deprecated'] = json['deprecated'];
            } else if (withDefaults !== false) {
              result['deprecated'] = false;
            } else {
              delete result['deprecated'];
            }
            if (json['uninterpretedOption'] != null) {
              result['uninterpretedOption'] = Array.isArray(json['uninterpretedOption']) ? json['uninterpretedOption'].map(e => {
                return $root.google.protobuf.UninterpretedOption.fromJSON(e, helper);
              }) : json['uninterpretedOption'];
            } else if (withDefaults !== false) {
              result['uninterpretedOption'] = [];
            } else {
              delete result['uninterpretedOption'];
            }
            if (json['wix.api.enumMaturity'] != null) {
              result['wix.api.enumMaturity'] = typeof json['wix.api.enumMaturity'] === 'string' ? $root.wix.api.Maturity[json['wix.api.enumMaturity']] : json['wix.api.enumMaturity'];
            } else if (withDefaults !== false) {
              result['wix.api.enumMaturity'] = 0;
            } else {
              delete result['wix.api.enumMaturity'];
            }
            if (json['wix.api.enumExposure'] != null) {
              result['wix.api.enumExposure'] = typeof json['wix.api.enumExposure'] === 'string' ? $root.wix.api.Exposure[json['wix.api.enumExposure']] : json['wix.api.enumExposure'];
            } else if (withDefaults !== false) {
              result['wix.api.enumExposure'] = 0;
            } else {
              delete result['wix.api.enumExposure'];
            }
            return result;
          } else
            return json;
        }
        static toGRPC(obj, helper) {
          if (obj == null) {
            return null;
          } else {
            const grpc = {};
            if (obj['deprecated'] != null) {
              grpc['deprecated'] = obj['deprecated'];
            }
            if (obj['uninterpretedOption'] != null) {
              grpc['uninterpretedOption'] = obj['uninterpretedOption'].map(e => {
                return $root.google.protobuf.UninterpretedOption.toGRPC(e, helper);
              });
            }
            if (obj['wix.api.enumMaturity'] != null) {
              grpc['wix.api.enumMaturity'] = obj['wix.api.enumMaturity'];
            }
            if (obj['wix.api.enumExposure'] != null) {
              grpc['wix.api.enumExposure'] = obj['wix.api.enumExposure'];
            }
            return grpc;
          }
        }
        static fromGRPC(grpc, helper) {
          if (grpc == null) {
            return null;
          } else {
            const result = new $root.google.protobuf.EnumValueOptions();
            if (grpc['deprecated'] != null) {
              result['deprecated'] = grpc['deprecated'];
            } else {
              result['deprecated'] = false;
            }
            if (grpc['uninterpretedOption'] != null) {
              result['uninterpretedOption'] = grpc['uninterpretedOption'].map(e => {
                return $root.google.protobuf.UninterpretedOption.fromGRPC(e, helper);
              });
            } else {
              result['uninterpretedOption'] = [];
            }
            if (grpc['wix.api.enumMaturity'] != null) {
              result['wix.api.enumMaturity'] = grpc['wix.api.enumMaturity'];
            } else {
              result['wix.api.enumMaturity'] = 0;
            }
            if (grpc['wix.api.enumExposure'] != null) {
              result['wix.api.enumExposure'] = grpc['wix.api.enumExposure'];
            } else {
              result['wix.api.enumExposure'] = 0;
            }
            return result;
          }
        }
      }
      __builtIn.Object.defineProperty(EnumValueOptions.prototype, '__proto', {
        value: pbjs => {
          return $root.__lookup(pbjs)('google.protobuf.EnumValueOptions');
        },
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(EnumValueOptions.prototype, '__fqn__', {
        value: 'google.protobuf.EnumValueOptions',
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(EnumValueOptions.prototype, '__options__', {
        value: $root.__options,
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(EnumValueOptions.prototype, '__root__', {
        value: $root,
        enumerable: false,
        configurable: false
      });
      return EnumValueOptions;
    }());;
    _protobuf.ServiceOptions = (function () {
      class ServiceOptions {
        constructor(props) {
          this.deprecated = props && props.deprecated;
          this.uninterpretedOption = props && props.uninterpretedOption;
          this['wix.api.serviceMaturity'] = props && props['wix.api.serviceMaturity'];
          this['wix.api.serviceExposure'] = props && props['wix.api.serviceExposure'];
          this['wix.api.serviceDeprecated'] = props && props['wix.api.serviceDeprecated'];
          this['wix.api.appendixFiles'] = props && props['wix.api.appendixFiles'];
          this['wix.api.event'] = props && props['wix.api.event'];
          this['wix.api.eventDeprecated'] = props && props['wix.api.eventDeprecated'];
          this['wix.api.serviceEntity'] = props && props['wix.api.serviceEntity'];
          this['wix.spi.service'] = props && props['wix.spi.service'];
          this['wix.spi.event'] = props && props['wix.spi.event'];
        }
        static toJSON(obj, helper, withDefaults) {
          if (obj == null) {
            return null;
          } else {
            const json = {};
            if (obj['deprecated'] != null) {
              json['deprecated'] = obj['deprecated'];
            } else if (withDefaults) {
              json['deprecated'] = false;
            }
            if (obj['uninterpretedOption'] != null) {
              json['uninterpretedOption'] = obj['uninterpretedOption'].map(e => {
                return $root.google.protobuf.UninterpretedOption.toJSON(e, helper, withDefaults);
              });
            } else if (withDefaults) {
              json['uninterpretedOption'] = [];
            }
            if (obj['wix.api.serviceMaturity'] != null) {
              json['wix.api.serviceMaturity'] = $root.wix.api.Maturity[obj['wix.api.serviceMaturity']];
            } else if (withDefaults) {
              json['wix.api.serviceMaturity'] = 0;
            }
            if (obj['wix.api.serviceExposure'] != null) {
              json['wix.api.serviceExposure'] = $root.wix.api.Exposure[obj['wix.api.serviceExposure']];
            } else if (withDefaults) {
              json['wix.api.serviceExposure'] = 0;
            }
            if (obj['wix.api.serviceDeprecated'] != null) {
              json['wix.api.serviceDeprecated'] = $root.wix.api.Deprecated.toJSON(obj['wix.api.serviceDeprecated'], helper, withDefaults);
            } else if (withDefaults) {
              delete json['wix.api.serviceDeprecated'];
            }
            if (obj['wix.api.appendixFiles'] != null) {
              json['wix.api.appendixFiles'] = obj['wix.api.appendixFiles'].map(e => {
                return $root.wix.api.ServiceAppendix.toJSON(e, helper, withDefaults);
              });
            } else if (withDefaults) {
              json['wix.api.appendixFiles'] = [];
            }
            if (obj['wix.api.event'] != null) {
              json['wix.api.event'] = obj['wix.api.event'].map(e => {
                return $root.wix.api.Callback.toJSON(e, helper, withDefaults);
              });
            } else if (withDefaults) {
              json['wix.api.event'] = [];
            }
            if (obj['wix.api.eventDeprecated'] != null) {
              json['wix.api.eventDeprecated'] = obj['wix.api.eventDeprecated'].map(e => {
                return $root.wix.api.CallbackDeprecation.toJSON(e, helper, withDefaults);
              });
            } else if (withDefaults) {
              json['wix.api.eventDeprecated'] = [];
            }
            if (obj['wix.api.serviceEntity'] != null) {
              json['wix.api.serviceEntity'] = $root.wix.api.ServiceEntity.toJSON(obj['wix.api.serviceEntity'], helper, withDefaults);
            } else if (withDefaults) {
              delete json['wix.api.serviceEntity'];
            }
            if (obj['wix.spi.service'] != null) {
              json['wix.spi.service'] = $root.wix.spi.Service.toJSON(obj['wix.spi.service'], helper, withDefaults);
            } else if (withDefaults) {
              delete json['wix.spi.service'];
            }
            if (obj['wix.spi.event'] != null) {
              json['wix.spi.event'] = obj['wix.spi.event'].map(e => {
                return $root.wix.spi.Event.toJSON(e, helper, withDefaults);
              });
            } else if (withDefaults) {
              json['wix.spi.event'] = [];
            }
            return json;
          }
        }
        static fromJSON(json, helper, withDefaults) {
          if (typeof json === 'object' && !Array.isArray(json)) {
            const result = new $root.google.protobuf.ServiceOptions();
            if (json['deprecated'] != null) {
              result['deprecated'] = json['deprecated'];
            } else if (withDefaults !== false) {
              result['deprecated'] = false;
            } else {
              delete result['deprecated'];
            }
            if (json['uninterpretedOption'] != null) {
              result['uninterpretedOption'] = Array.isArray(json['uninterpretedOption']) ? json['uninterpretedOption'].map(e => {
                return $root.google.protobuf.UninterpretedOption.fromJSON(e, helper);
              }) : json['uninterpretedOption'];
            } else if (withDefaults !== false) {
              result['uninterpretedOption'] = [];
            } else {
              delete result['uninterpretedOption'];
            }
            if (json['wix.api.serviceMaturity'] != null) {
              result['wix.api.serviceMaturity'] = typeof json['wix.api.serviceMaturity'] === 'string' ? $root.wix.api.Maturity[json['wix.api.serviceMaturity']] : json['wix.api.serviceMaturity'];
            } else if (withDefaults !== false) {
              result['wix.api.serviceMaturity'] = 0;
            } else {
              delete result['wix.api.serviceMaturity'];
            }
            if (json['wix.api.serviceExposure'] != null) {
              result['wix.api.serviceExposure'] = typeof json['wix.api.serviceExposure'] === 'string' ? $root.wix.api.Exposure[json['wix.api.serviceExposure']] : json['wix.api.serviceExposure'];
            } else if (withDefaults !== false) {
              result['wix.api.serviceExposure'] = 0;
            } else {
              delete result['wix.api.serviceExposure'];
            }
            if (json['wix.api.serviceDeprecated'] != null) {
              result['wix.api.serviceDeprecated'] = $root.wix.api.Deprecated.fromJSON(json['wix.api.serviceDeprecated'], helper);
            } else if (withDefaults !== false) {
              delete result['wix.api.serviceDeprecated'];
            } else {
              delete result['wix.api.serviceDeprecated'];
            }
            if (json['wix.api.appendixFiles'] != null) {
              result['wix.api.appendixFiles'] = Array.isArray(json['wix.api.appendixFiles']) ? json['wix.api.appendixFiles'].map(e => {
                return $root.wix.api.ServiceAppendix.fromJSON(e, helper);
              }) : json['wix.api.appendixFiles'];
            } else if (withDefaults !== false) {
              result['wix.api.appendixFiles'] = [];
            } else {
              delete result['wix.api.appendixFiles'];
            }
            if (json['wix.api.event'] != null) {
              result['wix.api.event'] = Array.isArray(json['wix.api.event']) ? json['wix.api.event'].map(e => {
                return $root.wix.api.Callback.fromJSON(e, helper);
              }) : json['wix.api.event'];
            } else if (withDefaults !== false) {
              result['wix.api.event'] = [];
            } else {
              delete result['wix.api.event'];
            }
            if (json['wix.api.eventDeprecated'] != null) {
              result['wix.api.eventDeprecated'] = Array.isArray(json['wix.api.eventDeprecated']) ? json['wix.api.eventDeprecated'].map(e => {
                return $root.wix.api.CallbackDeprecation.fromJSON(e, helper);
              }) : json['wix.api.eventDeprecated'];
            } else if (withDefaults !== false) {
              result['wix.api.eventDeprecated'] = [];
            } else {
              delete result['wix.api.eventDeprecated'];
            }
            if (json['wix.api.serviceEntity'] != null) {
              result['wix.api.serviceEntity'] = $root.wix.api.ServiceEntity.fromJSON(json['wix.api.serviceEntity'], helper);
            } else if (withDefaults !== false) {
              delete result['wix.api.serviceEntity'];
            } else {
              delete result['wix.api.serviceEntity'];
            }
            if (json['wix.spi.service'] != null) {
              result['wix.spi.service'] = $root.wix.spi.Service.fromJSON(json['wix.spi.service'], helper);
            } else if (withDefaults !== false) {
              delete result['wix.spi.service'];
            } else {
              delete result['wix.spi.service'];
            }
            if (json['wix.spi.event'] != null) {
              result['wix.spi.event'] = Array.isArray(json['wix.spi.event']) ? json['wix.spi.event'].map(e => {
                return $root.wix.spi.Event.fromJSON(e, helper);
              }) : json['wix.spi.event'];
            } else if (withDefaults !== false) {
              result['wix.spi.event'] = [];
            } else {
              delete result['wix.spi.event'];
            }
            return result;
          } else
            return json;
        }
        static toGRPC(obj, helper) {
          if (obj == null) {
            return null;
          } else {
            const grpc = {};
            if (obj['deprecated'] != null) {
              grpc['deprecated'] = obj['deprecated'];
            }
            if (obj['uninterpretedOption'] != null) {
              grpc['uninterpretedOption'] = obj['uninterpretedOption'].map(e => {
                return $root.google.protobuf.UninterpretedOption.toGRPC(e, helper);
              });
            }
            if (obj['wix.api.serviceMaturity'] != null) {
              grpc['wix.api.serviceMaturity'] = obj['wix.api.serviceMaturity'];
            }
            if (obj['wix.api.serviceExposure'] != null) {
              grpc['wix.api.serviceExposure'] = obj['wix.api.serviceExposure'];
            }
            if (obj['wix.api.serviceDeprecated'] != null) {
              grpc['wix.api.serviceDeprecated'] = $root.wix.api.Deprecated.toGRPC(obj['wix.api.serviceDeprecated'], helper);
            }
            if (obj['wix.api.appendixFiles'] != null) {
              grpc['wix.api.appendixFiles'] = obj['wix.api.appendixFiles'].map(e => {
                return $root.wix.api.ServiceAppendix.toGRPC(e, helper);
              });
            }
            if (obj['wix.api.event'] != null) {
              grpc['wix.api.event'] = obj['wix.api.event'].map(e => {
                return $root.wix.api.Callback.toGRPC(e, helper);
              });
            }
            if (obj['wix.api.eventDeprecated'] != null) {
              grpc['wix.api.eventDeprecated'] = obj['wix.api.eventDeprecated'].map(e => {
                return $root.wix.api.CallbackDeprecation.toGRPC(e, helper);
              });
            }
            if (obj['wix.api.serviceEntity'] != null) {
              grpc['wix.api.serviceEntity'] = $root.wix.api.ServiceEntity.toGRPC(obj['wix.api.serviceEntity'], helper);
            }
            if (obj['wix.spi.service'] != null) {
              grpc['wix.spi.service'] = $root.wix.spi.Service.toGRPC(obj['wix.spi.service'], helper);
            }
            if (obj['wix.spi.event'] != null) {
              grpc['wix.spi.event'] = obj['wix.spi.event'].map(e => {
                return $root.wix.spi.Event.toGRPC(e, helper);
              });
            }
            return grpc;
          }
        }
        static fromGRPC(grpc, helper) {
          if (grpc == null) {
            return null;
          } else {
            const result = new $root.google.protobuf.ServiceOptions();
            if (grpc['deprecated'] != null) {
              result['deprecated'] = grpc['deprecated'];
            } else {
              result['deprecated'] = false;
            }
            if (grpc['uninterpretedOption'] != null) {
              result['uninterpretedOption'] = grpc['uninterpretedOption'].map(e => {
                return $root.google.protobuf.UninterpretedOption.fromGRPC(e, helper);
              });
            } else {
              result['uninterpretedOption'] = [];
            }
            if (grpc['wix.api.serviceMaturity'] != null) {
              result['wix.api.serviceMaturity'] = grpc['wix.api.serviceMaturity'];
            } else {
              result['wix.api.serviceMaturity'] = 0;
            }
            if (grpc['wix.api.serviceExposure'] != null) {
              result['wix.api.serviceExposure'] = grpc['wix.api.serviceExposure'];
            } else {
              result['wix.api.serviceExposure'] = 0;
            }
            if (grpc['wix.api.serviceDeprecated'] != null) {
              result['wix.api.serviceDeprecated'] = $root.wix.api.Deprecated.fromGRPC(grpc['wix.api.serviceDeprecated'], helper);
            } else {
              delete result['wix.api.serviceDeprecated'];
            }
            if (grpc['wix.api.appendixFiles'] != null) {
              result['wix.api.appendixFiles'] = grpc['wix.api.appendixFiles'].map(e => {
                return $root.wix.api.ServiceAppendix.fromGRPC(e, helper);
              });
            } else {
              result['wix.api.appendixFiles'] = [];
            }
            if (grpc['wix.api.event'] != null) {
              result['wix.api.event'] = grpc['wix.api.event'].map(e => {
                return $root.wix.api.Callback.fromGRPC(e, helper);
              });
            } else {
              result['wix.api.event'] = [];
            }
            if (grpc['wix.api.eventDeprecated'] != null) {
              result['wix.api.eventDeprecated'] = grpc['wix.api.eventDeprecated'].map(e => {
                return $root.wix.api.CallbackDeprecation.fromGRPC(e, helper);
              });
            } else {
              result['wix.api.eventDeprecated'] = [];
            }
            if (grpc['wix.api.serviceEntity'] != null) {
              result['wix.api.serviceEntity'] = $root.wix.api.ServiceEntity.fromGRPC(grpc['wix.api.serviceEntity'], helper);
            } else {
              delete result['wix.api.serviceEntity'];
            }
            if (grpc['wix.spi.service'] != null) {
              result['wix.spi.service'] = $root.wix.spi.Service.fromGRPC(grpc['wix.spi.service'], helper);
            } else {
              delete result['wix.spi.service'];
            }
            if (grpc['wix.spi.event'] != null) {
              result['wix.spi.event'] = grpc['wix.spi.event'].map(e => {
                return $root.wix.spi.Event.fromGRPC(e, helper);
              });
            } else {
              result['wix.spi.event'] = [];
            }
            return result;
          }
        }
      }
      __builtIn.Object.defineProperty(ServiceOptions.prototype, '__proto', {
        value: pbjs => {
          return $root.__lookup(pbjs)('google.protobuf.ServiceOptions');
        },
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(ServiceOptions.prototype, '__fqn__', {
        value: 'google.protobuf.ServiceOptions',
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(ServiceOptions.prototype, '__options__', {
        value: $root.__options,
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(ServiceOptions.prototype, '__root__', {
        value: $root,
        enumerable: false,
        configurable: false
      });
      return ServiceOptions;
    }());;
    _protobuf.MethodOptions = (function () {
      class MethodOptions {
        constructor(props) {
          this.deprecated = props && props.deprecated;
          this.idempotencyLevel = props && props.idempotencyLevel;
          this.uninterpretedOption = props && props.uninterpretedOption;
          this['wix.api.exposure'] = props && props['wix.api.exposure'];
          this['wix.api.maturity'] = props && props['wix.api.maturity'];
          this['wix.api.cacheable'] = props && props['wix.api.cacheable'];
          this['wix.api.deprecated'] = props && props['wix.api.deprecated'];
          this['wix.api.crud'] = props && props['wix.api.crud'];
          this['wix.api.hookable'] = props && props['wix.api.hookable'];
          this['wix.api.acceptsLinguist'] = props && props['wix.api.acceptsLinguist'];
          this['wix.api.error'] = props && props['wix.api.error'];
          this['wix.api.customValidationError'] = props && props['wix.api.customValidationError'];
          this['wix.api.inheritCrudErrors'] = props && props['wix.api.inheritCrudErrors'];
          this['wix.api.callback'] = props && props['wix.api.callback'];
          this['wix.api.permission'] = props && props['wix.api.permission'];
          this['wix.api.additionalPermission'] = props && props['wix.api.additionalPermission'];
          this['wix.api.sla'] = props && props['wix.api.sla'];
          this['wix.api.subscription'] = props && props['wix.api.subscription'];
          this['wix.api.required'] = props && props['wix.api.required'];
          this['wix.api.writable'] = props && props['wix.api.writable'];
          this['wix.http.inferFieldmask'] = props && props['wix.http.inferFieldmask'];
          this['wix.sdk.signature'] = props && props['wix.sdk.signature'];
          this['wix.spi.error'] = props && props['wix.spi.error'];
          this['wix.spi.featureToggle'] = props && props['wix.spi.featureToggle'];
        }
        static toJSON(obj, helper, withDefaults) {
          if (obj == null) {
            return null;
          } else {
            const json = {};
            if (obj['deprecated'] != null) {
              json['deprecated'] = obj['deprecated'];
            } else if (withDefaults) {
              json['deprecated'] = false;
            }
            if (obj['idempotencyLevel'] != null) {
              json['idempotencyLevel'] = $root.google.protobuf.MethodOptions.IdempotencyLevel[obj['idempotencyLevel']];
            } else if (withDefaults) {
              json['idempotencyLevel'] = 0;
            }
            if (obj['uninterpretedOption'] != null) {
              json['uninterpretedOption'] = obj['uninterpretedOption'].map(e => {
                return $root.google.protobuf.UninterpretedOption.toJSON(e, helper, withDefaults);
              });
            } else if (withDefaults) {
              json['uninterpretedOption'] = [];
            }
            if (obj['wix.api.exposure'] != null) {
              json['wix.api.exposure'] = $root.wix.api.Exposure[obj['wix.api.exposure']];
            } else if (withDefaults) {
              json['wix.api.exposure'] = 0;
            }
            if (obj['wix.api.maturity'] != null) {
              json['wix.api.maturity'] = $root.wix.api.Maturity[obj['wix.api.maturity']];
            } else if (withDefaults) {
              json['wix.api.maturity'] = 0;
            }
            if (obj['wix.api.cacheable'] != null) {
              json['wix.api.cacheable'] = $root.wix.api.CacheSettings.toJSON(obj['wix.api.cacheable'], helper, withDefaults);
            } else if (withDefaults) {
              delete json['wix.api.cacheable'];
            }
            if (obj['wix.api.deprecated'] != null) {
              json['wix.api.deprecated'] = $root.wix.api.Deprecated.toJSON(obj['wix.api.deprecated'], helper, withDefaults);
            } else if (withDefaults) {
              delete json['wix.api.deprecated'];
            }
            if (obj['wix.api.crud'] != null) {
              json['wix.api.crud'] = $root.wix.api.Crud.toJSON(obj['wix.api.crud'], helper, withDefaults);
            } else if (withDefaults) {
              delete json['wix.api.crud'];
            }
            if (obj['wix.api.hookable'] != null) {
              json['wix.api.hookable'] = $root.wix.api.Hookable.toJSON(obj['wix.api.hookable'], helper, withDefaults);
            } else if (withDefaults) {
              delete json['wix.api.hookable'];
            }
            if (obj['wix.api.acceptsLinguist'] != null) {
              json['wix.api.acceptsLinguist'] = obj['wix.api.acceptsLinguist'];
            } else if (withDefaults) {
              json['wix.api.acceptsLinguist'] = false;
            }
            if (obj['wix.api.error'] != null) {
              json['wix.api.error'] = obj['wix.api.error'].map(e => {
                return $root.wix.api.Error.toJSON(e, helper, withDefaults);
              });
            } else if (withDefaults) {
              json['wix.api.error'] = [];
            }
            if (obj['wix.api.customValidationError'] != null) {
              json['wix.api.customValidationError'] = obj['wix.api.customValidationError'].map(e => {
                return $root.wix.api.CustomValidationError.toJSON(e, helper, withDefaults);
              });
            } else if (withDefaults) {
              json['wix.api.customValidationError'] = [];
            }
            if (obj['wix.api.inheritCrudErrors'] != null) {
              json['wix.api.inheritCrudErrors'] = obj['wix.api.inheritCrudErrors'].map(e => {
                return $root.wix.api.InheritCrudErrors.toJSON(e, helper, withDefaults);
              });
            } else if (withDefaults) {
              json['wix.api.inheritCrudErrors'] = [];
            }
            if (obj['wix.api.callback'] != null) {
              json['wix.api.callback'] = obj['wix.api.callback'].map(e => {
                return $root.wix.api.Callback.toJSON(e, helper, withDefaults);
              });
            } else if (withDefaults) {
              json['wix.api.callback'] = [];
            }
            if (obj['wix.api.permission'] != null) {
              json['wix.api.permission'] = $root.wix.api.PermissionRule.toJSON(obj['wix.api.permission'], helper, withDefaults);
            } else if (withDefaults) {
              delete json['wix.api.permission'];
            }
            if (obj['wix.api.additionalPermission'] != null) {
              json['wix.api.additionalPermission'] = obj['wix.api.additionalPermission'].map(e => {
                return $root.wix.api.PermissionRule.toJSON(e, helper, withDefaults);
              });
            } else if (withDefaults) {
              json['wix.api.additionalPermission'] = [];
            }
            if (obj['wix.api.sla'] != null) {
              json['wix.api.sla'] = $root.wix.api.Sla.toJSON(obj['wix.api.sla'], helper, withDefaults);
            } else if (withDefaults) {
              delete json['wix.api.sla'];
            }
            if (obj['wix.api.subscription'] != null) {
              json['wix.api.subscription'] = $root.wix.api.Subscription.toJSON(obj['wix.api.subscription'], helper, withDefaults);
            } else if (withDefaults) {
              delete json['wix.api.subscription'];
            }
            if (obj['wix.api.required'] != null) {
              json['wix.api.required'] = obj['wix.api.required'].map(e => {
                return e;
              });
            } else if (withDefaults) {
              json['wix.api.required'] = [];
            }
            if (obj['wix.api.writable'] != null) {
              json['wix.api.writable'] = obj['wix.api.writable'].map(e => {
                return e;
              });
            } else if (withDefaults) {
              json['wix.api.writable'] = [];
            }
            if (obj['wix.http.inferFieldmask'] != null) {
              json['wix.http.inferFieldmask'] = $root.wix.http.InferFieldmask.toJSON(obj['wix.http.inferFieldmask'], helper, withDefaults);
            } else if (withDefaults) {
              delete json['wix.http.inferFieldmask'];
            }
            if (obj['wix.sdk.signature'] != null) {
              json['wix.sdk.signature'] = obj['wix.sdk.signature'].map(e => {
                return $root.wix.sdk.Signature.toJSON(e, helper, withDefaults);
              });
            } else if (withDefaults) {
              json['wix.sdk.signature'] = [];
            }
            if (obj['wix.spi.error'] != null) {
              json['wix.spi.error'] = obj['wix.spi.error'].map(e => {
                return $root.wix.spi.Error.toJSON(e, helper, withDefaults);
              });
            } else if (withDefaults) {
              json['wix.spi.error'] = [];
            }
            if (obj['wix.spi.featureToggle'] != null) {
              json['wix.spi.featureToggle'] = obj['wix.spi.featureToggle'];
            } else if (withDefaults) {
              json['wix.spi.featureToggle'] = '';
            }
            return json;
          }
        }
        static fromJSON(json, helper, withDefaults) {
          if (typeof json === 'object' && !Array.isArray(json)) {
            const result = new $root.google.protobuf.MethodOptions();
            if (json['deprecated'] != null) {
              result['deprecated'] = json['deprecated'];
            } else if (withDefaults !== false) {
              result['deprecated'] = false;
            } else {
              delete result['deprecated'];
            }
            if (json['idempotencyLevel'] != null) {
              result['idempotencyLevel'] = typeof json['idempotencyLevel'] === 'string' ? $root.google.protobuf.MethodOptions.IdempotencyLevel[json['idempotencyLevel']] : json['idempotencyLevel'];
            } else if (withDefaults !== false) {
              result['idempotencyLevel'] = 0;
            } else {
              delete result['idempotencyLevel'];
            }
            if (json['uninterpretedOption'] != null) {
              result['uninterpretedOption'] = Array.isArray(json['uninterpretedOption']) ? json['uninterpretedOption'].map(e => {
                return $root.google.protobuf.UninterpretedOption.fromJSON(e, helper);
              }) : json['uninterpretedOption'];
            } else if (withDefaults !== false) {
              result['uninterpretedOption'] = [];
            } else {
              delete result['uninterpretedOption'];
            }
            if (json['wix.api.exposure'] != null) {
              result['wix.api.exposure'] = typeof json['wix.api.exposure'] === 'string' ? $root.wix.api.Exposure[json['wix.api.exposure']] : json['wix.api.exposure'];
            } else if (withDefaults !== false) {
              result['wix.api.exposure'] = 0;
            } else {
              delete result['wix.api.exposure'];
            }
            if (json['wix.api.maturity'] != null) {
              result['wix.api.maturity'] = typeof json['wix.api.maturity'] === 'string' ? $root.wix.api.Maturity[json['wix.api.maturity']] : json['wix.api.maturity'];
            } else if (withDefaults !== false) {
              result['wix.api.maturity'] = 0;
            } else {
              delete result['wix.api.maturity'];
            }
            if (json['wix.api.cacheable'] != null) {
              result['wix.api.cacheable'] = $root.wix.api.CacheSettings.fromJSON(json['wix.api.cacheable'], helper);
            } else if (withDefaults !== false) {
              delete result['wix.api.cacheable'];
            } else {
              delete result['wix.api.cacheable'];
            }
            if (json['wix.api.deprecated'] != null) {
              result['wix.api.deprecated'] = $root.wix.api.Deprecated.fromJSON(json['wix.api.deprecated'], helper);
            } else if (withDefaults !== false) {
              delete result['wix.api.deprecated'];
            } else {
              delete result['wix.api.deprecated'];
            }
            if (json['wix.api.crud'] != null) {
              result['wix.api.crud'] = $root.wix.api.Crud.fromJSON(json['wix.api.crud'], helper);
            } else if (withDefaults !== false) {
              delete result['wix.api.crud'];
            } else {
              delete result['wix.api.crud'];
            }
            if (json['wix.api.hookable'] != null) {
              result['wix.api.hookable'] = $root.wix.api.Hookable.fromJSON(json['wix.api.hookable'], helper);
            } else if (withDefaults !== false) {
              delete result['wix.api.hookable'];
            } else {
              delete result['wix.api.hookable'];
            }
            if (json['wix.api.acceptsLinguist'] != null) {
              result['wix.api.acceptsLinguist'] = json['wix.api.acceptsLinguist'];
            } else if (withDefaults !== false) {
              result['wix.api.acceptsLinguist'] = false;
            } else {
              delete result['wix.api.acceptsLinguist'];
            }
            if (json['wix.api.error'] != null) {
              result['wix.api.error'] = Array.isArray(json['wix.api.error']) ? json['wix.api.error'].map(e => {
                return $root.wix.api.Error.fromJSON(e, helper);
              }) : json['wix.api.error'];
            } else if (withDefaults !== false) {
              result['wix.api.error'] = [];
            } else {
              delete result['wix.api.error'];
            }
            if (json['wix.api.customValidationError'] != null) {
              result['wix.api.customValidationError'] = Array.isArray(json['wix.api.customValidationError']) ? json['wix.api.customValidationError'].map(e => {
                return $root.wix.api.CustomValidationError.fromJSON(e, helper);
              }) : json['wix.api.customValidationError'];
            } else if (withDefaults !== false) {
              result['wix.api.customValidationError'] = [];
            } else {
              delete result['wix.api.customValidationError'];
            }
            if (json['wix.api.inheritCrudErrors'] != null) {
              result['wix.api.inheritCrudErrors'] = Array.isArray(json['wix.api.inheritCrudErrors']) ? json['wix.api.inheritCrudErrors'].map(e => {
                return $root.wix.api.InheritCrudErrors.fromJSON(e, helper);
              }) : json['wix.api.inheritCrudErrors'];
            } else if (withDefaults !== false) {
              result['wix.api.inheritCrudErrors'] = [];
            } else {
              delete result['wix.api.inheritCrudErrors'];
            }
            if (json['wix.api.callback'] != null) {
              result['wix.api.callback'] = Array.isArray(json['wix.api.callback']) ? json['wix.api.callback'].map(e => {
                return $root.wix.api.Callback.fromJSON(e, helper);
              }) : json['wix.api.callback'];
            } else if (withDefaults !== false) {
              result['wix.api.callback'] = [];
            } else {
              delete result['wix.api.callback'];
            }
            if (json['wix.api.permission'] != null) {
              result['wix.api.permission'] = $root.wix.api.PermissionRule.fromJSON(json['wix.api.permission'], helper);
            } else if (withDefaults !== false) {
              delete result['wix.api.permission'];
            } else {
              delete result['wix.api.permission'];
            }
            if (json['wix.api.additionalPermission'] != null) {
              result['wix.api.additionalPermission'] = Array.isArray(json['wix.api.additionalPermission']) ? json['wix.api.additionalPermission'].map(e => {
                return $root.wix.api.PermissionRule.fromJSON(e, helper);
              }) : json['wix.api.additionalPermission'];
            } else if (withDefaults !== false) {
              result['wix.api.additionalPermission'] = [];
            } else {
              delete result['wix.api.additionalPermission'];
            }
            if (json['wix.api.sla'] != null) {
              result['wix.api.sla'] = $root.wix.api.Sla.fromJSON(json['wix.api.sla'], helper);
            } else if (withDefaults !== false) {
              delete result['wix.api.sla'];
            } else {
              delete result['wix.api.sla'];
            }
            if (json['wix.api.subscription'] != null) {
              result['wix.api.subscription'] = $root.wix.api.Subscription.fromJSON(json['wix.api.subscription'], helper);
            } else if (withDefaults !== false) {
              delete result['wix.api.subscription'];
            } else {
              delete result['wix.api.subscription'];
            }
            if (json['wix.api.required'] != null) {
              result['wix.api.required'] = Array.isArray(json['wix.api.required']) ? json['wix.api.required'].map(e => {
                return e;
              }) : json['wix.api.required'];
            } else if (withDefaults !== false) {
              result['wix.api.required'] = [];
            } else {
              delete result['wix.api.required'];
            }
            if (json['wix.api.writable'] != null) {
              result['wix.api.writable'] = Array.isArray(json['wix.api.writable']) ? json['wix.api.writable'].map(e => {
                return e;
              }) : json['wix.api.writable'];
            } else if (withDefaults !== false) {
              result['wix.api.writable'] = [];
            } else {
              delete result['wix.api.writable'];
            }
            if (json['wix.http.inferFieldmask'] != null) {
              result['wix.http.inferFieldmask'] = $root.wix.http.InferFieldmask.fromJSON(json['wix.http.inferFieldmask'], helper);
            } else if (withDefaults !== false) {
              delete result['wix.http.inferFieldmask'];
            } else {
              delete result['wix.http.inferFieldmask'];
            }
            if (json['wix.sdk.signature'] != null) {
              result['wix.sdk.signature'] = Array.isArray(json['wix.sdk.signature']) ? json['wix.sdk.signature'].map(e => {
                return $root.wix.sdk.Signature.fromJSON(e, helper);
              }) : json['wix.sdk.signature'];
            } else if (withDefaults !== false) {
              result['wix.sdk.signature'] = [];
            } else {
              delete result['wix.sdk.signature'];
            }
            if (json['wix.spi.error'] != null) {
              result['wix.spi.error'] = Array.isArray(json['wix.spi.error']) ? json['wix.spi.error'].map(e => {
                return $root.wix.spi.Error.fromJSON(e, helper);
              }) : json['wix.spi.error'];
            } else if (withDefaults !== false) {
              result['wix.spi.error'] = [];
            } else {
              delete result['wix.spi.error'];
            }
            if (json['wix.spi.featureToggle'] != null) {
              result['wix.spi.featureToggle'] = json['wix.spi.featureToggle'];
            } else if (withDefaults !== false) {
              result['wix.spi.featureToggle'] = '';
            } else {
              delete result['wix.spi.featureToggle'];
            }
            return result;
          } else
            return json;
        }
        static toGRPC(obj, helper) {
          if (obj == null) {
            return null;
          } else {
            const grpc = {};
            if (obj['deprecated'] != null) {
              grpc['deprecated'] = obj['deprecated'];
            }
            if (obj['idempotencyLevel'] != null) {
              grpc['idempotencyLevel'] = obj['idempotencyLevel'];
            }
            if (obj['uninterpretedOption'] != null) {
              grpc['uninterpretedOption'] = obj['uninterpretedOption'].map(e => {
                return $root.google.protobuf.UninterpretedOption.toGRPC(e, helper);
              });
            }
            if (obj['wix.api.exposure'] != null) {
              grpc['wix.api.exposure'] = obj['wix.api.exposure'];
            }
            if (obj['wix.api.maturity'] != null) {
              grpc['wix.api.maturity'] = obj['wix.api.maturity'];
            }
            if (obj['wix.api.cacheable'] != null) {
              grpc['wix.api.cacheable'] = $root.wix.api.CacheSettings.toGRPC(obj['wix.api.cacheable'], helper);
            }
            if (obj['wix.api.deprecated'] != null) {
              grpc['wix.api.deprecated'] = $root.wix.api.Deprecated.toGRPC(obj['wix.api.deprecated'], helper);
            }
            if (obj['wix.api.crud'] != null) {
              grpc['wix.api.crud'] = $root.wix.api.Crud.toGRPC(obj['wix.api.crud'], helper);
            }
            if (obj['wix.api.hookable'] != null) {
              grpc['wix.api.hookable'] = $root.wix.api.Hookable.toGRPC(obj['wix.api.hookable'], helper);
            }
            if (obj['wix.api.acceptsLinguist'] != null) {
              grpc['wix.api.acceptsLinguist'] = obj['wix.api.acceptsLinguist'];
            }
            if (obj['wix.api.error'] != null) {
              grpc['wix.api.error'] = obj['wix.api.error'].map(e => {
                return $root.wix.api.Error.toGRPC(e, helper);
              });
            }
            if (obj['wix.api.customValidationError'] != null) {
              grpc['wix.api.customValidationError'] = obj['wix.api.customValidationError'].map(e => {
                return $root.wix.api.CustomValidationError.toGRPC(e, helper);
              });
            }
            if (obj['wix.api.inheritCrudErrors'] != null) {
              grpc['wix.api.inheritCrudErrors'] = obj['wix.api.inheritCrudErrors'].map(e => {
                return $root.wix.api.InheritCrudErrors.toGRPC(e, helper);
              });
            }
            if (obj['wix.api.callback'] != null) {
              grpc['wix.api.callback'] = obj['wix.api.callback'].map(e => {
                return $root.wix.api.Callback.toGRPC(e, helper);
              });
            }
            if (obj['wix.api.permission'] != null) {
              grpc['wix.api.permission'] = $root.wix.api.PermissionRule.toGRPC(obj['wix.api.permission'], helper);
            }
            if (obj['wix.api.additionalPermission'] != null) {
              grpc['wix.api.additionalPermission'] = obj['wix.api.additionalPermission'].map(e => {
                return $root.wix.api.PermissionRule.toGRPC(e, helper);
              });
            }
            if (obj['wix.api.sla'] != null) {
              grpc['wix.api.sla'] = $root.wix.api.Sla.toGRPC(obj['wix.api.sla'], helper);
            }
            if (obj['wix.api.subscription'] != null) {
              grpc['wix.api.subscription'] = $root.wix.api.Subscription.toGRPC(obj['wix.api.subscription'], helper);
            }
            if (obj['wix.api.required'] != null) {
              grpc['wix.api.required'] = obj['wix.api.required'].map(e => {
                return e;
              });
            }
            if (obj['wix.api.writable'] != null) {
              grpc['wix.api.writable'] = obj['wix.api.writable'].map(e => {
                return e;
              });
            }
            if (obj['wix.http.inferFieldmask'] != null) {
              grpc['wix.http.inferFieldmask'] = $root.wix.http.InferFieldmask.toGRPC(obj['wix.http.inferFieldmask'], helper);
            }
            if (obj['wix.sdk.signature'] != null) {
              grpc['wix.sdk.signature'] = obj['wix.sdk.signature'].map(e => {
                return $root.wix.sdk.Signature.toGRPC(e, helper);
              });
            }
            if (obj['wix.spi.error'] != null) {
              grpc['wix.spi.error'] = obj['wix.spi.error'].map(e => {
                return $root.wix.spi.Error.toGRPC(e, helper);
              });
            }
            if (obj['wix.spi.featureToggle'] != null) {
              grpc['wix.spi.featureToggle'] = obj['wix.spi.featureToggle'];
            }
            return grpc;
          }
        }
        static fromGRPC(grpc, helper) {
          if (grpc == null) {
            return null;
          } else {
            const result = new $root.google.protobuf.MethodOptions();
            if (grpc['deprecated'] != null) {
              result['deprecated'] = grpc['deprecated'];
            } else {
              result['deprecated'] = false;
            }
            if (grpc['idempotencyLevel'] != null) {
              result['idempotencyLevel'] = grpc['idempotencyLevel'];
            } else {
              result['idempotencyLevel'] = 0;
            }
            if (grpc['uninterpretedOption'] != null) {
              result['uninterpretedOption'] = grpc['uninterpretedOption'].map(e => {
                return $root.google.protobuf.UninterpretedOption.fromGRPC(e, helper);
              });
            } else {
              result['uninterpretedOption'] = [];
            }
            if (grpc['wix.api.exposure'] != null) {
              result['wix.api.exposure'] = grpc['wix.api.exposure'];
            } else {
              result['wix.api.exposure'] = 0;
            }
            if (grpc['wix.api.maturity'] != null) {
              result['wix.api.maturity'] = grpc['wix.api.maturity'];
            } else {
              result['wix.api.maturity'] = 0;
            }
            if (grpc['wix.api.cacheable'] != null) {
              result['wix.api.cacheable'] = $root.wix.api.CacheSettings.fromGRPC(grpc['wix.api.cacheable'], helper);
            } else {
              delete result['wix.api.cacheable'];
            }
            if (grpc['wix.api.deprecated'] != null) {
              result['wix.api.deprecated'] = $root.wix.api.Deprecated.fromGRPC(grpc['wix.api.deprecated'], helper);
            } else {
              delete result['wix.api.deprecated'];
            }
            if (grpc['wix.api.crud'] != null) {
              result['wix.api.crud'] = $root.wix.api.Crud.fromGRPC(grpc['wix.api.crud'], helper);
            } else {
              delete result['wix.api.crud'];
            }
            if (grpc['wix.api.hookable'] != null) {
              result['wix.api.hookable'] = $root.wix.api.Hookable.fromGRPC(grpc['wix.api.hookable'], helper);
            } else {
              delete result['wix.api.hookable'];
            }
            if (grpc['wix.api.acceptsLinguist'] != null) {
              result['wix.api.acceptsLinguist'] = grpc['wix.api.acceptsLinguist'];
            } else {
              result['wix.api.acceptsLinguist'] = false;
            }
            if (grpc['wix.api.error'] != null) {
              result['wix.api.error'] = grpc['wix.api.error'].map(e => {
                return $root.wix.api.Error.fromGRPC(e, helper);
              });
            } else {
              result['wix.api.error'] = [];
            }
            if (grpc['wix.api.customValidationError'] != null) {
              result['wix.api.customValidationError'] = grpc['wix.api.customValidationError'].map(e => {
                return $root.wix.api.CustomValidationError.fromGRPC(e, helper);
              });
            } else {
              result['wix.api.customValidationError'] = [];
            }
            if (grpc['wix.api.inheritCrudErrors'] != null) {
              result['wix.api.inheritCrudErrors'] = grpc['wix.api.inheritCrudErrors'].map(e => {
                return $root.wix.api.InheritCrudErrors.fromGRPC(e, helper);
              });
            } else {
              result['wix.api.inheritCrudErrors'] = [];
            }
            if (grpc['wix.api.callback'] != null) {
              result['wix.api.callback'] = grpc['wix.api.callback'].map(e => {
                return $root.wix.api.Callback.fromGRPC(e, helper);
              });
            } else {
              result['wix.api.callback'] = [];
            }
            if (grpc['wix.api.permission'] != null) {
              result['wix.api.permission'] = $root.wix.api.PermissionRule.fromGRPC(grpc['wix.api.permission'], helper);
            } else {
              delete result['wix.api.permission'];
            }
            if (grpc['wix.api.additionalPermission'] != null) {
              result['wix.api.additionalPermission'] = grpc['wix.api.additionalPermission'].map(e => {
                return $root.wix.api.PermissionRule.fromGRPC(e, helper);
              });
            } else {
              result['wix.api.additionalPermission'] = [];
            }
            if (grpc['wix.api.sla'] != null) {
              result['wix.api.sla'] = $root.wix.api.Sla.fromGRPC(grpc['wix.api.sla'], helper);
            } else {
              delete result['wix.api.sla'];
            }
            if (grpc['wix.api.subscription'] != null) {
              result['wix.api.subscription'] = $root.wix.api.Subscription.fromGRPC(grpc['wix.api.subscription'], helper);
            } else {
              delete result['wix.api.subscription'];
            }
            if (grpc['wix.api.required'] != null) {
              result['wix.api.required'] = grpc['wix.api.required'].map(e => {
                return e;
              });
            } else {
              result['wix.api.required'] = [];
            }
            if (grpc['wix.api.writable'] != null) {
              result['wix.api.writable'] = grpc['wix.api.writable'].map(e => {
                return e;
              });
            } else {
              result['wix.api.writable'] = [];
            }
            if (grpc['wix.http.inferFieldmask'] != null) {
              result['wix.http.inferFieldmask'] = $root.wix.http.InferFieldmask.fromGRPC(grpc['wix.http.inferFieldmask'], helper);
            } else {
              delete result['wix.http.inferFieldmask'];
            }
            if (grpc['wix.sdk.signature'] != null) {
              result['wix.sdk.signature'] = grpc['wix.sdk.signature'].map(e => {
                return $root.wix.sdk.Signature.fromGRPC(e, helper);
              });
            } else {
              result['wix.sdk.signature'] = [];
            }
            if (grpc['wix.spi.error'] != null) {
              result['wix.spi.error'] = grpc['wix.spi.error'].map(e => {
                return $root.wix.spi.Error.fromGRPC(e, helper);
              });
            } else {
              result['wix.spi.error'] = [];
            }
            if (grpc['wix.spi.featureToggle'] != null) {
              result['wix.spi.featureToggle'] = grpc['wix.spi.featureToggle'];
            } else {
              result['wix.spi.featureToggle'] = '';
            }
            return result;
          }
        }
      }
      MethodOptions.IdempotencyLevel = {
        'IDEMPOTENCY_UNKNOWN': 0,
        0: 'IDEMPOTENCY_UNKNOWN',
        'NO_SIDE_EFFECTS': 1,
        1: 'NO_SIDE_EFFECTS',
        'IDEMPOTENT': 2,
        2: 'IDEMPOTENT'
      };
      MethodOptions.IdempotencyLevel = {
        'IDEMPOTENCY_UNKNOWN': 0,
        0: 'IDEMPOTENCY_UNKNOWN',
        'NO_SIDE_EFFECTS': 1,
        1: 'NO_SIDE_EFFECTS',
        'IDEMPOTENT': 2,
        2: 'IDEMPOTENT'
      };
      __builtIn.Object.defineProperty(MethodOptions.prototype, '__proto', {
        value: pbjs => {
          return $root.__lookup(pbjs)('google.protobuf.MethodOptions');
        },
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(MethodOptions.prototype, '__fqn__', {
        value: 'google.protobuf.MethodOptions',
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(MethodOptions.prototype, '__options__', {
        value: $root.__options,
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(MethodOptions.prototype, '__root__', {
        value: $root,
        enumerable: false,
        configurable: false
      });
      return MethodOptions;
    }());;
    _protobuf.UninterpretedOption = (function () {
      class UninterpretedOption {
        constructor(props) {
          this.name = props && props.name;
          this.identifierValue = props && props.identifierValue;
          this.positiveIntValue = props && props.positiveIntValue;
          this.negativeIntValue = props && props.negativeIntValue;
          this.doubleValue = props && props.doubleValue;
          this.stringValue = props && props.stringValue;
          this.aggregateValue = props && props.aggregateValue;
        }
        static toJSON(obj, helper, withDefaults) {
          if (obj == null) {
            return null;
          } else {
            const json = {};
            if (obj['name'] != null) {
              json['name'] = obj['name'].map(e => {
                return $root.google.protobuf.UninterpretedOption.NamePart.toJSON(e, helper, withDefaults);
              });
            } else if (withDefaults) {
              json['name'] = [];
            }
            if (obj['identifierValue'] != null) {
              json['identifierValue'] = obj['identifierValue'];
            } else if (withDefaults) {
              json['identifierValue'] = '';
            }
            if (obj['positiveIntValue'] != null) {
              json['positiveIntValue'] = obj['positiveIntValue'].toString();
            } else if (withDefaults) {
              json['positiveIntValue'] = Long.ZERO;
            }
            if (obj['negativeIntValue'] != null) {
              json['negativeIntValue'] = obj['negativeIntValue'].toString();
            } else if (withDefaults) {
              json['negativeIntValue'] = Long.ZERO;
            }
            if (obj['doubleValue'] != null) {
              json['doubleValue'] = obj['doubleValue'] == null ? obj['doubleValue'] : isNaN(obj['doubleValue']) ? 'NaN' : isFinite(obj['doubleValue']) ? obj['doubleValue'] : obj['doubleValue'].toString();
            } else if (withDefaults) {
              json['doubleValue'] = 0;
            }
            if (obj['stringValue'] != null) {
              json['stringValue'] = obj['stringValue'].toString('base64');
            } else if (withDefaults) {
              json['stringValue'] = '';
            }
            if (obj['aggregateValue'] != null) {
              json['aggregateValue'] = obj['aggregateValue'];
            } else if (withDefaults) {
              json['aggregateValue'] = '';
            }
            return json;
          }
        }
        static fromJSON(json, helper, withDefaults) {
          if (typeof json === 'object' && !Array.isArray(json)) {
            const result = new $root.google.protobuf.UninterpretedOption();
            if (json['name'] != null) {
              result['name'] = Array.isArray(json['name']) ? json['name'].map(e => {
                return $root.google.protobuf.UninterpretedOption.NamePart.fromJSON(e, helper);
              }) : json['name'];
            } else if (withDefaults !== false) {
              result['name'] = [];
            } else {
              delete result['name'];
            }
            if (json['identifierValue'] != null) {
              result['identifierValue'] = json['identifierValue'];
            } else if (withDefaults !== false) {
              result['identifierValue'] = '';
            } else {
              delete result['identifierValue'];
            }
            if (json['positiveIntValue'] != null) {
              result['positiveIntValue'] = typeof json['positiveIntValue'] === 'number' || typeof json['positiveIntValue'] === 'string' && /^[-+]?\d+$/.test(json['positiveIntValue']) ? Long.fromValue(json['positiveIntValue'], 'true') : json['positiveIntValue'];
            } else if (withDefaults !== false) {
              result['positiveIntValue'] = Long.ZERO;
            } else {
              delete result['positiveIntValue'];
            }
            if (json['negativeIntValue'] != null) {
              result['negativeIntValue'] = typeof json['negativeIntValue'] === 'number' || typeof json['negativeIntValue'] === 'string' && /^[-+]?\d+$/.test(json['negativeIntValue']) ? Long.fromValue(json['negativeIntValue']) : json['negativeIntValue'];
            } else if (withDefaults !== false) {
              result['negativeIntValue'] = Long.ZERO;
            } else {
              delete result['negativeIntValue'];
            }
            if (json['doubleValue'] != null) {
              result['doubleValue'] = json['doubleValue'] === 'NaN' ? NaN : json['doubleValue'] === 'Infinity' ? Infinity : json['doubleValue'] === '-Infinity' ? -Infinity : json['doubleValue'];
            } else if (withDefaults !== false) {
              result['doubleValue'] = 0;
            } else {
              delete result['doubleValue'];
            }
            if (json['stringValue'] != null) {
              result['stringValue'] = function tryParseBytes(val) {
                try {
                  return __builtIn.Buffer.from(val, 'base64');
                } catch (e) {
                  return val;
                } finally {
                }
              }(json['stringValue']);
            } else if (withDefaults !== false) {
              result['stringValue'] = '';
            } else {
              delete result['stringValue'];
            }
            if (json['aggregateValue'] != null) {
              result['aggregateValue'] = json['aggregateValue'];
            } else if (withDefaults !== false) {
              result['aggregateValue'] = '';
            } else {
              delete result['aggregateValue'];
            }
            return result;
          } else
            return json;
        }
        static toGRPC(obj, helper) {
          if (obj == null) {
            return null;
          } else {
            const grpc = {};
            if (obj['name'] != null) {
              grpc['name'] = obj['name'].map(e => {
                return $root.google.protobuf.UninterpretedOption.NamePart.toGRPC(e, helper);
              });
            }
            if (obj['identifierValue'] != null) {
              grpc['identifierValue'] = obj['identifierValue'];
            }
            if (obj['positiveIntValue'] != null) {
              grpc['positiveIntValue'] = obj['positiveIntValue'].toString();
            }
            if (obj['negativeIntValue'] != null) {
              grpc['negativeIntValue'] = obj['negativeIntValue'].toString();
            }
            if (obj['doubleValue'] != null) {
              grpc['doubleValue'] = obj['doubleValue'];
            }
            if (obj['stringValue'] != null) {
              grpc['stringValue'] = obj['stringValue'];
            }
            if (obj['aggregateValue'] != null) {
              grpc['aggregateValue'] = obj['aggregateValue'];
            }
            return grpc;
          }
        }
        static fromGRPC(grpc, helper) {
          if (grpc == null) {
            return null;
          } else {
            const result = new $root.google.protobuf.UninterpretedOption();
            if (grpc['name'] != null) {
              result['name'] = grpc['name'].map(e => {
                return $root.google.protobuf.UninterpretedOption.NamePart.fromGRPC(e, helper);
              });
            } else {
              result['name'] = [];
            }
            if (grpc['identifierValue'] != null) {
              result['identifierValue'] = grpc['identifierValue'];
            } else {
              result['identifierValue'] = '';
            }
            if (grpc['positiveIntValue'] != null) {
              result['positiveIntValue'] = typeof grpc['positiveIntValue'] === 'number' || typeof grpc['positiveIntValue'] === 'string' && /^[-+]?\d+$/.test(grpc['positiveIntValue']) ? Long.fromValue(grpc['positiveIntValue'], 'true') : grpc['positiveIntValue'];
            } else {
              result['positiveIntValue'] = Long.ZERO;
            }
            if (grpc['negativeIntValue'] != null) {
              result['negativeIntValue'] = typeof grpc['negativeIntValue'] === 'number' || typeof grpc['negativeIntValue'] === 'string' && /^[-+]?\d+$/.test(grpc['negativeIntValue']) ? Long.fromValue(grpc['negativeIntValue']) : grpc['negativeIntValue'];
            } else {
              result['negativeIntValue'] = Long.ZERO;
            }
            if (grpc['doubleValue'] != null) {
              result['doubleValue'] = grpc['doubleValue'];
            } else {
              result['doubleValue'] = 0;
            }
            if (grpc['stringValue'] != null) {
              result['stringValue'] = grpc['stringValue'];
            } else {
              result['stringValue'] = '';
            }
            if (grpc['aggregateValue'] != null) {
              result['aggregateValue'] = grpc['aggregateValue'];
            } else {
              result['aggregateValue'] = '';
            }
            return result;
          }
        }
      }
      UninterpretedOption.NamePart = (function () {
        class NamePart {
          constructor(props) {
            this.namePart = props && props.namePart;
            this.isExtension = props && props.isExtension;
          }
          static toJSON(obj, helper, withDefaults) {
            if (obj == null) {
              return null;
            } else {
              const json = {};
              if (obj['namePart'] != null) {
                json['namePart'] = obj['namePart'];
              } else if (withDefaults) {
                json['namePart'] = '';
              }
              if (obj['isExtension'] != null) {
                json['isExtension'] = obj['isExtension'];
              } else if (withDefaults) {
                json['isExtension'] = false;
              }
              return json;
            }
          }
          static fromJSON(json, helper, withDefaults) {
            if (typeof json === 'object' && !Array.isArray(json)) {
              const result = new $root.google.protobuf.UninterpretedOption.NamePart();
              if (json['namePart'] != null) {
                result['namePart'] = json['namePart'];
              } else if (withDefaults !== false) {
                result['namePart'] = '';
              } else {
                delete result['namePart'];
              }
              if (json['isExtension'] != null) {
                result['isExtension'] = json['isExtension'];
              } else if (withDefaults !== false) {
                result['isExtension'] = false;
              } else {
                delete result['isExtension'];
              }
              return result;
            } else
              return json;
          }
          static toGRPC(obj, helper) {
            if (obj == null) {
              return null;
            } else {
              const grpc = {};
              if (obj['namePart'] != null) {
                grpc['namePart'] = obj['namePart'];
              }
              if (obj['isExtension'] != null) {
                grpc['isExtension'] = obj['isExtension'];
              }
              return grpc;
            }
          }
          static fromGRPC(grpc, helper) {
            if (grpc == null) {
              return null;
            } else {
              const result = new $root.google.protobuf.UninterpretedOption.NamePart();
              if (grpc['namePart'] != null) {
                result['namePart'] = grpc['namePart'];
              } else {
                result['namePart'] = '';
              }
              if (grpc['isExtension'] != null) {
                result['isExtension'] = grpc['isExtension'];
              } else {
                result['isExtension'] = false;
              }
              return result;
            }
          }
        }
        __builtIn.Object.defineProperty(NamePart.prototype, '__proto', {
          value: pbjs => {
            return $root.__lookup(pbjs)('google.protobuf.UninterpretedOption.NamePart');
          },
          enumerable: false,
          configurable: false
        });
        __builtIn.Object.defineProperty(NamePart.prototype, '__fqn__', {
          value: 'google.protobuf.UninterpretedOption.NamePart',
          enumerable: false,
          configurable: false
        });
        __builtIn.Object.defineProperty(NamePart.prototype, '__options__', {
          value: $root.__options,
          enumerable: false,
          configurable: false
        });
        __builtIn.Object.defineProperty(NamePart.prototype, '__root__', {
          value: $root,
          enumerable: false,
          configurable: false
        });
        return NamePart;
      }());;
      UninterpretedOption.NamePart = (function () {
        class NamePart {
          constructor(props) {
            this.namePart = props && props.namePart;
            this.isExtension = props && props.isExtension;
          }
          static toJSON(obj, helper, withDefaults) {
            if (obj == null) {
              return null;
            } else {
              const json = {};
              if (obj['namePart'] != null) {
                json['namePart'] = obj['namePart'];
              } else if (withDefaults) {
                json['namePart'] = '';
              }
              if (obj['isExtension'] != null) {
                json['isExtension'] = obj['isExtension'];
              } else if (withDefaults) {
                json['isExtension'] = false;
              }
              return json;
            }
          }
          static fromJSON(json, helper, withDefaults) {
            if (typeof json === 'object' && !Array.isArray(json)) {
              const result = new $root.google.protobuf.UninterpretedOption.NamePart();
              if (json['namePart'] != null) {
                result['namePart'] = json['namePart'];
              } else if (withDefaults !== false) {
                result['namePart'] = '';
              } else {
                delete result['namePart'];
              }
              if (json['isExtension'] != null) {
                result['isExtension'] = json['isExtension'];
              } else if (withDefaults !== false) {
                result['isExtension'] = false;
              } else {
                delete result['isExtension'];
              }
              return result;
            } else
              return json;
          }
          static toGRPC(obj, helper) {
            if (obj == null) {
              return null;
            } else {
              const grpc = {};
              if (obj['namePart'] != null) {
                grpc['namePart'] = obj['namePart'];
              }
              if (obj['isExtension'] != null) {
                grpc['isExtension'] = obj['isExtension'];
              }
              return grpc;
            }
          }
          static fromGRPC(grpc, helper) {
            if (grpc == null) {
              return null;
            } else {
              const result = new $root.google.protobuf.UninterpretedOption.NamePart();
              if (grpc['namePart'] != null) {
                result['namePart'] = grpc['namePart'];
              } else {
                result['namePart'] = '';
              }
              if (grpc['isExtension'] != null) {
                result['isExtension'] = grpc['isExtension'];
              } else {
                result['isExtension'] = false;
              }
              return result;
            }
          }
        }
        __builtIn.Object.defineProperty(NamePart.prototype, '__proto', {
          value: pbjs => {
            return $root.__lookup(pbjs)('google.protobuf.UninterpretedOption.NamePart');
          },
          enumerable: false,
          configurable: false
        });
        __builtIn.Object.defineProperty(NamePart.prototype, '__fqn__', {
          value: 'google.protobuf.UninterpretedOption.NamePart',
          enumerable: false,
          configurable: false
        });
        __builtIn.Object.defineProperty(NamePart.prototype, '__options__', {
          value: $root.__options,
          enumerable: false,
          configurable: false
        });
        __builtIn.Object.defineProperty(NamePart.prototype, '__root__', {
          value: $root,
          enumerable: false,
          configurable: false
        });
        return NamePart;
      }());;
      __builtIn.Object.defineProperty(UninterpretedOption.prototype, '__proto', {
        value: pbjs => {
          return $root.__lookup(pbjs)('google.protobuf.UninterpretedOption');
        },
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(UninterpretedOption.prototype, '__fqn__', {
        value: 'google.protobuf.UninterpretedOption',
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(UninterpretedOption.prototype, '__options__', {
        value: $root.__options,
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(UninterpretedOption.prototype, '__root__', {
        value: $root,
        enumerable: false,
        configurable: false
      });
      return UninterpretedOption;
    }());;
    _protobuf.SourceCodeInfo = (function () {
      class SourceCodeInfo {
        constructor(props) {
          this.location = props && props.location;
        }
        static toJSON(obj, helper, withDefaults) {
          if (obj == null) {
            return null;
          } else {
            const json = {};
            if (obj['location'] != null) {
              json['location'] = obj['location'].map(e => {
                return $root.google.protobuf.SourceCodeInfo.Location.toJSON(e, helper, withDefaults);
              });
            } else if (withDefaults) {
              json['location'] = [];
            }
            return json;
          }
        }
        static fromJSON(json, helper, withDefaults) {
          if (typeof json === 'object' && !Array.isArray(json)) {
            const result = new $root.google.protobuf.SourceCodeInfo();
            if (json['location'] != null) {
              result['location'] = Array.isArray(json['location']) ? json['location'].map(e => {
                return $root.google.protobuf.SourceCodeInfo.Location.fromJSON(e, helper);
              }) : json['location'];
            } else if (withDefaults !== false) {
              result['location'] = [];
            } else {
              delete result['location'];
            }
            return result;
          } else
            return json;
        }
        static toGRPC(obj, helper) {
          if (obj == null) {
            return null;
          } else {
            const grpc = {};
            if (obj['location'] != null) {
              grpc['location'] = obj['location'].map(e => {
                return $root.google.protobuf.SourceCodeInfo.Location.toGRPC(e, helper);
              });
            }
            return grpc;
          }
        }
        static fromGRPC(grpc, helper) {
          if (grpc == null) {
            return null;
          } else {
            const result = new $root.google.protobuf.SourceCodeInfo();
            if (grpc['location'] != null) {
              result['location'] = grpc['location'].map(e => {
                return $root.google.protobuf.SourceCodeInfo.Location.fromGRPC(e, helper);
              });
            } else {
              result['location'] = [];
            }
            return result;
          }
        }
      }
      SourceCodeInfo.Location = (function () {
        class Location {
          constructor(props) {
            this.path = props && props.path;
            this.span = props && props.span;
            this.leadingComments = props && props.leadingComments;
            this.trailingComments = props && props.trailingComments;
            this.leadingDetachedComments = props && props.leadingDetachedComments;
          }
          static toJSON(obj, helper, withDefaults) {
            if (obj == null) {
              return null;
            } else {
              const json = {};
              if (obj['path'] != null) {
                json['path'] = obj['path'].map(e => {
                  return e;
                });
              } else if (withDefaults) {
                json['path'] = [];
              }
              if (obj['span'] != null) {
                json['span'] = obj['span'].map(e => {
                  return e;
                });
              } else if (withDefaults) {
                json['span'] = [];
              }
              if (obj['leadingComments'] != null) {
                json['leadingComments'] = obj['leadingComments'];
              } else if (withDefaults) {
                json['leadingComments'] = '';
              }
              if (obj['trailingComments'] != null) {
                json['trailingComments'] = obj['trailingComments'];
              } else if (withDefaults) {
                json['trailingComments'] = '';
              }
              if (obj['leadingDetachedComments'] != null) {
                json['leadingDetachedComments'] = obj['leadingDetachedComments'].map(e => {
                  return e;
                });
              } else if (withDefaults) {
                json['leadingDetachedComments'] = [];
              }
              return json;
            }
          }
          static fromJSON(json, helper, withDefaults) {
            if (typeof json === 'object' && !Array.isArray(json)) {
              const result = new $root.google.protobuf.SourceCodeInfo.Location();
              if (json['path'] != null) {
                result['path'] = Array.isArray(json['path']) ? json['path'].map(e => {
                  return e;
                }) : json['path'];
              } else if (withDefaults !== false) {
                result['path'] = [];
              } else {
                delete result['path'];
              }
              if (json['span'] != null) {
                result['span'] = Array.isArray(json['span']) ? json['span'].map(e => {
                  return e;
                }) : json['span'];
              } else if (withDefaults !== false) {
                result['span'] = [];
              } else {
                delete result['span'];
              }
              if (json['leadingComments'] != null) {
                result['leadingComments'] = json['leadingComments'];
              } else if (withDefaults !== false) {
                result['leadingComments'] = '';
              } else {
                delete result['leadingComments'];
              }
              if (json['trailingComments'] != null) {
                result['trailingComments'] = json['trailingComments'];
              } else if (withDefaults !== false) {
                result['trailingComments'] = '';
              } else {
                delete result['trailingComments'];
              }
              if (json['leadingDetachedComments'] != null) {
                result['leadingDetachedComments'] = Array.isArray(json['leadingDetachedComments']) ? json['leadingDetachedComments'].map(e => {
                  return e;
                }) : json['leadingDetachedComments'];
              } else if (withDefaults !== false) {
                result['leadingDetachedComments'] = [];
              } else {
                delete result['leadingDetachedComments'];
              }
              return result;
            } else
              return json;
          }
          static toGRPC(obj, helper) {
            if (obj == null) {
              return null;
            } else {
              const grpc = {};
              if (obj['path'] != null) {
                grpc['path'] = obj['path'].map(e => {
                  return e;
                });
              }
              if (obj['span'] != null) {
                grpc['span'] = obj['span'].map(e => {
                  return e;
                });
              }
              if (obj['leadingComments'] != null) {
                grpc['leadingComments'] = obj['leadingComments'];
              }
              if (obj['trailingComments'] != null) {
                grpc['trailingComments'] = obj['trailingComments'];
              }
              if (obj['leadingDetachedComments'] != null) {
                grpc['leadingDetachedComments'] = obj['leadingDetachedComments'].map(e => {
                  return e;
                });
              }
              return grpc;
            }
          }
          static fromGRPC(grpc, helper) {
            if (grpc == null) {
              return null;
            } else {
              const result = new $root.google.protobuf.SourceCodeInfo.Location();
              if (grpc['path'] != null) {
                result['path'] = grpc['path'].map(e => {
                  return e;
                });
              } else {
                result['path'] = [];
              }
              if (grpc['span'] != null) {
                result['span'] = grpc['span'].map(e => {
                  return e;
                });
              } else {
                result['span'] = [];
              }
              if (grpc['leadingComments'] != null) {
                result['leadingComments'] = grpc['leadingComments'];
              } else {
                result['leadingComments'] = '';
              }
              if (grpc['trailingComments'] != null) {
                result['trailingComments'] = grpc['trailingComments'];
              } else {
                result['trailingComments'] = '';
              }
              if (grpc['leadingDetachedComments'] != null) {
                result['leadingDetachedComments'] = grpc['leadingDetachedComments'].map(e => {
                  return e;
                });
              } else {
                result['leadingDetachedComments'] = [];
              }
              return result;
            }
          }
        }
        __builtIn.Object.defineProperty(Location.prototype, '__proto', {
          value: pbjs => {
            return $root.__lookup(pbjs)('google.protobuf.SourceCodeInfo.Location');
          },
          enumerable: false,
          configurable: false
        });
        __builtIn.Object.defineProperty(Location.prototype, '__fqn__', {
          value: 'google.protobuf.SourceCodeInfo.Location',
          enumerable: false,
          configurable: false
        });
        __builtIn.Object.defineProperty(Location.prototype, '__options__', {
          value: $root.__options,
          enumerable: false,
          configurable: false
        });
        __builtIn.Object.defineProperty(Location.prototype, '__root__', {
          value: $root,
          enumerable: false,
          configurable: false
        });
        return Location;
      }());;
      SourceCodeInfo.Location = (function () {
        class Location {
          constructor(props) {
            this.path = props && props.path;
            this.span = props && props.span;
            this.leadingComments = props && props.leadingComments;
            this.trailingComments = props && props.trailingComments;
            this.leadingDetachedComments = props && props.leadingDetachedComments;
          }
          static toJSON(obj, helper, withDefaults) {
            if (obj == null) {
              return null;
            } else {
              const json = {};
              if (obj['path'] != null) {
                json['path'] = obj['path'].map(e => {
                  return e;
                });
              } else if (withDefaults) {
                json['path'] = [];
              }
              if (obj['span'] != null) {
                json['span'] = obj['span'].map(e => {
                  return e;
                });
              } else if (withDefaults) {
                json['span'] = [];
              }
              if (obj['leadingComments'] != null) {
                json['leadingComments'] = obj['leadingComments'];
              } else if (withDefaults) {
                json['leadingComments'] = '';
              }
              if (obj['trailingComments'] != null) {
                json['trailingComments'] = obj['trailingComments'];
              } else if (withDefaults) {
                json['trailingComments'] = '';
              }
              if (obj['leadingDetachedComments'] != null) {
                json['leadingDetachedComments'] = obj['leadingDetachedComments'].map(e => {
                  return e;
                });
              } else if (withDefaults) {
                json['leadingDetachedComments'] = [];
              }
              return json;
            }
          }
          static fromJSON(json, helper, withDefaults) {
            if (typeof json === 'object' && !Array.isArray(json)) {
              const result = new $root.google.protobuf.SourceCodeInfo.Location();
              if (json['path'] != null) {
                result['path'] = Array.isArray(json['path']) ? json['path'].map(e => {
                  return e;
                }) : json['path'];
              } else if (withDefaults !== false) {
                result['path'] = [];
              } else {
                delete result['path'];
              }
              if (json['span'] != null) {
                result['span'] = Array.isArray(json['span']) ? json['span'].map(e => {
                  return e;
                }) : json['span'];
              } else if (withDefaults !== false) {
                result['span'] = [];
              } else {
                delete result['span'];
              }
              if (json['leadingComments'] != null) {
                result['leadingComments'] = json['leadingComments'];
              } else if (withDefaults !== false) {
                result['leadingComments'] = '';
              } else {
                delete result['leadingComments'];
              }
              if (json['trailingComments'] != null) {
                result['trailingComments'] = json['trailingComments'];
              } else if (withDefaults !== false) {
                result['trailingComments'] = '';
              } else {
                delete result['trailingComments'];
              }
              if (json['leadingDetachedComments'] != null) {
                result['leadingDetachedComments'] = Array.isArray(json['leadingDetachedComments']) ? json['leadingDetachedComments'].map(e => {
                  return e;
                }) : json['leadingDetachedComments'];
              } else if (withDefaults !== false) {
                result['leadingDetachedComments'] = [];
              } else {
                delete result['leadingDetachedComments'];
              }
              return result;
            } else
              return json;
          }
          static toGRPC(obj, helper) {
            if (obj == null) {
              return null;
            } else {
              const grpc = {};
              if (obj['path'] != null) {
                grpc['path'] = obj['path'].map(e => {
                  return e;
                });
              }
              if (obj['span'] != null) {
                grpc['span'] = obj['span'].map(e => {
                  return e;
                });
              }
              if (obj['leadingComments'] != null) {
                grpc['leadingComments'] = obj['leadingComments'];
              }
              if (obj['trailingComments'] != null) {
                grpc['trailingComments'] = obj['trailingComments'];
              }
              if (obj['leadingDetachedComments'] != null) {
                grpc['leadingDetachedComments'] = obj['leadingDetachedComments'].map(e => {
                  return e;
                });
              }
              return grpc;
            }
          }
          static fromGRPC(grpc, helper) {
            if (grpc == null) {
              return null;
            } else {
              const result = new $root.google.protobuf.SourceCodeInfo.Location();
              if (grpc['path'] != null) {
                result['path'] = grpc['path'].map(e => {
                  return e;
                });
              } else {
                result['path'] = [];
              }
              if (grpc['span'] != null) {
                result['span'] = grpc['span'].map(e => {
                  return e;
                });
              } else {
                result['span'] = [];
              }
              if (grpc['leadingComments'] != null) {
                result['leadingComments'] = grpc['leadingComments'];
              } else {
                result['leadingComments'] = '';
              }
              if (grpc['trailingComments'] != null) {
                result['trailingComments'] = grpc['trailingComments'];
              } else {
                result['trailingComments'] = '';
              }
              if (grpc['leadingDetachedComments'] != null) {
                result['leadingDetachedComments'] = grpc['leadingDetachedComments'].map(e => {
                  return e;
                });
              } else {
                result['leadingDetachedComments'] = [];
              }
              return result;
            }
          }
        }
        __builtIn.Object.defineProperty(Location.prototype, '__proto', {
          value: pbjs => {
            return $root.__lookup(pbjs)('google.protobuf.SourceCodeInfo.Location');
          },
          enumerable: false,
          configurable: false
        });
        __builtIn.Object.defineProperty(Location.prototype, '__fqn__', {
          value: 'google.protobuf.SourceCodeInfo.Location',
          enumerable: false,
          configurable: false
        });
        __builtIn.Object.defineProperty(Location.prototype, '__options__', {
          value: $root.__options,
          enumerable: false,
          configurable: false
        });
        __builtIn.Object.defineProperty(Location.prototype, '__root__', {
          value: $root,
          enumerable: false,
          configurable: false
        });
        return Location;
      }());;
      __builtIn.Object.defineProperty(SourceCodeInfo.prototype, '__proto', {
        value: pbjs => {
          return $root.__lookup(pbjs)('google.protobuf.SourceCodeInfo');
        },
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(SourceCodeInfo.prototype, '__fqn__', {
        value: 'google.protobuf.SourceCodeInfo',
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(SourceCodeInfo.prototype, '__options__', {
        value: $root.__options,
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(SourceCodeInfo.prototype, '__root__', {
        value: $root,
        enumerable: false,
        configurable: false
      });
      return SourceCodeInfo;
    }());;
    _protobuf.GeneratedCodeInfo = (function () {
      class GeneratedCodeInfo {
        constructor(props) {
          this.annotation = props && props.annotation;
        }
        static toJSON(obj, helper, withDefaults) {
          if (obj == null) {
            return null;
          } else {
            const json = {};
            if (obj['annotation'] != null) {
              json['annotation'] = obj['annotation'].map(e => {
                return $root.google.protobuf.GeneratedCodeInfo.Annotation.toJSON(e, helper, withDefaults);
              });
            } else if (withDefaults) {
              json['annotation'] = [];
            }
            return json;
          }
        }
        static fromJSON(json, helper, withDefaults) {
          if (typeof json === 'object' && !Array.isArray(json)) {
            const result = new $root.google.protobuf.GeneratedCodeInfo();
            if (json['annotation'] != null) {
              result['annotation'] = Array.isArray(json['annotation']) ? json['annotation'].map(e => {
                return $root.google.protobuf.GeneratedCodeInfo.Annotation.fromJSON(e, helper);
              }) : json['annotation'];
            } else if (withDefaults !== false) {
              result['annotation'] = [];
            } else {
              delete result['annotation'];
            }
            return result;
          } else
            return json;
        }
        static toGRPC(obj, helper) {
          if (obj == null) {
            return null;
          } else {
            const grpc = {};
            if (obj['annotation'] != null) {
              grpc['annotation'] = obj['annotation'].map(e => {
                return $root.google.protobuf.GeneratedCodeInfo.Annotation.toGRPC(e, helper);
              });
            }
            return grpc;
          }
        }
        static fromGRPC(grpc, helper) {
          if (grpc == null) {
            return null;
          } else {
            const result = new $root.google.protobuf.GeneratedCodeInfo();
            if (grpc['annotation'] != null) {
              result['annotation'] = grpc['annotation'].map(e => {
                return $root.google.protobuf.GeneratedCodeInfo.Annotation.fromGRPC(e, helper);
              });
            } else {
              result['annotation'] = [];
            }
            return result;
          }
        }
      }
      GeneratedCodeInfo.Annotation = (function () {
        class Annotation {
          constructor(props) {
            this.path = props && props.path;
            this.sourceFile = props && props.sourceFile;
            this.begin = props && props.begin;
            this.end = props && props.end;
          }
          static toJSON(obj, helper, withDefaults) {
            if (obj == null) {
              return null;
            } else {
              const json = {};
              if (obj['path'] != null) {
                json['path'] = obj['path'].map(e => {
                  return e;
                });
              } else if (withDefaults) {
                json['path'] = [];
              }
              if (obj['sourceFile'] != null) {
                json['sourceFile'] = obj['sourceFile'];
              } else if (withDefaults) {
                json['sourceFile'] = '';
              }
              if (obj['begin'] != null) {
                json['begin'] = obj['begin'];
              } else if (withDefaults) {
                json['begin'] = 0;
              }
              if (obj['end'] != null) {
                json['end'] = obj['end'];
              } else if (withDefaults) {
                json['end'] = 0;
              }
              return json;
            }
          }
          static fromJSON(json, helper, withDefaults) {
            if (typeof json === 'object' && !Array.isArray(json)) {
              const result = new $root.google.protobuf.GeneratedCodeInfo.Annotation();
              if (json['path'] != null) {
                result['path'] = Array.isArray(json['path']) ? json['path'].map(e => {
                  return e;
                }) : json['path'];
              } else if (withDefaults !== false) {
                result['path'] = [];
              } else {
                delete result['path'];
              }
              if (json['sourceFile'] != null) {
                result['sourceFile'] = json['sourceFile'];
              } else if (withDefaults !== false) {
                result['sourceFile'] = '';
              } else {
                delete result['sourceFile'];
              }
              if (json['begin'] != null) {
                result['begin'] = json['begin'];
              } else if (withDefaults !== false) {
                result['begin'] = 0;
              } else {
                delete result['begin'];
              }
              if (json['end'] != null) {
                result['end'] = json['end'];
              } else if (withDefaults !== false) {
                result['end'] = 0;
              } else {
                delete result['end'];
              }
              return result;
            } else
              return json;
          }
          static toGRPC(obj, helper) {
            if (obj == null) {
              return null;
            } else {
              const grpc = {};
              if (obj['path'] != null) {
                grpc['path'] = obj['path'].map(e => {
                  return e;
                });
              }
              if (obj['sourceFile'] != null) {
                grpc['sourceFile'] = obj['sourceFile'];
              }
              if (obj['begin'] != null) {
                grpc['begin'] = obj['begin'];
              }
              if (obj['end'] != null) {
                grpc['end'] = obj['end'];
              }
              return grpc;
            }
          }
          static fromGRPC(grpc, helper) {
            if (grpc == null) {
              return null;
            } else {
              const result = new $root.google.protobuf.GeneratedCodeInfo.Annotation();
              if (grpc['path'] != null) {
                result['path'] = grpc['path'].map(e => {
                  return e;
                });
              } else {
                result['path'] = [];
              }
              if (grpc['sourceFile'] != null) {
                result['sourceFile'] = grpc['sourceFile'];
              } else {
                result['sourceFile'] = '';
              }
              if (grpc['begin'] != null) {
                result['begin'] = grpc['begin'];
              } else {
                result['begin'] = 0;
              }
              if (grpc['end'] != null) {
                result['end'] = grpc['end'];
              } else {
                result['end'] = 0;
              }
              return result;
            }
          }
        }
        __builtIn.Object.defineProperty(Annotation.prototype, '__proto', {
          value: pbjs => {
            return $root.__lookup(pbjs)('google.protobuf.GeneratedCodeInfo.Annotation');
          },
          enumerable: false,
          configurable: false
        });
        __builtIn.Object.defineProperty(Annotation.prototype, '__fqn__', {
          value: 'google.protobuf.GeneratedCodeInfo.Annotation',
          enumerable: false,
          configurable: false
        });
        __builtIn.Object.defineProperty(Annotation.prototype, '__options__', {
          value: $root.__options,
          enumerable: false,
          configurable: false
        });
        __builtIn.Object.defineProperty(Annotation.prototype, '__root__', {
          value: $root,
          enumerable: false,
          configurable: false
        });
        return Annotation;
      }());;
      GeneratedCodeInfo.Annotation = (function () {
        class Annotation {
          constructor(props) {
            this.path = props && props.path;
            this.sourceFile = props && props.sourceFile;
            this.begin = props && props.begin;
            this.end = props && props.end;
          }
          static toJSON(obj, helper, withDefaults) {
            if (obj == null) {
              return null;
            } else {
              const json = {};
              if (obj['path'] != null) {
                json['path'] = obj['path'].map(e => {
                  return e;
                });
              } else if (withDefaults) {
                json['path'] = [];
              }
              if (obj['sourceFile'] != null) {
                json['sourceFile'] = obj['sourceFile'];
              } else if (withDefaults) {
                json['sourceFile'] = '';
              }
              if (obj['begin'] != null) {
                json['begin'] = obj['begin'];
              } else if (withDefaults) {
                json['begin'] = 0;
              }
              if (obj['end'] != null) {
                json['end'] = obj['end'];
              } else if (withDefaults) {
                json['end'] = 0;
              }
              return json;
            }
          }
          static fromJSON(json, helper, withDefaults) {
            if (typeof json === 'object' && !Array.isArray(json)) {
              const result = new $root.google.protobuf.GeneratedCodeInfo.Annotation();
              if (json['path'] != null) {
                result['path'] = Array.isArray(json['path']) ? json['path'].map(e => {
                  return e;
                }) : json['path'];
              } else if (withDefaults !== false) {
                result['path'] = [];
              } else {
                delete result['path'];
              }
              if (json['sourceFile'] != null) {
                result['sourceFile'] = json['sourceFile'];
              } else if (withDefaults !== false) {
                result['sourceFile'] = '';
              } else {
                delete result['sourceFile'];
              }
              if (json['begin'] != null) {
                result['begin'] = json['begin'];
              } else if (withDefaults !== false) {
                result['begin'] = 0;
              } else {
                delete result['begin'];
              }
              if (json['end'] != null) {
                result['end'] = json['end'];
              } else if (withDefaults !== false) {
                result['end'] = 0;
              } else {
                delete result['end'];
              }
              return result;
            } else
              return json;
          }
          static toGRPC(obj, helper) {
            if (obj == null) {
              return null;
            } else {
              const grpc = {};
              if (obj['path'] != null) {
                grpc['path'] = obj['path'].map(e => {
                  return e;
                });
              }
              if (obj['sourceFile'] != null) {
                grpc['sourceFile'] = obj['sourceFile'];
              }
              if (obj['begin'] != null) {
                grpc['begin'] = obj['begin'];
              }
              if (obj['end'] != null) {
                grpc['end'] = obj['end'];
              }
              return grpc;
            }
          }
          static fromGRPC(grpc, helper) {
            if (grpc == null) {
              return null;
            } else {
              const result = new $root.google.protobuf.GeneratedCodeInfo.Annotation();
              if (grpc['path'] != null) {
                result['path'] = grpc['path'].map(e => {
                  return e;
                });
              } else {
                result['path'] = [];
              }
              if (grpc['sourceFile'] != null) {
                result['sourceFile'] = grpc['sourceFile'];
              } else {
                result['sourceFile'] = '';
              }
              if (grpc['begin'] != null) {
                result['begin'] = grpc['begin'];
              } else {
                result['begin'] = 0;
              }
              if (grpc['end'] != null) {
                result['end'] = grpc['end'];
              } else {
                result['end'] = 0;
              }
              return result;
            }
          }
        }
        __builtIn.Object.defineProperty(Annotation.prototype, '__proto', {
          value: pbjs => {
            return $root.__lookup(pbjs)('google.protobuf.GeneratedCodeInfo.Annotation');
          },
          enumerable: false,
          configurable: false
        });
        __builtIn.Object.defineProperty(Annotation.prototype, '__fqn__', {
          value: 'google.protobuf.GeneratedCodeInfo.Annotation',
          enumerable: false,
          configurable: false
        });
        __builtIn.Object.defineProperty(Annotation.prototype, '__options__', {
          value: $root.__options,
          enumerable: false,
          configurable: false
        });
        __builtIn.Object.defineProperty(Annotation.prototype, '__root__', {
          value: $root,
          enumerable: false,
          configurable: false
        });
        return Annotation;
      }());;
      __builtIn.Object.defineProperty(GeneratedCodeInfo.prototype, '__proto', {
        value: pbjs => {
          return $root.__lookup(pbjs)('google.protobuf.GeneratedCodeInfo');
        },
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(GeneratedCodeInfo.prototype, '__fqn__', {
        value: 'google.protobuf.GeneratedCodeInfo',
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(GeneratedCodeInfo.prototype, '__options__', {
        value: $root.__options,
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(GeneratedCodeInfo.prototype, '__root__', {
        value: $root,
        enumerable: false,
        configurable: false
      });
      return GeneratedCodeInfo;
    }());;
    _protobuf.Struct = (function () {
      class Struct {
        constructor(props) {
          this.fields = props && props.fields;
        }
        static toJSON(obj, helper) {
          return obj;
        }
        static fromJSON(json, helper) {
          return json;
        }
        static toGRPC(obj, helper) {
          return helper.grpc.structToGRPC(obj);
        }
        static fromGRPC(grpc, helper) {
          return helper.grpc.structFromGRPC(grpc);
        }
      }
      __builtIn.Object.defineProperty(Struct.prototype, '__proto', {
        value: pbjs => {
          return $root.__lookup(pbjs)('google.protobuf.Struct');
        },
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(Struct.prototype, '__fqn__', {
        value: 'google.protobuf.Struct',
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(Struct.prototype, '__options__', {
        value: $root.__options,
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(Struct.prototype, '__root__', {
        value: $root,
        enumerable: false,
        configurable: false
      });
      return Struct;
    }());;
    _protobuf.Value = (function () {
      class Value {
        constructor(props) {
          this.nullValue = props && props.nullValue;
          this.numberValue = props && props.numberValue;
          this.stringValue = props && props.stringValue;
          this.boolValue = props && props.boolValue;
          this.structValue = props && props.structValue;
          this.listValue = props && props.listValue;
        }
        static toJSON(obj, helper) {
          return obj;
        }
        static fromJSON(json, helper) {
          return json;
        }
        static toGRPC(obj, helper) {
          return helper.grpc.valueToGRPC(obj);
        }
        static fromGRPC(grpc, helper) {
          return helper.grpc.valueFromGRPC(grpc);
        }
      }
      __builtIn.Object.defineProperty(Value.prototype, '__proto', {
        value: pbjs => {
          return $root.__lookup(pbjs)('google.protobuf.Value');
        },
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(Value.prototype, '__fqn__', {
        value: 'google.protobuf.Value',
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(Value.prototype, '__options__', {
        value: $root.__options,
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(Value.prototype, '__root__', {
        value: $root,
        enumerable: false,
        configurable: false
      });
      return Value;
    }());;
    _protobuf.ListValue = (function () {
      class ListValue {
        constructor(props) {
          this.values = props && props.values;
        }
        static toJSON(obj, helper) {
          return obj;
        }
        static fromJSON(json, helper) {
          return json;
        }
        static toGRPC(obj, helper) {
          return helper.grpc.listValueToGRPC(obj);
        }
        static fromGRPC(grpc, helper) {
          return helper.grpc.listValueFromGRPC(grpc);
        }
      }
      __builtIn.Object.defineProperty(ListValue.prototype, '__proto', {
        value: pbjs => {
          return $root.__lookup(pbjs)('google.protobuf.ListValue');
        },
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(ListValue.prototype, '__fqn__', {
        value: 'google.protobuf.ListValue',
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(ListValue.prototype, '__options__', {
        value: $root.__options,
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(ListValue.prototype, '__root__', {
        value: $root,
        enumerable: false,
        configurable: false
      });
      return ListValue;
    }());;
    _protobuf.DoubleValue = (function () {
      class DoubleValue {
        constructor(props) {
          this.value = props && props.value;
        }
        static toJSON(obj, helper) {
          return obj == null ? obj : isNaN(obj) ? 'NaN' : isFinite(obj) ? obj : obj.toString();
        }
        static fromJSON(json, helper) {
          return json === 'NaN' ? NaN : json === 'Infinity' ? Infinity : json === '-Infinity' ? -Infinity : json;
        }
        static toGRPC(obj, helper) {
          return obj == null ? obj : { 'value': obj };
        }
        static fromGRPC(grpc, helper) {
          return grpc && grpc.value;
        }
      }
      __builtIn.Object.defineProperty(DoubleValue.prototype, '__proto', {
        value: pbjs => {
          return $root.__lookup(pbjs)('google.protobuf.DoubleValue');
        },
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(DoubleValue.prototype, '__fqn__', {
        value: 'google.protobuf.DoubleValue',
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(DoubleValue.prototype, '__options__', {
        value: $root.__options,
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(DoubleValue.prototype, '__root__', {
        value: $root,
        enumerable: false,
        configurable: false
      });
      return DoubleValue;
    }());;
    _protobuf.FloatValue = (function () {
      class FloatValue {
        constructor(props) {
          this.value = props && props.value;
        }
        static toJSON(obj, helper) {
          return obj == null ? obj : isNaN(obj) ? 'NaN' : isFinite(obj) ? obj : obj.toString();
        }
        static fromJSON(json, helper) {
          return json === 'NaN' ? NaN : json === 'Infinity' ? Infinity : json === '-Infinity' ? -Infinity : json;
        }
        static toGRPC(obj, helper) {
          return obj == null ? obj : { 'value': obj };
        }
        static fromGRPC(grpc, helper) {
          return grpc && grpc.value;
        }
      }
      __builtIn.Object.defineProperty(FloatValue.prototype, '__proto', {
        value: pbjs => {
          return $root.__lookup(pbjs)('google.protobuf.FloatValue');
        },
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(FloatValue.prototype, '__fqn__', {
        value: 'google.protobuf.FloatValue',
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(FloatValue.prototype, '__options__', {
        value: $root.__options,
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(FloatValue.prototype, '__root__', {
        value: $root,
        enumerable: false,
        configurable: false
      });
      return FloatValue;
    }());;
    _protobuf.Int64Value = (function () {
      class Int64Value {
        constructor(props) {
          this.value = props && props.value;
        }
        static toJSON(obj, helper) {
          return obj == null ? obj : obj.toString();
        }
        static fromJSON(json, helper) {
          return json == null ? json : typeof json === 'number' || typeof json === 'string' && /^[-+]?\d+$/.test(json) ? Long.fromValue(json) : json;
        }
        static toGRPC(obj, helper) {
          return obj == null ? obj : { 'value': obj.toString() };
        }
        static fromGRPC(grpc, helper) {
          return grpc && (typeof grpc.value === 'number' || typeof grpc.value === 'string' && /^[-+]?\d+$/.test(grpc.value) ? Long.fromValue(grpc.value) : grpc.value);
        }
      }
      __builtIn.Object.defineProperty(Int64Value.prototype, '__proto', {
        value: pbjs => {
          return $root.__lookup(pbjs)('google.protobuf.Int64Value');
        },
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(Int64Value.prototype, '__fqn__', {
        value: 'google.protobuf.Int64Value',
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(Int64Value.prototype, '__options__', {
        value: $root.__options,
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(Int64Value.prototype, '__root__', {
        value: $root,
        enumerable: false,
        configurable: false
      });
      return Int64Value;
    }());;
    _protobuf.UInt64Value = (function () {
      class UInt64Value {
        constructor(props) {
          this.value = props && props.value;
        }
        static toJSON(obj, helper) {
          return obj == null ? obj : obj.toString();
        }
        static fromJSON(json, helper) {
          return json == null ? json : typeof json === 'number' || typeof json === 'string' && /^[-+]?\d+$/.test(json) ? Long.fromValue(json, 'true') : json;
        }
        static toGRPC(obj, helper) {
          return obj == null ? obj : { 'value': obj.toString() };
        }
        static fromGRPC(grpc, helper) {
          return grpc && (typeof grpc.value === 'number' || typeof grpc.value === 'string' && /^[-+]?\d+$/.test(grpc.value) ? Long.fromValue(grpc.value, 'true') : grpc.value);
        }
      }
      __builtIn.Object.defineProperty(UInt64Value.prototype, '__proto', {
        value: pbjs => {
          return $root.__lookup(pbjs)('google.protobuf.UInt64Value');
        },
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(UInt64Value.prototype, '__fqn__', {
        value: 'google.protobuf.UInt64Value',
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(UInt64Value.prototype, '__options__', {
        value: $root.__options,
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(UInt64Value.prototype, '__root__', {
        value: $root,
        enumerable: false,
        configurable: false
      });
      return UInt64Value;
    }());;
    _protobuf.Int32Value = (function () {
      class Int32Value {
        constructor(props) {
          this.value = props && props.value;
        }
        static toJSON(obj, helper) {
          return obj;
        }
        static fromJSON(json, helper) {
          return json;
        }
        static toGRPC(obj, helper) {
          return obj == null ? obj : { 'value': obj };
        }
        static fromGRPC(grpc, helper) {
          return grpc && grpc.value;
        }
      }
      __builtIn.Object.defineProperty(Int32Value.prototype, '__proto', {
        value: pbjs => {
          return $root.__lookup(pbjs)('google.protobuf.Int32Value');
        },
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(Int32Value.prototype, '__fqn__', {
        value: 'google.protobuf.Int32Value',
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(Int32Value.prototype, '__options__', {
        value: $root.__options,
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(Int32Value.prototype, '__root__', {
        value: $root,
        enumerable: false,
        configurable: false
      });
      return Int32Value;
    }());;
    _protobuf.UInt32Value = (function () {
      class UInt32Value {
        constructor(props) {
          this.value = props && props.value;
        }
        static toJSON(obj, helper) {
          return obj;
        }
        static fromJSON(json, helper) {
          return json;
        }
        static toGRPC(obj, helper) {
          return obj == null ? obj : { 'value': obj };
        }
        static fromGRPC(grpc, helper) {
          return grpc && grpc.value;
        }
      }
      __builtIn.Object.defineProperty(UInt32Value.prototype, '__proto', {
        value: pbjs => {
          return $root.__lookup(pbjs)('google.protobuf.UInt32Value');
        },
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(UInt32Value.prototype, '__fqn__', {
        value: 'google.protobuf.UInt32Value',
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(UInt32Value.prototype, '__options__', {
        value: $root.__options,
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(UInt32Value.prototype, '__root__', {
        value: $root,
        enumerable: false,
        configurable: false
      });
      return UInt32Value;
    }());;
    _protobuf.BoolValue = (function () {
      class BoolValue {
        constructor(props) {
          this.value = props && props.value;
        }
        static toJSON(obj, helper) {
          return obj;
        }
        static fromJSON(json, helper) {
          return json;
        }
        static toGRPC(obj, helper) {
          return obj == null ? obj : { 'value': obj };
        }
        static fromGRPC(grpc, helper) {
          return grpc && grpc.value;
        }
      }
      __builtIn.Object.defineProperty(BoolValue.prototype, '__proto', {
        value: pbjs => {
          return $root.__lookup(pbjs)('google.protobuf.BoolValue');
        },
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(BoolValue.prototype, '__fqn__', {
        value: 'google.protobuf.BoolValue',
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(BoolValue.prototype, '__options__', {
        value: $root.__options,
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(BoolValue.prototype, '__root__', {
        value: $root,
        enumerable: false,
        configurable: false
      });
      return BoolValue;
    }());;
    _protobuf.StringValue = (function () {
      class StringValue {
        constructor(props) {
          this.value = props && props.value;
        }
        static toJSON(obj, helper) {
          return obj;
        }
        static fromJSON(json, helper) {
          return json;
        }
        static toGRPC(obj, helper) {
          return obj == null ? obj : { 'value': obj };
        }
        static fromGRPC(grpc, helper) {
          return grpc && grpc.value;
        }
      }
      __builtIn.Object.defineProperty(StringValue.prototype, '__proto', {
        value: pbjs => {
          return $root.__lookup(pbjs)('google.protobuf.StringValue');
        },
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(StringValue.prototype, '__fqn__', {
        value: 'google.protobuf.StringValue',
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(StringValue.prototype, '__options__', {
        value: $root.__options,
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(StringValue.prototype, '__root__', {
        value: $root,
        enumerable: false,
        configurable: false
      });
      return StringValue;
    }());;
    _protobuf.BytesValue = (function () {
      class BytesValue {
        constructor(props) {
          this.value = props && props.value;
        }
        static toJSON(obj, helper) {
          return obj && obj.toString('base64');
        }
        static fromJSON(json, helper) {
          return json && function tryParseBytes(val) {
            try {
              return __builtIn.Buffer.from(val, 'base64');
            } catch (e) {
              return val;
            } finally {
            }
          }(json);
        }
        static toGRPC(obj, helper) {
          return obj == null ? obj : { 'value': obj };
        }
        static fromGRPC(grpc, helper) {
          return grpc && grpc.value;
        }
      }
      __builtIn.Object.defineProperty(BytesValue.prototype, '__proto', {
        value: pbjs => {
          return $root.__lookup(pbjs)('google.protobuf.BytesValue');
        },
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(BytesValue.prototype, '__fqn__', {
        value: 'google.protobuf.BytesValue',
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(BytesValue.prototype, '__options__', {
        value: $root.__options,
        enumerable: false,
        configurable: false
      });
      __builtIn.Object.defineProperty(BytesValue.prototype, '__root__', {
        value: $root,
        enumerable: false,
        configurable: false
      });
      return BytesValue;
    }());;
    return _protobuf;
  }());;
  return _google;
}());;
module.exports = $root;
module.exports.default = $root;