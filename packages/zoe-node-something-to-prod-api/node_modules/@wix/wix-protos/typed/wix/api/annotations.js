"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ServiceAppendix = exports.Translatable = exports.Wql = exports.Paging = exports.Crud = exports.Maturity = exports.Exposure = void 0;
var Exposure;
(function (Exposure) {
    Exposure[Exposure["PRIVATE"] = 0] = "PRIVATE";
    Exposure[Exposure["INTERNAL"] = 1] = "INTERNAL";
    Exposure[Exposure["PUBLIC"] = 2] = "PUBLIC";
})(Exposure = exports.Exposure || (exports.Exposure = {}));
var Maturity;
(function (Maturity) {
    Maturity[Maturity["ALPHA"] = 0] = "ALPHA";
    Maturity[Maturity["BETA"] = 1] = "BETA";
    Maturity[Maturity["IA"] = 2] = "IA";
    Maturity[Maturity["GA"] = 3] = "GA";
    Maturity[Maturity["NOT_IMPLEMENTED"] = 4] = "NOT_IMPLEMENTED";
})(Maturity = exports.Maturity || (exports.Maturity = {}));
var Crud;
(function (Crud) {
    let Method;
    (function (Method) {
        Method[Method["UNKNOWN_METHOD"] = 0] = "UNKNOWN_METHOD";
        Method[Method["CREATE"] = 1] = "CREATE";
        Method[Method["GET_ITEM"] = 2] = "GET_ITEM";
        Method[Method["UPDATE"] = 3] = "UPDATE";
        Method[Method["DELETE"] = 4] = "DELETE";
        Method[Method["UPSERT"] = 12] = "UPSERT";
        Method[Method["LIST"] = 5] = "LIST";
        Method[Method["QUERY"] = 6] = "QUERY";
        Method[Method["SEARCH"] = 18] = "SEARCH";
        Method[Method["BULK_CREATE"] = 7] = "BULK_CREATE";
        Method[Method["BULK_UPDATE"] = 8] = "BULK_UPDATE";
        Method[Method["BULK_UPDATE_BY_FILTER"] = 9] = "BULK_UPDATE_BY_FILTER";
        Method[Method["BULK_DELETE"] = 10] = "BULK_DELETE";
        Method[Method["BULK_DELETE_BY_FILTER"] = 11] = "BULK_DELETE_BY_FILTER";
        Method[Method["BULK_UPSERT"] = 13] = "BULK_UPSERT";
        Method[Method["LIST_DELETED"] = 14] = "LIST_DELETED";
        Method[Method["GET_DELETED"] = 15] = "GET_DELETED";
        Method[Method["RESTORE_FROM_TRASHBIN"] = 16] = "RESTORE_FROM_TRASHBIN";
        Method[Method["REMOVE_FROM_TRASHBIN"] = 17] = "REMOVE_FROM_TRASHBIN";
    })(Method = Crud.Method || (Crud.Method = {}));
})(Crud = exports.Crud || (exports.Crud = {}));
var Paging;
(function (Paging) {
    let Type;
    (function (Type) {
        Type[Type["UNKNOWN_TYPE"] = 0] = "UNKNOWN_TYPE";
        Type[Type["OFFSET"] = 1] = "OFFSET";
        Type[Type["CURSOR"] = 2] = "CURSOR";
    })(Type = Paging.Type || (Paging.Type = {}));
})(Paging = exports.Paging || (exports.Paging = {}));
var Wql;
(function (Wql) {
    let Operator;
    (function (Operator) {
        Operator[Operator["ALL_APPLICABLE_OPERATORS"] = 0] = "ALL_APPLICABLE_OPERATORS";
        Operator[Operator["EQ"] = 1] = "EQ";
        Operator[Operator["GT"] = 2] = "GT";
        Operator[Operator["GTE"] = 3] = "GTE";
        Operator[Operator["IN"] = 4] = "IN";
        Operator[Operator["LT"] = 5] = "LT";
        Operator[Operator["LTE"] = 6] = "LTE";
        Operator[Operator["NE"] = 7] = "NE";
        Operator[Operator["NIN"] = 8] = "NIN";
        Operator[Operator["BEGINS"] = 9] = "BEGINS";
        Operator[Operator["EXISTS"] = 10] = "EXISTS";
        Operator[Operator["ALL"] = 11] = "ALL";
        Operator[Operator["ANY"] = 12] = "ANY";
        Operator[Operator["EMPTY"] = 13] = "EMPTY";
    })(Operator = Wql.Operator || (Wql.Operator = {}));
    let Sort;
    (function (Sort) {
        Sort[Sort["NONE"] = 0] = "NONE";
        Sort[Sort["ASC"] = 1] = "ASC";
        Sort[Sort["DESC"] = 2] = "DESC";
        Sort[Sort["BOTH"] = 3] = "BOTH";
    })(Sort = Wql.Sort || (Wql.Sort = {}));
})(Wql = exports.Wql || (exports.Wql = {}));
var Translatable;
(function (Translatable) {
    let Type;
    (function (Type) {
        Type[Type["UNDEFINED_TYPE"] = 0] = "UNDEFINED_TYPE";
        Type[Type["SHORT_TEXT"] = 1] = "SHORT_TEXT";
        Type[Type["LONG_TEXT"] = 2] = "LONG_TEXT";
        Type[Type["RICH_TEXT"] = 3] = "RICH_TEXT";
        Type[Type["RICH_CONTENT_EDITOR"] = 4] = "RICH_CONTENT_EDITOR";
        Type[Type["SELECTION"] = 5] = "SELECTION";
        Type[Type["MULTI_SELECTION"] = 6] = "MULTI_SELECTION";
        Type[Type["DOCUMENT"] = 7] = "DOCUMENT";
        Type[Type["IMAGE"] = 8] = "IMAGE";
        Type[Type["VIDEO"] = 9] = "VIDEO";
    })(Type = Translatable.Type || (Translatable.Type = {}));
})(Translatable = exports.Translatable || (exports.Translatable = {}));
var ServiceAppendix;
(function (ServiceAppendix) {
    let Type;
    (function (Type) {
        Type[Type["UNKNOWN_APPENDIX_TYPE"] = 0] = "UNKNOWN_APPENDIX_TYPE";
        Type[Type["NILE"] = 1] = "NILE";
        Type[Type["MESSAGE_BUS"] = 2] = "MESSAGE_BUS";
    })(Type = ServiceAppendix.Type || (ServiceAppendix.Type = {}));
})(ServiceAppendix = exports.ServiceAppendix || (exports.ServiceAppendix = {}));
//# sourceMappingURL=annotations.js.map