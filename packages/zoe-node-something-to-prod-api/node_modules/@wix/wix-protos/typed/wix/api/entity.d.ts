import { Exposure } from "./annotations";
import { Segment } from "./callback";
export interface ServiceEntity {
    readonly message: string;
    readonly namespace?: string;
}
export interface Entity {
    readonly fqdn: string;
    readonly exposure?: Exposure;
    readonly appendixFiles?: MessageAppendix[];
    readonly oldFqdnForBackwardsCompatibility?: string;
    readonly segment?: Segment.Segment;
    readonly implements?: string[];
    readonly extensible?: Extensible;
    readonly trashbin?: boolean;
    readonly plural?: string;
    readonly domainEventsReadPermission?: string;
    readonly appDefId?: string;
}
export interface Extensible {
    readonly nestedExtensionFieldPath?: string;
}
export interface MessageAppendix {
    readonly type: MessageAppendix.Type;
    readonly path: string;
}
export declare namespace MessageAppendix {
    enum Type {
        UNKNOWN_APPENDIX_TYPE = 0,
        AUTO_VELO = 1,
        DOCS_CONF = 2,
        MULTILINGUAL = 3
    }
}
