syntax = "proto3";

package com.wixpress.grpc.test.syntax3;

import "google/protobuf/any.proto";
import public "google/protobuf/api.proto";
import weak "ext/pack/path/extensions.proto";
import "google/protobuf/duration.proto";
import public "google/protobuf/empty.proto";
import "google/protobuf/field_mask.proto";
import weak "google/protobuf/struct.proto";
import public "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "google/api/annotations.proto";

option java_package = "proto.golden";
option optimize_for = SPEED;

option (ext.pack.path.file_float) = 1.0E10;
option (ext.pack.path.file_float) = 1.1E8;
option (ext.pack.path.file_composite) = {
    composite_bool: true
};
option (ext.pack.path.file_composite_rep) = {
    composite_float: 1.23
};
option (ext.pack.path.file_composite_rep) = {
    composite_string: "a string"
    composite_nested: {
        composite_fixed32: 42
        composite_recursive: {
            composite_fixed32: 12
            composite_recursive: {
                composite_fixed32: 987
            }
        }
    }
    CompositeGroup: {
        grouped_sfixed32: -123
        grouped_uint64: 10000000000000000000
    }
};

enum AnEnum {
    option allow_alias = true;

    option (ext.pack.path.enum_string) = "asdas";
    option (ext.pack.path.enum_composite) = {
        composite_float: -0.123
    };
    option (ext.pack.path.enum_composite_rep) = {
        composite_nested: {
            composite_recursive: {
                composite_fixed32: 13
            }
        }
    };
    option (ext.pack.path.enum_composite_rep) = {
        composite_nested: {
            composite_fixed32: 12332
            composite_recursive: {
                composite_fixed32: 4323623
            }
        }
    };

    AValue = 0 [
        deprecated = false,
        (ext.pack.path.enumvalue_composite) = {
            composite_nested: {
                composite_fixed32: 153476
                composite_recursive: {
                }
            }
        },
        (ext.pack.path.enumvalue_composite_rep) = {
            composite_nested: {
            }
        },
        (ext.pack.path.enumvalue_composite_rep) = {
            composite_nested: {
            }
        }
    ];
    BValue = -15 [(ext.pack.path.enumvalue_float) = 556400.0];
    CValue = 0 [deprecated = true];
    DValue = 15;
}

message AMessageFor3 {
    option (ext.pack.path.message_string) = "a string option";
    option (ext.pack.path.message_composite) = {
        composite_float: -0.123
    };
    option (ext.pack.path.message_composite_rep) = {
        composite_nested: {
            composite_recursive: {
                composite_fixed32: 2000000000
            }
        }
    };
    option (ext.pack.path.message_composite_rep) = {
        composite_nested: {
            composite_recursive: {
                composite_fixed32: 4000000000
            }
        }
    };

    uint64 field_uint64 = 1 [jstype = JS_STRING];
    repeated double field_double_rep = 4200 [packed = true];
    string field_string = 1337;
    NestedMsg nested_first = 14;
    repeated NestedMsg nested_rest = 16;
    map<string, google.protobuf.Empty> aMap = 17;

    oneof OneOf {
        option (ext.pack.path.oneof_string) = "a string option";
        option (ext.pack.path.oneof_composite) = {
            composite_float: -0.123
        };
        option (ext.pack.path.oneof_composite_rep) = {
            composite_nested: {
                composite_recursive: {
                    composite_fixed32: 2000000000
                }
            }
        };
        option (ext.pack.path.oneof_composite_rep) = {
            composite_nested: {
                composite_recursive: {
                    composite_fixed32: 4000000000
                }
            }
        };

        AMessageFor3 one_case_a = 2;
        AMessageFor3 one_case_b = 3;
        int32 one_int32 = 4;
    }

    enum NestedEnum {
        AAA = 0;
        qQQ = -13;
        EEE = 3;
        AbA = 4;
    }

    message NestedMsg {
        option deprecated = false;

        AMessageFor3 nested_rec_msg = 15;
        NestedMsg nested_rec_nested = 64;

        message AlsoNested {
            enum AlsoNested {
                AlsoNestedV = 0;
            }
        }
    }

    reserved 100, 102 to 200, 5000 to max;
    reserved "a_reserved_name", "b_rasdfsdname", "as_res_c";
}

message QQ {
    AMessageFor3.NestedMsg someval = 1 [
        deprecated = false,
        (ext.pack.path.field_composite) = {
            composite_nested: {
                composite_fixed32: 153476
                composite_recursive: {
                }
            }
        },
        (ext.pack.path.field_composite_rep) = {
            composite_nested: {
            }
        },
        (ext.pack.path.field_composite_rep) = {
            composite_nested: {
            }
        }
    ];
}

service SomeService {
    option (ext.pack.path.service_string) = "asdas";
    option (ext.pack.path.service_composite) = {
        composite_float: -0.123
    };
    option (ext.pack.path.service_composite_rep) = {
        composite_nested: {
            composite_recursive: {
                composite_fixed32: 13
            }
        }
    };
    option (ext.pack.path.service_composite_rep) = {
        composite_nested: {
            composite_fixed32: 12332
            composite_recursive: {
                composite_fixed32: 4323623
            }
        }
    };

    rpc Basic (AMessageFor3) returns (AMessageFor3) {
        option (ext.pack.path.method_float) = 1.0E10;
        option (ext.pack.path.method_float) = 1.1E8;
        option (ext.pack.path.method_composite) = {
            composite_bool: true
        };
        option (ext.pack.path.method_composite_rep) = {
            composite_float: 1.23
        };
        option (ext.pack.path.method_composite_rep) = {
            composite_string: "a string"
            composite_nested: {
                composite_fixed32: 42
                composite_recursive: {
                    composite_fixed32: 12
                    composite_recursive: {
                        composite_fixed32: 987
                    }
                }
            }
            CompositeGroup: {
                grouped_sfixed32: -123
                grouped_uint64: 10000000000000000000
            }
        };
        option (google.api.http) = {
            get: "/echo"
            additional_bindings: {
                get: "/echo/{field_string}"
            }
            additional_bindings: {
                post: "/echo"
            }
            additional_bindings: {
                delete: "/echo"
            }
        };
    };

    rpc BasicToStream (google.protobuf.Timestamp) returns (stream QQ);

    rpc StreamToBasic (stream QQ) returns (AMessageFor3.NestedMsg);

    rpc StreamToStream (stream AMessageFor3.NestedMsg) returns (stream google.protobuf.Empty);
}
