import {fullyQualifiedName} from '../../lib/syntax-tree/names';
import {Type, TypeName} from '../../lib/api';

describe('names', () => {
  describe('fullyQualifiedName', () => {

    it('returns name when parent is null', () => {
      expect(fullyQualifiedName(null, 'foo')).toEqual('foo');
    });

    it('returns parent fqn + name when parent is passed', () => {
      expect(fullyQualifiedName({fqn: 'parent.fqn'} as Type, 'foo')).toEqual('parent.fqn.foo');
    });

    it('returns dot prefixed package name + name when parent is file', () => {
      expect(fullyQualifiedName({typeName: TypeName.File, package: 'pkg.fqn'} as Type, 'foo')).toEqual('.pkg.fqn.foo');
    });

    it('returns dot prefixed package name + name when package name is empty', () => {
      expect(fullyQualifiedName({typeName: TypeName.File, package: ''} as Type, 'foo')).toEqual('.foo');
    });

  });
});
