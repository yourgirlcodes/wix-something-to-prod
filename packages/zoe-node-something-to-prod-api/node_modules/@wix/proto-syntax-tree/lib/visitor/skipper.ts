import {Skipper, Visitor, visitorMethods} from './index';
import {Type} from '../api';

type VisitFunc = (elem: Type) => void | boolean;

export function skip(visitor: Visitor, skipper: Skipper): Visitor {
  const result: Visitor = {};

  for (const method of visitorMethods) {
    const visitorFunc = visitor[method] as VisitFunc;
    const skipperFunc = skipper[method] as VisitFunc;
    if (skipperFunc) {
      result[method] = function (elem) {
        const cont = skipperFunc.call(skipper, elem);
        if (cont === false) {
          return false;
        }
        if (visitorFunc) {
          return visitorFunc.call(visitor, elem);
        }
      };

    } else if (visitorFunc) {
      result[method] = function (elem) {
        return visitorFunc.call(visitor, elem);
      };
    }
  }
  return result;
}
