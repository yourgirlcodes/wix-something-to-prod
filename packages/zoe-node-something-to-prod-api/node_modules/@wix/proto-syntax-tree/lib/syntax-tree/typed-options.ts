import {OptionType, TypedOption, RepeatedTypedOption} from '../api';

export class TypedOptions {
  static file<T>(extensionNumber: number): TypedOption<OptionType.FileOptions, T> {
    return {
      extensionNumber,
      optionType: OptionType.FileOptions,
      repeated: false,
    };
  }

  static service<T>(extensionNumber: number): TypedOption<OptionType.ServiceOptions, T> {
    return {
      extensionNumber,
      optionType: OptionType.ServiceOptions,
      repeated: false,
    };
  }

  static method<T>(extensionNumber: number): TypedOption<OptionType.MethodOptions, T> {
    return {
      extensionNumber,
      optionType: OptionType.MethodOptions,
      repeated: false,
    };
  }

  static message<T>(extensionNumber: number): TypedOption<OptionType.MessageOptions, T> {
    return {
      extensionNumber,
      optionType: OptionType.MessageOptions,
      repeated: false,
    };
  }

  static enum<T>(extensionNumber: number): TypedOption<OptionType.EnumOptions, T> {
    return {
      extensionNumber,
      optionType: OptionType.EnumOptions,
      repeated: false,
    };
  }

  static enumValue<T>(extensionNumber: number): TypedOption<OptionType.EnumValueOptions, T> {
    return {
      extensionNumber,
      optionType: OptionType.EnumValueOptions,
      repeated: false,
    };
  }

  static field<T>(extensionNumber: number): TypedOption<OptionType.FieldOptions, T> {
    return {
      extensionNumber,
      optionType: OptionType.FieldOptions,
      repeated: false,
    };
  }

  static oneOf<T>(extensionNumber: number): TypedOption<OptionType.OneofOptions, T> {
    return {
      extensionNumber,
      optionType: OptionType.OneofOptions,
      repeated: false,
    };
  }
}

export class RepeatedTypedOptions {
  static file<T>(extensionNumber: number): RepeatedTypedOption<OptionType.FileOptions, T> {
    return {
      extensionNumber,
      optionType: OptionType.FileOptions,
      repeated: true,
    };
  }

  static service<T>(extensionNumber: number): RepeatedTypedOption<OptionType.ServiceOptions, T> {
    return {
      extensionNumber,
      optionType: OptionType.ServiceOptions,
      repeated: true,
    };
  }

  static method<T>(extensionNumber: number): RepeatedTypedOption<OptionType.MethodOptions, T> {
    return {
      extensionNumber,
      optionType: OptionType.MethodOptions,
      repeated: true,
    };
  }

  static message<T>(extensionNumber: number): RepeatedTypedOption<OptionType.MessageOptions, T> {
    return {
      extensionNumber,
      optionType: OptionType.MessageOptions,
      repeated: true,
    };
  }

  static enum<T>(extensionNumber: number): RepeatedTypedOption<OptionType.EnumOptions, T> {
    return {
      extensionNumber,
      optionType: OptionType.EnumOptions,
      repeated: true,
    };
  }

  static enumValue<T>(extensionNumber: number): RepeatedTypedOption<OptionType.EnumValueOptions, T> {
    return {
      extensionNumber,
      optionType: OptionType.EnumValueOptions,
      repeated: true,
    };
  }

  static field<T>(extensionNumber: number): RepeatedTypedOption<OptionType.FieldOptions, T> {
    return {
      extensionNumber,
      optionType: OptionType.FieldOptions,
      repeated: true,
    };
  }

  static oneOf<T>(extensionNumber: number): RepeatedTypedOption<OptionType.OneofOptions, T> {
    return {
      extensionNumber,
      optionType: OptionType.OneofOptions,
      repeated: true,
    };
  }
}
