import {BaseType} from './base-type';
import {SyntaxTreeImpl} from './index';
import {FieldTypeFactory} from './field-type';
import {Extension, OptionType, FieldType, ProtoFile, TypeName} from '../api';
import {PathInfo, SourceCodeIndex} from './source-code-index';
import {DetailedSourceCodeInfo, initDetailedSourceCode} from './source-code-details';
import {FieldDescriptorProto} from '../descriptor';

export class ExtensionImpl extends BaseType implements Extension {
  readonly typeName = TypeName.Extension;
  private _fieldType?: FieldType;
  private readonly descriptor: FieldDescriptorProto;
  readonly detailedSourceCode: DetailedSourceCodeInfo;

  constructor(
    readonly st: SyntaxTreeImpl,
    descriptor: FieldDescriptorProto,
    parent: ProtoFile,
    pathInfo: PathInfo,
    sourceIdx: SourceCodeIndex,
  ) {
    super(descriptor, parent);
    this.descriptor = descriptor;
    this.parent = parent;
    this.optionType = toOptionType(descriptor.extendee!);
    this.detailedSourceCode = initDetailedSourceCode(pathInfo, sourceIdx, this);

    st.addType(this);
    st.addOption(this);
  }

  get fieldType(): FieldType {
    if (!this._fieldType) {
      this._fieldType = FieldTypeFactory.createFieldTypeFromDescriptor(this.st, this.descriptor);
    }
    return this._fieldType;
  }

  get file() {
    return this.parent;
  }

  get number() {
    return this.descriptor.number;
  }

  toJSON() {
    return {
      typeName: this.typeName,
      name: this.name,
      number: this.number,
      fieldType: this.fieldType,
      optionType: this.optionType ? OptionType[this.optionType] : undefined,
    };
  }

  readonly parent: ProtoFile;
  readonly optionType: OptionType | undefined;
}

function toOptionType(extendee: string): OptionType | undefined {
  switch (extendee) {
    case '.google.protobuf.FileOptions':
      return OptionType.FileOptions;
    case '.google.protobuf.ServiceOptions':
      return OptionType.ServiceOptions;
    case '.google.protobuf.MethodOptions':
      return OptionType.MethodOptions;
    case '.google.protobuf.MessageOptions':
      return OptionType.MessageOptions;
    case '.google.protobuf.EnumOptions':
      return OptionType.EnumOptions;
    case '.google.protobuf.FieldOptions':
      return OptionType.FieldOptions;
    case '.google.protobuf.OneofOptions':
      return OptionType.OneofOptions;
    case '.google.protobuf.EnumValueOptions':
      return OptionType.EnumValueOptions;
  }
  return undefined;
}
