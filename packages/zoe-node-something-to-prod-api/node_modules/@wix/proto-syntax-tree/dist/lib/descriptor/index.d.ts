import * as pb from 'google-protobuf/google/protobuf/descriptor_pb';
export interface FileDescriptorSet {
    fileList: Iterable<FileDescriptorProto>;
}
export interface FileDescriptorProto {
    name: string;
    package: string;
    syntax: string;
    sourceCodeInfo?: SourceCodeInfo;
    extensionList: Iterable<FieldDescriptorProto>;
    messageTypeList: Iterable<DescriptorProto>;
    enumTypeList: Iterable<EnumDescriptorProto>;
    serviceList: Iterable<ServiceDescriptorProto>;
    options?: FileOptions;
}
export declare type CustomOptions = {
    [extension: number]: any;
};
export interface CustomOptionsContainer {
    customOptions: CustomOptions;
}
export declare type ProtoOptions<T> = T & CustomOptionsContainer;
export declare type FileOptions = ProtoOptions<{
    javaPackage?: string;
    javaOuterClassname?: string;
    javaMultipleFiles?: boolean;
    javaGenerateEqualsAndHash?: boolean;
    javaStringCheckUtf8?: boolean;
    optimizeFor?: pb.FileOptions.OptimizeMode;
    goPackage?: string;
    ccGenericServices?: boolean;
    javaGenericServices?: boolean;
    pyGenericServices?: boolean;
    phpGenericServices?: boolean;
    deprecated?: boolean;
    ccEnableArenas?: boolean;
    objcClassPrefix?: string;
    csharpNamespace?: string;
    swiftPrefix?: string;
    phpClassPrefix?: string;
    phpNamespace?: string;
    phpMetadataNamespace?: string;
    rubyPackage?: string;
}>;
export interface DescriptorProto {
    name: string;
    fieldList: Iterable<FieldDescriptorProto>;
    extensionList: Iterable<FieldDescriptorProto>;
    nestedTypeList: Iterable<DescriptorProto>;
    enumTypeList: Iterable<EnumDescriptorProto>;
    extensionRangeList: Iterable<ExtensionRange>;
    oneofDeclList: Iterable<OneofDescriptorProto>;
    options?: MessageOptions;
    reservedRangeList: Iterable<ReservedRange>;
    reservedNameList: Iterable<string>;
}
export declare type MessageOptions = ProtoOptions<{
    messageSetWireFormat?: boolean;
    noStandardDescriptorAccessor?: boolean;
    deprecated?: boolean;
    mapEntry?: boolean;
}>;
export interface FieldDescriptorProto {
    name: string;
    number: number;
    label: pb.FieldDescriptorProto.Label;
    type: pb.FieldDescriptorProto.Type;
    typeName?: string;
    extendee?: string;
    defaultValue?: string;
    oneofIndex?: number;
    jsonName: string;
    options?: FieldOptions;
    proto3Optional?: boolean;
}
export declare type FieldOptions = ProtoOptions<{
    ctype?: pb.FieldOptions.CType;
    packed?: boolean;
    jstype?: pb.FieldOptions.JSType;
    lazy?: boolean;
    deprecated?: boolean;
    weak?: boolean;
}>;
export interface EnumDescriptorProto {
    name: string;
    valueList: Iterable<EnumValueDescriptorProto>;
    options?: EnumOptions;
    reservedRangeList: Iterable<EnumReservedRange>;
    reservedNameList: Iterable<string>;
}
export declare type EnumOptions = ProtoOptions<{
    allowAlias?: boolean;
    deprecated?: boolean;
}>;
export interface ServiceDescriptorProto {
    name: string;
    methodList: Iterable<MethodDescriptorProto>;
    options?: ServiceOptions;
}
export declare type ServiceOptions = ProtoOptions<{
    deprecated?: boolean;
}>;
export interface MethodDescriptorProto {
    name: string;
    inputType: string;
    outputType: string;
    options?: MethodOptions;
    clientStreaming?: boolean;
    serverStreaming?: boolean;
}
export declare type MethodOptions = ProtoOptions<{
    deprecated?: boolean;
    idempotencyLevel?: pb.MethodOptions.IdempotencyLevel;
}>;
export interface OneofDescriptorProto {
    name: string;
    options?: OneofOptions;
}
export declare type OneofOptions = CustomOptionsContainer;
export interface EnumValueDescriptorProto {
    name: string;
    number: number;
    options?: EnumValueOptions;
}
export declare type EnumValueOptions = ProtoOptions<{
    deprecated?: boolean;
}>;
export interface SourceCodeInfo {
    locationList: Iterable<Location>;
}
export interface Location {
    pathList: number[];
    spanList: number[];
    leadingComments: string;
    trailingComments: string;
    leadingDetachedCommentsList: string[];
}
export interface ExtensionRange {
    start: number;
    end: number;
    options?: ExtensionRangeOptions;
}
export declare type ExtensionRangeOptions = CustomOptionsContainer;
export interface ReservedRange {
    start: number;
    end: number;
}
export interface EnumReservedRange {
    start: number;
    end: number;
}
