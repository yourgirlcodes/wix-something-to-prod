import { Reserved, Range } from '../api';
declare abstract class BaseReservedImpl implements Reserved {
    private readonly descriptor;
    constructor(descriptor: {
        reservedRangeList: Iterable<Range>;
        reservedNameList: Iterable<string>;
    });
    get reservedNames(): Iterable<string>;
    get reservedNumbers(): Iterable<Range>;
    isReservedName(name: string): boolean;
    isReservedNumber(num: number): boolean;
    protected abstract isNumInRange(num: number, range: Range): boolean;
}
export declare class ReservedWithExclusiveRange extends BaseReservedImpl {
    protected isNumInRange(num: number, range: Range): boolean;
}
export declare class ReservedWithInclusiveRange extends BaseReservedImpl {
    protected isNumInRange(num: number, range: Range): boolean;
}
export {};
