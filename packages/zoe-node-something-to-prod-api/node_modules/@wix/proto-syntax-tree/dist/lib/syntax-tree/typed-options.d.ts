import { OptionType, TypedOption, RepeatedTypedOption } from '../api';
export declare class TypedOptions {
    static file<T>(extensionNumber: number): TypedOption<OptionType.FileOptions, T>;
    static service<T>(extensionNumber: number): TypedOption<OptionType.ServiceOptions, T>;
    static method<T>(extensionNumber: number): TypedOption<OptionType.MethodOptions, T>;
    static message<T>(extensionNumber: number): TypedOption<OptionType.MessageOptions, T>;
    static enum<T>(extensionNumber: number): TypedOption<OptionType.EnumOptions, T>;
    static enumValue<T>(extensionNumber: number): TypedOption<OptionType.EnumValueOptions, T>;
    static field<T>(extensionNumber: number): TypedOption<OptionType.FieldOptions, T>;
    static oneOf<T>(extensionNumber: number): TypedOption<OptionType.OneofOptions, T>;
}
export declare class RepeatedTypedOptions {
    static file<T>(extensionNumber: number): RepeatedTypedOption<OptionType.FileOptions, T>;
    static service<T>(extensionNumber: number): RepeatedTypedOption<OptionType.ServiceOptions, T>;
    static method<T>(extensionNumber: number): RepeatedTypedOption<OptionType.MethodOptions, T>;
    static message<T>(extensionNumber: number): RepeatedTypedOption<OptionType.MessageOptions, T>;
    static enum<T>(extensionNumber: number): RepeatedTypedOption<OptionType.EnumOptions, T>;
    static enumValue<T>(extensionNumber: number): RepeatedTypedOption<OptionType.EnumValueOptions, T>;
    static field<T>(extensionNumber: number): RepeatedTypedOption<OptionType.FieldOptions, T>;
    static oneOf<T>(extensionNumber: number): RepeatedTypedOption<OptionType.OneofOptions, T>;
}
