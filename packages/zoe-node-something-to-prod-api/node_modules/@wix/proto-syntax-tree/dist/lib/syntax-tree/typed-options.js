"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.RepeatedTypedOptions = exports.TypedOptions = void 0;
const api_1 = require("../api");
class TypedOptions {
    static file(extensionNumber) {
        return {
            extensionNumber,
            optionType: api_1.OptionType.FileOptions,
            repeated: false,
        };
    }
    static service(extensionNumber) {
        return {
            extensionNumber,
            optionType: api_1.OptionType.ServiceOptions,
            repeated: false,
        };
    }
    static method(extensionNumber) {
        return {
            extensionNumber,
            optionType: api_1.OptionType.MethodOptions,
            repeated: false,
        };
    }
    static message(extensionNumber) {
        return {
            extensionNumber,
            optionType: api_1.OptionType.MessageOptions,
            repeated: false,
        };
    }
    static enum(extensionNumber) {
        return {
            extensionNumber,
            optionType: api_1.OptionType.EnumOptions,
            repeated: false,
        };
    }
    static enumValue(extensionNumber) {
        return {
            extensionNumber,
            optionType: api_1.OptionType.EnumValueOptions,
            repeated: false,
        };
    }
    static field(extensionNumber) {
        return {
            extensionNumber,
            optionType: api_1.OptionType.FieldOptions,
            repeated: false,
        };
    }
    static oneOf(extensionNumber) {
        return {
            extensionNumber,
            optionType: api_1.OptionType.OneofOptions,
            repeated: false,
        };
    }
}
exports.TypedOptions = TypedOptions;
class RepeatedTypedOptions {
    static file(extensionNumber) {
        return {
            extensionNumber,
            optionType: api_1.OptionType.FileOptions,
            repeated: true,
        };
    }
    static service(extensionNumber) {
        return {
            extensionNumber,
            optionType: api_1.OptionType.ServiceOptions,
            repeated: true,
        };
    }
    static method(extensionNumber) {
        return {
            extensionNumber,
            optionType: api_1.OptionType.MethodOptions,
            repeated: true,
        };
    }
    static message(extensionNumber) {
        return {
            extensionNumber,
            optionType: api_1.OptionType.MessageOptions,
            repeated: true,
        };
    }
    static enum(extensionNumber) {
        return {
            extensionNumber,
            optionType: api_1.OptionType.EnumOptions,
            repeated: true,
        };
    }
    static enumValue(extensionNumber) {
        return {
            extensionNumber,
            optionType: api_1.OptionType.EnumValueOptions,
            repeated: true,
        };
    }
    static field(extensionNumber) {
        return {
            extensionNumber,
            optionType: api_1.OptionType.FieldOptions,
            repeated: true,
        };
    }
    static oneOf(extensionNumber) {
        return {
            extensionNumber,
            optionType: api_1.OptionType.OneofOptions,
            repeated: true,
        };
    }
}
exports.RepeatedTypedOptions = RepeatedTypedOptions;
//# sourceMappingURL=typed-options.js.map