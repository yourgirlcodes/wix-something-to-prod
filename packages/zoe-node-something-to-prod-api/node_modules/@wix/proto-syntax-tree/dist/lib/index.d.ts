/// <reference types="node" />
import { SyntaxTree } from './api';
import { FileDescriptorSet } from './descriptor';
export interface GenSyntaxTreeOptions {
    includeStdProtos?: boolean;
}
export declare function getStdIncludeProtos(): string[];
export declare function generateSyntaxTreeFromDescriptorSets(fileDescriptorSet: FileDescriptorSet[], mainProtoFolder: string): SyntaxTree;
export declare function generateSyntaxTreeFromDescriptorBuffers(descriptors: Buffer[], mainProtoFolder: string): SyntaxTree;
export declare function generateSyntaxTreeFromDescriptorFiles(mainDescriptorFile: string, mainProtoFolder: string, includeDescriptorFiles: string[]): Promise<SyntaxTree>;
export declare function generateSyntaxTreeFromSource(mainProtoFolder: string, include?: string[]): Promise<SyntaxTree>;
export declare type GenSyntaxTreeFromSourceOptions = {
    mainProtoFolder: string;
    protoFiles?: string[];
    include: string[];
    includeStdProtos?: boolean;
};
export declare function generateSyntaxTreeFrom(opts: GenSyntaxTreeFromSourceOptions): Promise<SyntaxTree>;
