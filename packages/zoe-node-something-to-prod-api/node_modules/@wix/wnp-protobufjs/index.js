const path = require('path');

const pbjsPatched = require('./protobufjs');

hackRequireCacheUnpatchedProtobufjs();

module.exports = pbjsPatched;

function hackRequireCacheUnpatchedProtobufjs() {

  const pbjs = require('protobufjs');
  if (pbjs!==pbjsPatched) {
    Object.keys(pbjs).forEach(key => {
      Object.defineProperty(pbjs, key, {
        get: () => pbjsPatched[key]
      });
    });
  }

  const unpatchedBase = path.dirname(require.resolve('protobufjs'));
  const patchedBase = path.join(__dirname, 'protobufjs');

  Object.keys(require.cache).forEach(key => {
    if (key.startsWith(unpatchedBase)) {
      const patchedKey = path.join(patchedBase, path.relative(unpatchedBase, key));
      require.cache[key] = require.cache[patchedKey];
    }
  });
}
