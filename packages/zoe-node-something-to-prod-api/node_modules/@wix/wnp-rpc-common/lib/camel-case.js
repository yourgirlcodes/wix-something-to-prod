const _ = require('lodash');

function getCamelCaseImpl(stdCase = false) {
  if (stdCase) {
    return stdCamelCase();
  }
  return legacyCamelCase();
}

function legacyCamelCase() {
  const camelCaseRe = /_([a-z])/g;

  /**
   * Converts a string to camel case. (Was taken to be compatible with protobufjs library)
   * @param {string} str String to convert
   * @returns {string} Converted string
   */
  const camelCase = function camelCase(str) {
    return str.substring(0, 1)
      + str.substring(1)
        .replace(camelCaseRe, function ($0, $1) {
          return $1.toUpperCase();
        });
  };


  return {
    fieldCamelCase: camelCase,
    methodCamelCase: _.camelCase
  };
}

function stdCamelCase() {
  //compatible with protobuf's ToJsonName implementation
  function toJsonName(str) {
    let res = '';
    let upCaseNext = false;

    for (let i = 0; i < str.length; i++) {
      const ch = str[i];
      if (ch === '_') {
        upCaseNext = true;
      } else if (upCaseNext) {
        res += ch.toUpperCase();
        upCaseNext = false;
      } else {
        res += ch;
      }
    }
    return res;
  }

  return {
    fieldCamelCase: toJsonName,
    methodCamelCase: _.camelCase
  };
}

module.exports = {getCamelCaseImpl};
