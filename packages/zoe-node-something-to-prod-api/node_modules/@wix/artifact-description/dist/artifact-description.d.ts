import { ArtifactKey } from './artifact-key';
import { Contributor } from './contributor';
export interface ProtoTargetDescription {
}
export interface NpmTargetDescription {
    registryAddress?: string;
    publishAccess: 'public' | 'restricted';
    preserveSemverRange: boolean;
}
export interface ServerlessTargetDescription {
}
export interface DockerTargetDescription {
    dockerfilePath: string;
    customImageName?: string;
    customTags: string[];
    autogeneratedDockerfile: boolean;
}
export interface StaticTargetDescription {
    folderToUpload: string;
}
export declare enum Platforms {
    BUSINESS_MANAGER = "business-manager",
    DEV_PORTAL = "dev-portal",
    DEV_CENTER = "dev-center",
    ACCOUNT_MANAGER = "account-manager"
}
export declare enum TargetKind {
    NPM = "npm",
    STATIC = "static",
    DOCKER = "docker",
    PROTO = "proto",
    SERVERLESS = "serverless"
}
export interface PreviewUrl {
    title: string;
    url: string;
}
/**
 * The details of the production artifact that is defined by a package in a monorepo. It is similar in
 * principle to WixArtifactSchema with this major difference: ArtifactDescription is intended to be programmatically.
 * Specifically, the extractDescription() function defined in this package will read a package.json file
 * (and possibly a sibling pom.xml file, for backward compatibility) and return a fully initialized ArtifactDescription
 * object.
 */
export interface ArtifactDescription {
    contributors?: Contributor[];
    key?: ArtifactKey;
    previewUrls: (string | PreviewUrl)[];
    platforms: Platforms[];
    targets: {
        [TargetKind.DOCKER]?: DockerTargetDescription;
        [TargetKind.STATIC]?: StaticTargetDescription;
        [TargetKind.NPM]?: NpmTargetDescription;
        [TargetKind.PROTO]?: ProtoTargetDescription;
        [TargetKind.SERVERLESS]?: ServerlessTargetDescription;
    };
}
