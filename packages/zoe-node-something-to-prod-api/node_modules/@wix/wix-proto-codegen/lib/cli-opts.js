const {isAbsolute, join} = require('path');

module.exports = argv => {

  const isModuleId = s => s && s.startsWith('@wix/');

  const args = require('yargs')
    .command('$0', 'generate JS and TS code', {
      dir: {
        describe: 'target directory for generated code',
        default: './dist'
      },
      filename: {
        describe: 'generated code filename',
        default: 'proto-generated'
      },
      module: {
        describe: 'root module (path or module id)',
      },
      stringEnums: {
        describe: 'use strings for enum literals',
        type: 'boolean',
        default: false
      },
      stringLongs: {
        describe: 'use strings for int 64 types',
        type: 'boolean',
        default: false
      },
      tsClasses: {
        describe: 'generate both class and interface for messages in TypeScript declaration file',
        type: 'boolean',
        default: false
      },
      skipOptionsValidation: {
        describe: 'skip validation of option types in specific modules. If no module is specified - skips validation in all modules',
        type: 'array',
        defaultDescription: 'options are validated in all modules'
      },
      withAspectStore: {
        describe: 'in generated TypeScript service interface methods use `@wix/wix-aspects#AspectStore` for aspects argument instead of `object`. enabled by default',
        type: 'boolean',
      },
      skipClientServer: {
        describe: 'does not generate client and server specific TypesScript definitions in ./client and ./server folders',
        type: 'boolean',
      },
      legacy: {
        describe: 'disables all the recently added features: `--withAspectStore, --skipClientServer, --withAspectlessServices`',
        type: 'boolean',
        default: false,
      },
      generateVerify: {
        describe: 'forces generation of MessageClass.verify(...) static methods',
        type: 'boolean',
      },
      withAspectlessServices: {
        describe: 'in generated client service interface, generate methods overload for that allows calling them without `aspects`. enabled by default',
        type: 'boolean',
      },
      tsExportDefault: {
        describe: 'causes the generated TypeScript declaration file to have "export default" instead of "export ="',
        type: 'boolean',
      },
      stdCase: {
        describe: 'use standard camel case for field names and methods to ensure interop with Scala services',
        type: 'boolean',
        default: false
      }
    }).require('module').parse(argv);

  const moduleDir = args.module ? (isModuleId(args.module) ? args.module : (isAbsolute(args.module) ? args.module : join(process.cwd(), args.module))) : process.cwd();

  const base = isModuleId(moduleDir) ? process.cwd() : moduleDir;
  const dir = args.dir ? (isAbsolute(args.dir) ? args.dir : join(base, args.dir)) : join(base, 'dist');
  const stringEnums = args.stringEnums;
  const stringLongs = args.stringLongs;
  const tsClasses = args.tsClasses;
  const skipOptionsValidation = args.skipOptionsValidation;
  const legacy = args.legacy;
  const withAspectStore = typeof args.withAspectStore !== 'undefined' ? args.withAspectStore : !legacy;
  const skipClientServer = args.skipClientServer === undefined ? legacy : args.skipClientServer;
  const generateVerify = typeof args.generateVerify !== 'undefined' ? args.generateVerify : legacy;
  const withAspectlessServices = typeof args.withAspectlessServices === 'undefined' ? !legacy : args.withAspectlessServices;
  const tsExportDefault = typeof args.tsExportDefault === 'undefined' ? false : args.tsExportDefault;
  const stdCase = args.stdCase;

  return {
    target: {
      name: args.filename,
      dir
    },
    moduleDir,
    stringEnums,
    stringLongs,
    tsClasses,
    skipOptionsValidation,
    withAspectStore,
    skipClientServer,
    generateVerify,
    withAspectlessServices,
    tsExportDefault,
    stdCase,
  };
};
