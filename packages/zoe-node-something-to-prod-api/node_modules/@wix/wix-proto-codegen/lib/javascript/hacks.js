const {getCamelCaseImpl} = require('@wix/wnp-rpc-common');

const legacyCamelCase = getCamelCaseImpl(false).fieldCamelCase;
const stdCamelCase = getCamelCaseImpl(true).fieldCamelCase;

// protobufjs generates extension fields with preceding '.' - it's a hack to strip them.
function fixupName(name) {
  return name.replace('.', '');
}

// since we're not using IParseOptions#keepCase, the loaded AST has all field names converted to camelCase
// (which is fine for the generated code), validation code must handle lookup via the original casing
function findFieldIgnoreCasing(fieldsObj, name) {
  return fieldsObj && (fieldsObj[legacyCamelCase(name)] ||
    fieldsObj[stdCamelCase(name)]);
}

module.exports = {fixupName, findFieldIgnoreCasing};
