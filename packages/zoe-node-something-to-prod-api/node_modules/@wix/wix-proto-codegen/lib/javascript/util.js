const protobuf = require('@wix/wnp-protobufjs'),
  {util: runtimeUtil} = require('@wix/wix-proto-runtime-toolkit'),
  {version} = require('../../package.json'),
  e = require('estree-builder'),
  _ = require('lodash');

const EMPTY_OBJ = e('object-raw', []);

const BUILT_IN_IDENTIFIER = '__builtIn';

function firstDefinedEnumLiteral(enumDef, {stringEnums}) {
  let id = 0;
  if (!enumDef.valuesById[id]) {
    id = _(enumDef.values).values().min();
  }
  return stringEnums ? e.str(enumDef.valuesById[id]) : e.number(id);
}

function escapeIdentifier(string) {
  return string.indexOf('.') >= 0 ? `'${string}'` : string;
}

function resolveNamespace(node) {

  function resolveRec(def, acc = []) {
    if (def) {
      switch (def.__proto__) {
        case protobuf.Namespace.prototype:
          acc.push(def.name);
          resolveRec(def.parent, acc);
          break;
        case protobuf.Type.prototype:
        case protobuf.Service.prototype:
          if (def !== node) {
            acc.push(def.name);
          }
          resolveRec(def.parent, acc);
          break;
        default:
          resolveRec(def.parent, acc);
      }
    }
    return acc;
  }

  return resolveRec(node).reverse();
}

function set(path, value) {
  return e(';', e('=', id(path), value));
}

function __options__(reflectionObject) {
  return protoProp(id([reflectionObject.name, 'prototype']), '__options__', id('$root', '__options'));
}

function __root__(reflectionObject) {
  return protoProp(id([reflectionObject.name, 'prototype']), '__root__', id('$root'));
}

function protoProp(ident, key, value) {
  return e(';', e.call(
    id(BUILT_IN_IDENTIFIER, 'Object.defineProperty'),
    [
      ident,
      e.str(key),
      e('obj-raw', [
        e('obj-prop', e.id('value'), value),
        e('obj-prop', e.id('enumerable'), e('false')),
        e('obj-prop', e.id('configurable'), e('false'))])
    ]));
}

function __fqn__(service) {
  return protoProp(id([service.name, 'prototype']), '__fqn__', e.str(runtimeUtil.fqn(service)));
}

function id(...args) {
  const toId = s => typeof s === 'string' ? e.id(s) : s;

  const path = [];
  args.forEach(arg => {
    if (typeof arg === 'string') {
      path.push(...arg.split('.'));
    } else if (Array.isArray(arg)) {
      path.push(...arg);
    } else {
      path.push(arg);
    }
  });

  if (path.length === 1) {
    return toId(path[0]);
  } else {
    return path.reduce((acc, p) => e('.', typeof acc === 'string' ? e.id(acc) : acc, toId(p)));
  }
}

function fqn(type) {
  let arr;
  if (typeof type === 'string') {
    arr = type.split('.');
  } else {
    arr = resolveNamespace(type);
    arr.push(type.name);
  }
  arr.unshift('$root');

  return id(arr);
}

function __proto(className, fqn) {
  return protoProp(id([className, 'prototype']), '__proto', __protoFunc(fqn));
}

function __protoFunc(fqn) {
  return e.arrow([id('pbjs')], [e.return(e.call(e.call(id('$root.__lookup'), [id('pbjs')]), [e.str(fqn)]))]);
}

const and = (left, right) => e('&&', left, right);
const or = (left, right) => e('||', left, right);

const getGeneratorVersion = () => version;

module.exports = {
  resolveNamespace,
  set,
  EMPTY_OBJ,
  id,
  fqn,
  protoProp,
  __proto,
  __protoFunc,
  BUILT_IN_IDENTIFIER,
  and,
  or,
  __fqn__,
  __options__,
  __root__,
  getGeneratorVersion,
  firstDefinedEnumLiteral,
  escapeIdentifier,
};
