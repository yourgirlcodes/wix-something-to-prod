const {util} = require('@wix/wix-proto-runtime-toolkit');
const options = util.options('wix.http');
const {throwError} = require('./validation-error');
const {findFieldIgnoreCasing} = require('./javascript/hacks');

const FROM_OPTION = 'infer_fieldmask_from';

function validateMessage(type) {
  const annotated = Object.values(type.fields).map(field => options(field).find(FROM_OPTION).first).filter(e => !!e);
  if (annotated.length > 1) {
    throwError(type, 'cannot have more than a single google.protobuf.FieldMask field annotated with wix.http.infer_fieldmask_from');
  }
}

function validateField(field) {
  const inferFromOption = options(field).find(FROM_OPTION);
  if (inferFromOption.length > 1) {
    throwError(field, 'can not have multiple wix.http.infer_fieldmask_from annotations on the same field');
  }

  const inferFrom = inferFromOption.first;
  if (inferFrom) {
    const type = field.parent.resolveAll();
    const referencedField = findFieldIgnoreCasing(type.fields, inferFrom);
    if (!referencedField) {
      throwError(field, `wix.http.infer_fieldmask_from references unknown field "${inferFrom}"`);
    }
  }
}

module.exports = {validateField, validateMessage};
