import util from 'util';
import {execFile} from 'child_process';
import tmp from 'tmp';

const exec = util.promisify(execFile);

export async function runGit(cwd: string, ...args: string[]) {
  try {
    const res = await exec('git', args, {cwd});
    return res.stdout.trim();
  } catch (err) {
    throw new Error(`failed to run git ${err}`);
  }
}

export async function gitIsDiff(cwd: string, baseBranch: string) {
  try {
    await runGit(cwd, 'diff', '--quiet', baseBranch, '.');
    return false;
  } catch (e) {
    return true;
  }
}

export async function gitGetRootDir(cwd: string) {
  try {
    return await runGit(cwd, 'rev-parse', '--show-toplevel');
  } catch (e) {
    return undefined;
  }
}

export async function gitDirExistsInBranch(cwd: string, path: string, branch: string): Promise<boolean> {
  try {
    const dirs = await runGit(cwd, 'ls-tree', '--name-only', branch, '-d', path);
    return !!dirs;
  } catch (err) {
    console.error(`gitDirExistsInBranch error: ${err}`);
    return false;
  }
}

export async function gitCreateWorktree(cwd: string, baseBranch: string) {
  const workTreePath = tmp.dirSync({template: 'wt-XXXXXX'}).name;
  await runGit(cwd, 'worktree', 'add', workTreePath, baseBranch, '--no-checkout', '--detach');
  return workTreePath;
}
