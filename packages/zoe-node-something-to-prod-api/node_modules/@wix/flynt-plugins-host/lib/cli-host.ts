import {PluginsCliHost} from '../index';
import {parseCliPluginOptions} from './cli-options';
import {CliOption} from '@wix/flynt-plugin-types';
import assert from 'assert';
import path from 'path';
import {FlyntPluginsHostImpl} from './host';

export class FlyntPluginsCliHostImpl extends FlyntPluginsHostImpl implements PluginsCliHost {
  async loadPluginsFromCli(args: string[]): Promise<void> {
    const cliOptions = await parseCliPluginOptions(args);
    for (const pluginPath of cliOptions.plugins) {
      const actualPath = path.resolve(pluginPath);
      const pluginModule = await import(actualPath);
      await this.loadPluginModule(pluginModule);
    }
  }

  getExtendedCliOptions(): Record<string, CliOption[]> {
    const result: {[plugin: string]: CliOption[]} = {};
    for (const plugin of this.plugins) {
      if (plugin.getCliOptions) {
        const res = plugin.getCliOptions();
        assert(res && Array.isArray(res), `plugin ${plugin.name} returned invalid value from getCliOptions: ${JSON.stringify(res)}`);
        result[plugin.name] = res;
      }
    }
    return result;
  }

  setPluginOptions(name: string, opts: Record<string, string>) {
    const plugin = this.pluginByName.get(name);
    if (plugin && plugin.setOptions) {
      plugin.setOptions(opts);
    }
  }
}
